{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import \"../Dashboard/dashboard.css\";\n// import axios from \"axios\";\n// import Deposit from \"./Deposit\";\n// import FundTransfer from \"./FundTransfer\";\n// import { useNavigate } from \"react-router-dom\";\n// import { AccountContext } from \"../Context/AccountProvider\";\n// import { useContext } from \"react\";\n// import \"../Dashboard/Transaction/transaction.css\";\n// import Loan from \"./Loan\";\n// import { useLocation } from \"react-router-dom\";\n\n// function Dashboard() {\n//   const { account, setAccount } = useContext(AccountContext);\n//   const [loading, setLoading] = useState(true);\n//   const [userDetail, setUserDetails] = useState({});\n//   const [depositPopUp, setDepositPopUp] = useState(false);\n//   const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\n//   const [transactions, setTransactions] = useState([]);\n//   const [loanPopUp, setLoanPopUp] = useState(false);\n//   const location = useLocation();\n//   const { JWTaccount, SetJWTuser } = location.state;\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const userId = SetJWTuser.userId;\n//     sessionStorage.setItem(\"userId\", userId);\n//   }, [SetJWTuser]);\n\n//   useEffect(() => {\n//     if (JWTaccount) {\n//       setAccount(JWTaccount);\n//       setUserDetails(SetJWTuser);\n//       setLoading(false);\n//     } else {\n//       const userId = sessionStorage.getItem(\"userId\");\n//       const token = localStorage.getItem(\"authToken\");\n\n//       if (userId && token) {\n//         axios\n//           .get(`http://localhost:8080/api/account/userid/${userId}`, {\n//             headers: { Authorization: `Bearer ${token}` },\n//           })\n//           .then((response) => {\n//             setAccount(response.data);\n//             setLoading(false);\n//           })\n//           .catch((error) => {\n//             console.error(\"Error fetching account data:\", error);\n//             setLoading(false);\n//           });\n\n//         axios\n//           .get(\"http://localhost:8080/api/users/\" + userId, {\n//             headers: { Authorization: `Bearer ${token}` },\n//           })\n//           .then((response) => {\n//             setUserDetails(response.data);\n//           })\n//           .catch((error) => console.log(error));\n\n//         axios\n//           .get(`http://localhost:8080/api/transaction/${userId}`, {\n//             headers: { Authorization: `Bearer ${token}` },\n//           })\n//           .then((response) => {\n//             setTransactions(response.data);\n//             console.log(response.data);\n\n//             console.log(\"Transaction\");\n//           })\n//           .catch((error) => {\n//             console.log(error);\n//           });\n//       }\n//     }\n//   }, [setAccount]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (!account || Object.keys(account).length === 0) {\n//     return <div>No account data available.</div>;\n//   }\n\n//   const userId = sessionStorage.getItem(\"userId\");\n\n//   return (\n//     <div\n//       className={\n//         depositPopUp || fundTransferPopUp\n//           ? \"Dashboard dashboard-blur\"\n//           : \"Dashboard\"\n//       }\n//     >\n//       <div className=\"dashboard-page-border\">\n//         <div className=\"page-size\">\n//           <div className=\"dashboard-hr\"></div>\n//           <div className=\"nav-bar\">\n//             <div className=\"dashbord-un-bn\">\n//               <span className=\"dashboard-logo\">logo</span>\n//               <span className=\"dashbord-bank-name\">Easy Online Banking</span>\n//               <span className=\"dashbord-userName\">{userDetail.first_Name}</span>\n//               <button className=\"dashbord-user-img\">ðŸ‘¤</button>\n//             </div>\n//             <div className=\"dashboard-hr\"></div>\n//             <div className=\"navbar-page\">\n//               <div className=\"nav-bar-data\">\n//                 <button\n//                   className=\"dashboard sidebtn\"\n//                   onClick={() => navigate(`/dashboard/${userId}`)}\n//                 >\n//                   Dashboard\n//                 </button>\n//                 <button\n//                   className=\"loan sidebtn\"\n//                   onClick={() => setLoanPopUp(true)}\n//                   onMouseOut={() => console.log(\"mouse working\")}\n//                 >\n//                   Loan\n//                 </button>\n//                 <button\n//                   className=\"cards sidebtn\"\n//                   onClick={() => navigate(\"/card\")}\n//                 >\n//                   Cards\n//                 </button>\n//                 <button\n//                   onClick={() => setDepositPopUp(true)}\n//                   className=\"deposit sidebtn\"\n//                 >\n//                   Deposit\n//                 </button>\n//                 <button\n//                   className=\"fund sidebtn\"\n//                   onClick={() => setFundTransferPopUp(true)}\n//                 >\n//                   {\" \"}\n//                   Fund Transfer\n//                 </button>\n//                 <button className=\"bell sidebtn\">Log out</button>\n//               </div>\n//             </div>\n//             {/* Rest of your dashboard content */}\n//             {/* <div className=\"acc-bal\"></div> */}\n//             <div className=\"account-test\">\n//               <div className=\"dashbord-account-Balance\">\n//                 <p className=\" amount\">Account Balance: {account.accBalance}</p>\n//               </div>\n//               <div className=\"account\">\n//                 <div className=\"dashboard-account-Details\">\n//                   <div className=\"user-detail\">\n//                     {/* <p>\n//                     User Name:{\" \"}\n//                     {userDetail.first_Name + \" \" + userDetail.last_Name}\n//                   </p> */}\n//                     <p>Account Number: {account.accNumber}</p>\n//                     {/* <p>Account Type: {account.accType}</p> */}\n//                     <p>Account Created Date: {account.accCreatedAt}</p>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"dashboard-trans-border\">\n//               <p className=\"transaction-header\" key={account.accNumber}>\n//                 Transaction History\n//               </p>\n//               {/* <div className=\"dashboard-hr\"></div>   */}\n//               <div className=\"transaction\">\n//                 <table className=\"transaction-table table\">\n//                   <thead className=\"tr-position\">\n//                     <tr className=\"tr-position\">\n//                       <th className=\"transaction-table sl-no \">Sl No.</th>\n//                       <th className=\"transaction-table details\">\n//                         Transaction Details\n//                       </th>\n//                       <th className=\"transaction-table trans-amount\">Amount</th>\n//                       <th className=\"transaction-table balance\">Balance</th>\n//                       <th className=\"transaction-table date\">Date</th>\n//                     </tr>\n//                   </thead>\n//                   {transactions.length > 0 ? (\n//                     transactions.map((transaction, index) => (\n//                       <tbody className=\"table-body\">\n//                         <tr key={transaction.id} className=\"transaction-head\">\n//                           <td className=\"index\">{index + 1}</td>\n//                           <td className=\"transaction-details\">\n//                             {transaction.transferDetails}\n//                           </td>\n//                           <td className=\"amount-transfered\">\n//                             {transaction.amountTransfered}{\" \"}\n//                             <span className=\"credited\">cr</span>\n//                           </td>\n//                           <td className=\"acc-balance\">{transaction.balance}</td>\n//                           <td className=\"date\">{transaction.transferDate}</td>\n//                         </tr>\n//                       </tbody>\n//                     ))\n//                   ) : (\n//                     <div className=\"no-transaction\">\n//                       {\" \"}\n//                       No Transaction Avaialbel\n//                     </div>\n//                   )}\n//                 </table>\n//               </div>\n//             </div>\n//           </div>\n//           {depositPopUp && <Deposit setDeposit={setDepositPopUp} />}\n//           {fundTransferPopUp && (\n//             <FundTransfer setFundTransfer={setFundTransferPopUp} />\n//           )}\n//           {loanPopUp && <Loan setLoan={setLoanPopUp} />}\n\n//           <div className=\"dashboard-hr\"></div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\nimport React, { useEffect, useState } from \"react\";\nimport \"../Dashboard/dashboard.css\";\nimport axios from \"axios\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { AccountContext } from \"../Context/AccountProvider\";\nimport { useContext } from \"react\";\nimport Deposit from \"./Deposit\";\nimport FundTransfer from \"./FundTransfer\";\nimport Loan from \"./Loan\";\nimport \"../Dashboard/Transaction/transaction.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const {\n    account,\n    setAccount\n  } = useContext(AccountContext);\n  const [loading, setLoading] = useState(true);\n  const [userDetail, setUserDetails] = useState({});\n  const [depositPopUp, setDepositPopUp] = useState(false);\n  const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  const [loanPopUp, setLoanPopUp] = useState(false);\n  const location = useLocation();\n  const {\n    JWTaccount,\n    SetJWTuser\n  } = location.state;\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (SetJWTuser) {\n      const userId = SetJWTuser.userId;\n      sessionStorage.setItem(\"userId\", userId);\n    }\n  }, [SetJWTuser]);\n  useEffect(() => {\n    const userId = sessionStorage.getItem(\"userId\");\n    const token = localStorage.getItem(\"authToken\");\n    if (JWTaccount) {\n      setAccount(JWTaccount);\n      setUserDetails(SetJWTuser);\n      setLoading(false);\n    } else if (userId && token) {\n      axios.get(`http://localhost:8080/api/account/userid/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setAccount(response.data);\n        setLoading(false);\n      }).catch(error => {\n        console.error(\"Error fetching account data:\", error);\n        setLoading(false);\n      });\n      axios.get(`http://localhost:8080/api/users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setUserDetails(response.data);\n      }).catch(error => console.log(error));\n      axios.get(`http://localhost:8080/api/transaction/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setTransactions(response.data);\n      }).catch(error => console.log(error));\n    }\n  }, [setAccount]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 12\n    }, this);\n  }\n  if (!account || Object.keys(account).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No account data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: depositPopUp || fundTransferPopUp ? \"Dashboard dashboard-blur\" : \"Dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-page-border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-size\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-hr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashbord-un-bn\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dashboard-logo\",\n              children: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bank-name\",\n              children: \"Easy Online Banking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"balance-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Account Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"balance-display\",\n            children: [\"\\u20B9\", account.accBalance.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Account Holder Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail\",\n              children: [\"Name: \", userDetail.firstName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail\",\n              children: [\"Email: \", userDetail.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail\",\n              children: [\"Mobile: \", userDetail.mobile]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDepositPopUp(true),\n            children: \"Deposit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setFundTransferPopUp(true),\n            children: \"Fund Transfer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setLoanPopUp(true),\n            children: \"Loan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), depositPopUp && /*#__PURE__*/_jsxDEV(Deposit, {\n          setDepositPopUp: setDepositPopUp,\n          account: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), fundTransferPopUp && /*#__PURE__*/_jsxDEV(FundTransfer, {\n          setFundTransferPopUp: setFundTransferPopUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), loanPopUp && /*#__PURE__*/_jsxDEV(Loan, {\n          setLoanPopUp: setLoanPopUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"3x0Oew8HoRldsmf7NLXflZx4FBo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","useLocation","AccountContext","useContext","Deposit","FundTransfer","Loan","jsxDEV","_jsxDEV","Dashboard","_s","account","setAccount","loading","setLoading","userDetail","setUserDetails","depositPopUp","setDepositPopUp","fundTransferPopUp","setFundTransferPopUp","transactions","setTransactions","loanPopUp","setLoanPopUp","location","JWTaccount","SetJWTuser","state","navigate","userId","sessionStorage","setItem","getItem","token","localStorage","get","headers","Authorization","then","response","data","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","className","accBalance","toFixed","firstName","email","mobile","onClick","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/components/Dashboard/Dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import \"../Dashboard/dashboard.css\";\r\n// import axios from \"axios\";\r\n// import Deposit from \"./Deposit\";\r\n// import FundTransfer from \"./FundTransfer\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { AccountContext } from \"../Context/AccountProvider\";\r\n// import { useContext } from \"react\";\r\n// import \"../Dashboard/Transaction/transaction.css\";\r\n// import Loan from \"./Loan\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// function Dashboard() {\r\n//   const { account, setAccount } = useContext(AccountContext);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [userDetail, setUserDetails] = useState({});\r\n//   const [depositPopUp, setDepositPopUp] = useState(false);\r\n//   const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [loanPopUp, setLoanPopUp] = useState(false);\r\n//   const location = useLocation();\r\n//   const { JWTaccount, SetJWTuser } = location.state;\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const userId = SetJWTuser.userId;\r\n//     sessionStorage.setItem(\"userId\", userId);\r\n//   }, [SetJWTuser]);\r\n\r\n//   useEffect(() => {\r\n//     if (JWTaccount) {\r\n//       setAccount(JWTaccount);\r\n//       setUserDetails(SetJWTuser);\r\n//       setLoading(false);\r\n//     } else {\r\n//       const userId = sessionStorage.getItem(\"userId\");\r\n//       const token = localStorage.getItem(\"authToken\");\r\n\r\n//       if (userId && token) {\r\n//         axios\r\n//           .get(`http://localhost:8080/api/account/userid/${userId}`, {\r\n//             headers: { Authorization: `Bearer ${token}` },\r\n//           })\r\n//           .then((response) => {\r\n//             setAccount(response.data);\r\n//             setLoading(false);\r\n//           })\r\n//           .catch((error) => {\r\n//             console.error(\"Error fetching account data:\", error);\r\n//             setLoading(false);\r\n//           });\r\n\r\n//         axios\r\n//           .get(\"http://localhost:8080/api/users/\" + userId, {\r\n//             headers: { Authorization: `Bearer ${token}` },\r\n//           })\r\n//           .then((response) => {\r\n//             setUserDetails(response.data);\r\n//           })\r\n//           .catch((error) => console.log(error));\r\n\r\n//         axios\r\n//           .get(`http://localhost:8080/api/transaction/${userId}`, {\r\n//             headers: { Authorization: `Bearer ${token}` },\r\n//           })\r\n//           .then((response) => {\r\n//             setTransactions(response.data);\r\n//             console.log(response.data);\r\n\r\n//             console.log(\"Transaction\");\r\n//           })\r\n//           .catch((error) => {\r\n//             console.log(error);\r\n//           });\r\n//       }\r\n//     }\r\n//   }, [setAccount]);\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (!account || Object.keys(account).length === 0) {\r\n//     return <div>No account data available.</div>;\r\n//   }\r\n\r\n//   const userId = sessionStorage.getItem(\"userId\");\r\n\r\n//   return (\r\n//     <div\r\n//       className={\r\n//         depositPopUp || fundTransferPopUp\r\n//           ? \"Dashboard dashboard-blur\"\r\n//           : \"Dashboard\"\r\n//       }\r\n//     >\r\n//       <div className=\"dashboard-page-border\">\r\n//         <div className=\"page-size\">\r\n//           <div className=\"dashboard-hr\"></div>\r\n//           <div className=\"nav-bar\">\r\n//             <div className=\"dashbord-un-bn\">\r\n//               <span className=\"dashboard-logo\">logo</span>\r\n//               <span className=\"dashbord-bank-name\">Easy Online Banking</span>\r\n//               <span className=\"dashbord-userName\">{userDetail.first_Name}</span>\r\n//               <button className=\"dashbord-user-img\">ðŸ‘¤</button>\r\n//             </div>\r\n//             <div className=\"dashboard-hr\"></div>\r\n//             <div className=\"navbar-page\">\r\n//               <div className=\"nav-bar-data\">\r\n//                 <button\r\n//                   className=\"dashboard sidebtn\"\r\n//                   onClick={() => navigate(`/dashboard/${userId}`)}\r\n//                 >\r\n//                   Dashboard\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"loan sidebtn\"\r\n//                   onClick={() => setLoanPopUp(true)}\r\n//                   onMouseOut={() => console.log(\"mouse working\")}\r\n//                 >\r\n//                   Loan\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"cards sidebtn\"\r\n//                   onClick={() => navigate(\"/card\")}\r\n//                 >\r\n//                   Cards\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setDepositPopUp(true)}\r\n//                   className=\"deposit sidebtn\"\r\n//                 >\r\n//                   Deposit\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"fund sidebtn\"\r\n//                   onClick={() => setFundTransferPopUp(true)}\r\n//                 >\r\n//                   {\" \"}\r\n//                   Fund Transfer\r\n//                 </button>\r\n//                 <button className=\"bell sidebtn\">Log out</button>\r\n//               </div>\r\n//             </div>\r\n//             {/* Rest of your dashboard content */}\r\n//             {/* <div className=\"acc-bal\"></div> */}\r\n//             <div className=\"account-test\">\r\n//               <div className=\"dashbord-account-Balance\">\r\n//                 <p className=\" amount\">Account Balance: {account.accBalance}</p>\r\n//               </div>\r\n//               <div className=\"account\">\r\n//                 <div className=\"dashboard-account-Details\">\r\n//                   <div className=\"user-detail\">\r\n//                     {/* <p>\r\n//                     User Name:{\" \"}\r\n//                     {userDetail.first_Name + \" \" + userDetail.last_Name}\r\n//                   </p> */}\r\n//                     <p>Account Number: {account.accNumber}</p>\r\n//                     {/* <p>Account Type: {account.accType}</p> */}\r\n//                     <p>Account Created Date: {account.accCreatedAt}</p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"dashboard-trans-border\">\r\n//               <p className=\"transaction-header\" key={account.accNumber}>\r\n//                 Transaction History\r\n//               </p>\r\n//               {/* <div className=\"dashboard-hr\"></div>   */}\r\n//               <div className=\"transaction\">\r\n//                 <table className=\"transaction-table table\">\r\n//                   <thead className=\"tr-position\">\r\n//                     <tr className=\"tr-position\">\r\n//                       <th className=\"transaction-table sl-no \">Sl No.</th>\r\n//                       <th className=\"transaction-table details\">\r\n//                         Transaction Details\r\n//                       </th>\r\n//                       <th className=\"transaction-table trans-amount\">Amount</th>\r\n//                       <th className=\"transaction-table balance\">Balance</th>\r\n//                       <th className=\"transaction-table date\">Date</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   {transactions.length > 0 ? (\r\n//                     transactions.map((transaction, index) => (\r\n//                       <tbody className=\"table-body\">\r\n//                         <tr key={transaction.id} className=\"transaction-head\">\r\n//                           <td className=\"index\">{index + 1}</td>\r\n//                           <td className=\"transaction-details\">\r\n//                             {transaction.transferDetails}\r\n//                           </td>\r\n//                           <td className=\"amount-transfered\">\r\n//                             {transaction.amountTransfered}{\" \"}\r\n//                             <span className=\"credited\">cr</span>\r\n//                           </td>\r\n//                           <td className=\"acc-balance\">{transaction.balance}</td>\r\n//                           <td className=\"date\">{transaction.transferDate}</td>\r\n//                         </tr>\r\n//                       </tbody>\r\n//                     ))\r\n//                   ) : (\r\n//                     <div className=\"no-transaction\">\r\n//                       {\" \"}\r\n//                       No Transaction Avaialbel\r\n//                     </div>\r\n//                   )}\r\n//                 </table>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           {depositPopUp && <Deposit setDeposit={setDepositPopUp} />}\r\n//           {fundTransferPopUp && (\r\n//             <FundTransfer setFundTransfer={setFundTransferPopUp} />\r\n//           )}\r\n//           {loanPopUp && <Loan setLoan={setLoanPopUp} />}\r\n\r\n//           <div className=\"dashboard-hr\"></div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"../Dashboard/dashboard.css\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { AccountContext } from \"../Context/AccountProvider\";\r\nimport { useContext } from \"react\";\r\nimport Deposit from \"./Deposit\";\r\nimport FundTransfer from \"./FundTransfer\";\r\nimport Loan from \"./Loan\";\r\nimport \"../Dashboard/Transaction/transaction.css\";\r\n\r\nfunction Dashboard() {\r\n  const { account, setAccount } = useContext(AccountContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userDetail, setUserDetails] = useState({});\r\n  const [depositPopUp, setDepositPopUp] = useState(false);\r\n  const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loanPopUp, setLoanPopUp] = useState(false);\r\n  const location = useLocation();\r\n  const { JWTaccount, SetJWTuser } = location.state;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (SetJWTuser) {\r\n      const userId = SetJWTuser.userId;\r\n      sessionStorage.setItem(\"userId\", userId);\r\n    }\r\n  }, [SetJWTuser]);\r\n\r\n  useEffect(() => {\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n    const token = localStorage.getItem(\"authToken\");\r\n\r\n    if (JWTaccount) {\r\n      setAccount(JWTaccount);\r\n      setUserDetails(SetJWTuser);\r\n      setLoading(false);\r\n    } else if (userId && token) {\r\n      axios\r\n        .get(`http://localhost:8080/api/account/userid/${userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setAccount(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching account data:\", error);\r\n          setLoading(false);\r\n        });\r\n\r\n      axios\r\n        .get(`http://localhost:8080/api/users/${userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setUserDetails(response.data);\r\n        })\r\n        .catch((error) => console.log(error));\r\n\r\n      axios\r\n        .get(`http://localhost:8080/api/transaction/${userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setTransactions(response.data);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  }, [setAccount]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!account || Object.keys(account).length === 0) {\r\n    return <div>No account data available.</div>;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        depositPopUp || fundTransferPopUp\r\n          ? \"Dashboard dashboard-blur\"\r\n          : \"Dashboard\"\r\n      }\r\n    >\r\n      <div className=\"dashboard-page-border\">\r\n        <div className=\"page-size\">\r\n          <div className=\"dashboard-hr\"></div>\r\n          <div className=\"nav-bar\">\r\n            <div className=\"dashbord-un-bn\">\r\n              <span className=\"dashboard-logo\">logo</span>\r\n              <span className=\"bank-name\">Easy Online Banking</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"hr\"></div>\r\n          <div className=\"balance-block\">\r\n            <h1>Account Balance</h1>\r\n            <div className=\"balance-display\">\r\n              â‚¹{account.accBalance.toFixed(2)}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"user-details-block\">\r\n            <h2>Account Holder Details</h2>\r\n            <div className=\"details-card\">\r\n              <div className=\"detail\">Name: {userDetail.firstName}</div>\r\n              <div className=\"detail\">Email: {userDetail.email}</div>\r\n              <div className=\"detail\">Mobile: {userDetail.mobile}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"button-block\">\r\n            <button onClick={() => setDepositPopUp(true)}>Deposit</button>\r\n            <button onClick={() => setFundTransferPopUp(true)}>\r\n              Fund Transfer\r\n            </button>\r\n            <button onClick={() => setLoanPopUp(true)}>Loan</button>\r\n          </div>\r\n\r\n          {depositPopUp && (\r\n            <Deposit setDepositPopUp={setDepositPopUp} account={account} />\r\n          )}\r\n          {fundTransferPopUp && (\r\n            <FundTransfer setFundTransferPopUp={setFundTransferPopUp} />\r\n          )}\r\n          {loanPopUp && <Loan setLoanPopUp={setLoanPopUp} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,4BAA4B;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
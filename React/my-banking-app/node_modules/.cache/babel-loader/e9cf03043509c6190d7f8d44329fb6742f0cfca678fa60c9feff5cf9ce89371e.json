{"ast":null,"code":"// import ReactDOM from \"react-dom\";\n// import \"./deposit.css\";\n// import React, { useContext, useState } from \"react\";\n// import { useEffect } from \"react\";\n// import axios from \"axios\";\n// import { AccountContext } from \"../Context/AccountProvider\";\n\n// function Deposit({ setDeposit }) {\n//   const portalRoot = document.getElementById(\"portalRoot\");\n//   const { account, setAccount } = useContext(AccountContext);\n//   console.log(JSON.stringify(account));\n\n//   useEffect(() => {\n//     const userId = localStorage.getItem(\"userId\");\n\n//     if (userId) {\n//       axios\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\n//         .then((response) => {\n//           setAccount(response.data);\n//           console.log(response.data);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching account data:\", error);\n//         });\n//     }\n//   }, [setAccount]);\n//   // const account = {\n//   //   userId: userId,\n//   //   accNumber: account.accNumber,\n//   //   accBalance: account.accBalance,\n//   //   accCreatedAt: account.accCreatedAt,\n//   //   accType: account.accType,\n//   // };\n//   //   axios\n//   //     .put(`http://localhost:8080/api/account/userid/${userId}`, account, {\n//   //       headers: { \"Content-Type\": \"application/json\" },\n//   //     })\n//   //     .then((response) => {\n//   //       console.log(response.data);\n//   //       console.log(account.accBalance);\n//   //     })\n//   //     .catch((error) => console.log(error));\n//   // }, [setAccount]);\n\n//   console.log(JSON.stringify(account));\n//   if (!portalRoot) {\n//     console.error(\"Portal root not found\");\n//     return null;\n//   }\n\n//   function handleChange(e) {\n//     const userId = localStorage.getItem(\"userId\");\n//     const updatedAccount = { ...account, accBalance: e.target.value };\n//     setAccount(updatedAccount);\n//     axios\n//       .put(`http://localhost:8080/api/account/userid/${userId}`)\n//       .then((response) => {\n//         setAccount(response.data);\n//         console.log(response.data);\n//         console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n\n//     setAccount((preForm) => {\n//       return {\n//         ...preForm,\n//         accBalance: e.target.value,\n//       };\n//     });\n//   }\n\n//   const amountUpdate = async (e) => {\n//     e.preventDefault();\n//     // setAccount(e.target.value);\n//     setAccount((preForm) => {\n//       return {\n//         ...preForm,\n//         accBalance: e.target.value,\n//       };\n//     });\n//   };\n\n//   // on click handler\n//   function onClickHandler(e) {\n//     setDeposit(false);\n//     setAccount((preForm) => {\n//       return {\n//         ...preForm,\n//         accBalance: e.target.value,\n//       };\n//     });\n//   }\n//   // Make a POST request to deposit the amount\n//   console.log(account.accBalance);\n//   return ReactDOM.createPortal(\n//     <div className=\"deposit-overlay\" onClick={onClickHandler}>\n//       <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\n//         <div className=\"deposit-inner\">\n//           <h1>Deposit</h1>\n//           <label className=\"amount-details\">Amount:</label>\n//           <input\n//             type=\"number\"\n//             className=\"amount\"\n//             name=\"accBalance\"\n//             value={account.accBalance}\n//             placeholder=\"Enter Amount Here\"\n//             required\n//             onChange={amountUpdate}\n//           />\n//           <button type=\"submit\" onClick={handleChange}>\n//             Deposit\n//           </button>\n//           <button className=\"close-button\" onClick={() => setDeposit(false)}>\n//             Close\n//           </button>\n//         </div>\n//       </div>\n//     </div>,\n//     portalRoot\n//   );\n// }\n\n// export default Deposit;\n\n// import ReactDOM from \"react-dom\";\n// import \"./deposit.css\";\n// import React, { useContext, useState } from \"react\";\n// import { useEffect } from \"react\";\n// import axios from \"axios\";\n// import { AccountContext } from \"../Context/AccountProvider\";\n\n// function Deposit({ setDeposit }) {\n//   const portalRoot = document.getElementById(\"portalRoot\");\n//   const { account, setAccount } = useContext(AccountContext);\n//   const [inputAmount, setInputAmount] = useState(\"\"); // Initialize with current balance or empty\n//   const [transaction, setTransaction] = useState({\n//     TransactionID: 11,\n//     userId: localStorage.getItem(\"userId\"),\n//     transferDate: \"\",\n//     transferDetails: \"\",\n//     amountTransfered: inputAmount,\n//     balance: account.accBalance,\n//   });\n\n//   useEffect(() => {\n//     const userId = localStorage.getItem(\"userId\");\n//     if (userId) {\n//       axios\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\n//         .then((response) => {\n//           setAccount(response.data);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching account data:\", error);\n//         });\n//     }\n//   }, [setAccount]);\n\n//   if (!portalRoot) {\n//     console.error(\"Portal root not found\");\n//     return null;\n//   }\n\n//   // Handle input change\n//   function handleInputChange(e) {\n//     setInputAmount(e.target.value);\n//   }\n\n//   // Handle form submit (deposit action)\n//   function handleDeposit(e) {\n//     e.preventDefault();\n//     const userId = localStorage.getItem(\"userId\");\n\n//     // Prepare updated account object with the new balance\n//     const updatedAccount = {\n//       ...account,\n//       accBalance: account.accBalance + Number(inputAmount),\n//     };\n\n//     console.log(\"Updated account data before PUT:\", updatedAccount); // Debug log\n\n//     // Send PUT request to update account balance in the DB\n//     axios\n//       .put(\n//         `http://localhost:8080/api/account/userid/${userId}`,\n//         updatedAccount,\n//         {\n//           headers: { \"Content-Type\": \"application/json\" },\n//         }\n//       )\n//       .then((response) => {\n//         console.log(\"Response from PUT request:\", response.data); // Debug log\n//         setAccount(response.data); // Update account in context with the response\n//         console.log(\"Account balance updated in context:\", response.data);\n//         console.log(\n//           \"this is your added balance\" +\n//             (account.accBalance + Number(inputAmount))\n//         );\n//         setDeposit(false); // Close the deposit modal\n//       })\n//       .catch((error) => {\n//         console.log(\"Error updating account balance:\", error);\n//       });\n\n//     // post request for transaction\n//     axios\n//       .post(\"http://localhost:8080/api/transaction\", transaction, {\n//         headers: { \"Content-Type\": \"application/json\" },\n//       })\n//       .then((res) => {\n//         console.log(\"POST RUEST FOR TRANSACTION\" + res.data);\n//       })\n//       .catch((error) => console.log(error));\n//   }\n\n//   return ReactDOM.createPortal(\n//     <div className=\"deposit-overlay\" onClick={() => setDeposit(false)}>\n//       <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\n//         <div className=\"deposit-inner\">\n//           <h1>Deposit</h1>\n//           <form onSubmit={handleDeposit}>\n//             <label className=\"amount-details\">Amount:</label>\n//             <input\n//               type=\"number\"\n//               className=\"amount\"\n//               name=\"accBalance\"\n//               value={inputAmount}\n//               placeholder=\"Enter Amount Here\"\n//               required\n//               onChange={handleInputChange}\n//             />\n//             <button type=\"submit\" className=\"deposit-btn\">\n//               Deposit\n//             </button>\n//           </form>\n//           <button className=\"close-button\" onClick={() => setDeposit(false)}>\n//             Close\n//           </button>\n//         </div>\n//       </div>\n//     </div>,\n//     portalRoot\n//   );\n// }\n\n// export default Deposit;","map":{"version":3,"names":[],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/components/Dashboard/Deposit.js"],"sourcesContent":["// import ReactDOM from \"react-dom\";\r\n// import \"./deposit.css\";\r\n// import React, { useContext, useState } from \"react\";\r\n// import { useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { AccountContext } from \"../Context/AccountProvider\";\r\n\r\n// function Deposit({ setDeposit }) {\r\n//   const portalRoot = document.getElementById(\"portalRoot\");\r\n//   const { account, setAccount } = useContext(AccountContext);\r\n//   console.log(JSON.stringify(account));\r\n\r\n//   useEffect(() => {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n\r\n//     if (userId) {\r\n//       axios\r\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n//         .then((response) => {\r\n//           setAccount(response.data);\r\n//           console.log(response.data);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching account data:\", error);\r\n//         });\r\n//     }\r\n//   }, [setAccount]);\r\n//   // const account = {\r\n//   //   userId: userId,\r\n//   //   accNumber: account.accNumber,\r\n//   //   accBalance: account.accBalance,\r\n//   //   accCreatedAt: account.accCreatedAt,\r\n//   //   accType: account.accType,\r\n//   // };\r\n//   //   axios\r\n//   //     .put(`http://localhost:8080/api/account/userid/${userId}`, account, {\r\n//   //       headers: { \"Content-Type\": \"application/json\" },\r\n//   //     })\r\n//   //     .then((response) => {\r\n//   //       console.log(response.data);\r\n//   //       console.log(account.accBalance);\r\n//   //     })\r\n//   //     .catch((error) => console.log(error));\r\n//   // }, [setAccount]);\r\n\r\n//   console.log(JSON.stringify(account));\r\n//   if (!portalRoot) {\r\n//     console.error(\"Portal root not found\");\r\n//     return null;\r\n//   }\r\n\r\n//   function handleChange(e) {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n//     const updatedAccount = { ...account, accBalance: e.target.value };\r\n//     setAccount(updatedAccount);\r\n//     axios\r\n//       .put(`http://localhost:8080/api/account/userid/${userId}`)\r\n//       .then((response) => {\r\n//         setAccount(response.data);\r\n//         console.log(response.data);\r\n//         console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n\r\n//     setAccount((preForm) => {\r\n//       return {\r\n//         ...preForm,\r\n//         accBalance: e.target.value,\r\n//       };\r\n//     });\r\n//   }\r\n\r\n//   const amountUpdate = async (e) => {\r\n//     e.preventDefault();\r\n//     // setAccount(e.target.value);\r\n//     setAccount((preForm) => {\r\n//       return {\r\n//         ...preForm,\r\n//         accBalance: e.target.value,\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   // on click handler\r\n//   function onClickHandler(e) {\r\n//     setDeposit(false);\r\n//     setAccount((preForm) => {\r\n//       return {\r\n//         ...preForm,\r\n//         accBalance: e.target.value,\r\n//       };\r\n//     });\r\n//   }\r\n//   // Make a POST request to deposit the amount\r\n//   console.log(account.accBalance);\r\n//   return ReactDOM.createPortal(\r\n//     <div className=\"deposit-overlay\" onClick={onClickHandler}>\r\n//       <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\r\n//         <div className=\"deposit-inner\">\r\n//           <h1>Deposit</h1>\r\n//           <label className=\"amount-details\">Amount:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"amount\"\r\n//             name=\"accBalance\"\r\n//             value={account.accBalance}\r\n//             placeholder=\"Enter Amount Here\"\r\n//             required\r\n//             onChange={amountUpdate}\r\n//           />\r\n//           <button type=\"submit\" onClick={handleChange}>\r\n//             Deposit\r\n//           </button>\r\n//           <button className=\"close-button\" onClick={() => setDeposit(false)}>\r\n//             Close\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>,\r\n//     portalRoot\r\n//   );\r\n// }\r\n\r\n// export default Deposit;\r\n\r\n// import ReactDOM from \"react-dom\";\r\n// import \"./deposit.css\";\r\n// import React, { useContext, useState } from \"react\";\r\n// import { useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { AccountContext } from \"../Context/AccountProvider\";\r\n\r\n// function Deposit({ setDeposit }) {\r\n//   const portalRoot = document.getElementById(\"portalRoot\");\r\n//   const { account, setAccount } = useContext(AccountContext);\r\n//   const [inputAmount, setInputAmount] = useState(\"\"); // Initialize with current balance or empty\r\n//   const [transaction, setTransaction] = useState({\r\n//     TransactionID: 11,\r\n//     userId: localStorage.getItem(\"userId\"),\r\n//     transferDate: \"\",\r\n//     transferDetails: \"\",\r\n//     amountTransfered: inputAmount,\r\n//     balance: account.accBalance,\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n//     if (userId) {\r\n//       axios\r\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n//         .then((response) => {\r\n//           setAccount(response.data);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching account data:\", error);\r\n//         });\r\n//     }\r\n//   }, [setAccount]);\r\n\r\n//   if (!portalRoot) {\r\n//     console.error(\"Portal root not found\");\r\n//     return null;\r\n//   }\r\n\r\n//   // Handle input change\r\n//   function handleInputChange(e) {\r\n//     setInputAmount(e.target.value);\r\n//   }\r\n\r\n//   // Handle form submit (deposit action)\r\n//   function handleDeposit(e) {\r\n//     e.preventDefault();\r\n//     const userId = localStorage.getItem(\"userId\");\r\n\r\n//     // Prepare updated account object with the new balance\r\n//     const updatedAccount = {\r\n//       ...account,\r\n//       accBalance: account.accBalance + Number(inputAmount),\r\n//     };\r\n\r\n//     console.log(\"Updated account data before PUT:\", updatedAccount); // Debug log\r\n\r\n//     // Send PUT request to update account balance in the DB\r\n//     axios\r\n//       .put(\r\n//         `http://localhost:8080/api/account/userid/${userId}`,\r\n//         updatedAccount,\r\n//         {\r\n//           headers: { \"Content-Type\": \"application/json\" },\r\n//         }\r\n//       )\r\n//       .then((response) => {\r\n//         console.log(\"Response from PUT request:\", response.data); // Debug log\r\n//         setAccount(response.data); // Update account in context with the response\r\n//         console.log(\"Account balance updated in context:\", response.data);\r\n//         console.log(\r\n//           \"this is your added balance\" +\r\n//             (account.accBalance + Number(inputAmount))\r\n//         );\r\n//         setDeposit(false); // Close the deposit modal\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(\"Error updating account balance:\", error);\r\n//       });\r\n\r\n//     // post request for transaction\r\n//     axios\r\n//       .post(\"http://localhost:8080/api/transaction\", transaction, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//       })\r\n//       .then((res) => {\r\n//         console.log(\"POST RUEST FOR TRANSACTION\" + res.data);\r\n//       })\r\n//       .catch((error) => console.log(error));\r\n//   }\r\n\r\n//   return ReactDOM.createPortal(\r\n//     <div className=\"deposit-overlay\" onClick={() => setDeposit(false)}>\r\n//       <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\r\n//         <div className=\"deposit-inner\">\r\n//           <h1>Deposit</h1>\r\n//           <form onSubmit={handleDeposit}>\r\n//             <label className=\"amount-details\">Amount:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               className=\"amount\"\r\n//               name=\"accBalance\"\r\n//               value={inputAmount}\r\n//               placeholder=\"Enter Amount Here\"\r\n//               required\r\n//               onChange={handleInputChange}\r\n//             />\r\n//             <button type=\"submit\" className=\"deposit-btn\">\r\n//               Deposit\r\n//             </button>\r\n//           </form>\r\n//           <button className=\"close-button\" onClick={() => setDeposit(false)}>\r\n//             Close\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>,\r\n//     portalRoot\r\n//   );\r\n// }\r\n\r\n// export default Deposit;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\components\\\\Dashboard\\\\Deposit.js\",\n  _s = $RefreshSig$();\n// import ReactDOM from \"react-dom\";\n// import \"./deposit.css\";\n// import React, { useContext, useState } from \"react\";\n// import { useEffect } from \"react\";\n// import axios from \"axios\";\n// import { AccountContext } from \"../Context/AccountProvider\";\n\n// function Deposit({ setDeposit }) {\n//   const [form, setFrom] = useState({\n//     userId: \"\",\n//     accNumber: \"\",\n//     accBalance: \"\",\n//     accCreatedAt: \"\",\n//     accType: \"savings\",\n//   });\n//   const portalRoot = document.getElementById(\"portalRoot\");\n//   const { account, setAccount } = useContext(AccountContext);\n\n//   console.log(JSON.stringify(account));\n\n//   useEffect(() => {\n//     const userId = localStorage.getItem(\"userId\");\n\n//     if (userId) {\n//       axios\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\n//         .then((response) => {\n//           setAccount(response.data);\n//           console.log(response.data);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching account data:\", error);\n//         });\n//     }\n//     // const account = {\n//     //   userId: userId,\n//     //   accNumber: account.accNumber,\n//     //   accBalance: account.accBalance,\n//     //   accCreatedAt: account.accCreatedAt,\n//     //   accType: account.accType,\n//     // };\n//     axios\n//       .put(`http://localhost:8080/api/account/userid/${userId}`, account, {\n//         headers: { \"Content-Type\": \"application/json\" },\n//       })\n//       .then((response) => {\n//         console.log(response.data);\n//         console.log(account.accBalance);\n//       })\n//       .catch((error) => console.log(error));\n//   }, [account.accBalance]);\n\n//   console.log(JSON.stringify(account));\n//   if (!portalRoot) {\n//     console.error(\"Portal root not found\");\n//     return null;\n//   }\n\n//   function handleChange(e) {\n//     const userId = localStorage.getItem(\"userId\");\n//     const updatedAccount = { ...account, accBalance: e.target.value };\n//     setAccount(updatedAccount);\n//     axios\n//       .put(`http://localhost:8080/api/account/userid/${userId}`)\n//       .then((response) => {\n//         // setAccount(response.data);\n//         console.log(response.data);\n//         console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n\n//     setAccount((preForm) => {\n//       return {\n//         ...preForm,\n//         accBalance: e.target.value,\n//       };\n//     });\n//   }\n\n//   const amountUpdate = async (e) => {\n//     e.preventDefault();\n//     // setAccount(e.target.value);\n//     setAccount((preForm) => {\n//       return {\n//         ...preForm,\n//         accBalance: e.target.value,\n//       };\n//     });\n//   };\n\n//   // on click handler\n//   function onClickHandler(e) {\n//     setDeposit(false);\n//   }\n//   // Make a POST request to deposit the amount\n//   console.log(account.accBalance);\n//   return ReactDOM.createPortal(\n//     <div className=\"deposit-overlay\" onClick={onClickHandler}>\n//       <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\n//         <div className=\"deposit-inner\">\n//           <h1>Deposit</h1>\n//           <label className=\"amount-details\">Amount:</label>\n//           <input\n//             type=\"number\"\n//             className=\"amount\"\n//             name=\"accBalance\"\n//             value={account.accBalance}\n//             placeholder=\"Enter Amount Here\"\n//             required\n//             onChange={amountUpdate}\n//           />\n//           <button type=\"submit\" onClick={handleChange}>\n//             Deposit\n//           </button>\n//           <button className=\"close-button\" onClick={() => setDeposit(false)}>\n//             Close\n//           </button>\n//         </div>\n//       </div>\n//     </div>,\n//     portalRoot\n//   );\n// }\n// export default Deposit;\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useContext } from \"react\";\nimport { AccountContext } from \"../Context/AccountProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Deposit({\n  setDeposit\n}) {\n  _s();\n  const {\n    account,\n    setAccount\n  } = useContext(AccountContext);\n  const [form, setFrom] = useState({\n    userId: \"\",\n    accNumber: \"\",\n    accBalance: \"\",\n    accCreatedAt: \"\",\n    accType: \"savings\"\n  });\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    if (userId) {\n      axios.get(`http://localhost:8080/api/account/userid/${userId}`).then(response => {\n        setAccount(response.data);\n      }).catch(error => {\n        console.error(\"Error fetching account data:\", error);\n      });\n    }\n  }, [setAccount]);\n  const amountUpdate = async e => {\n    e.preventDefault();\n    setAccount(preForm => {\n      return {\n        ...preForm,\n        accBalance: e.target.value\n      };\n    });\n  };\n  const handleChange = e => {\n    const userId = localStorage.getItem(\"userId\");\n    const updatedAccount = {\n      ...account,\n      accBalance: e.target.value\n    };\n    setAccount(updatedAccount);\n    axios.put(`http://localhost:8080/api/account/userid/${userId}`, updatedAccount, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      console.log(response.data);\n      console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  if (!account) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"amount-details\",\n      children: \"Amount:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      className: \"amount\",\n      name: \"accBalance\",\n      value: account.accBalance,\n      placeholder: \"Enter Amount Here\",\n      required: true,\n      onChange: amountUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handleChange,\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n_s(Deposit, \"/pMt7DczcZ+tbT/84PekySlDlY0=\");\n_c = Deposit;\nexport default Deposit;\nvar _c;\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"names":["React","useEffect","useState","axios","useContext","AccountContext","jsxDEV","_jsxDEV","Deposit","setDeposit","_s","account","setAccount","form","setFrom","userId","accNumber","accBalance","accCreatedAt","accType","localStorage","getItem","get","then","response","data","catch","error","console","amountUpdate","e","preventDefault","preForm","target","value","handleChange","updatedAccount","put","headers","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","required","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/components/Dashboard/Deposit.js"],"sourcesContent":["// import ReactDOM from \"react-dom\";\r\n// import \"./deposit.css\";\r\n// import React, { useContext, useState } from \"react\";\r\n// import { useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { AccountContext } from \"../Context/AccountProvider\";\r\n\r\n// function Deposit({ setDeposit }) {\r\n//   const [form, setFrom] = useState({\r\n//     userId: \"\",\r\n//     accNumber: \"\",\r\n//     accBalance: \"\",\r\n//     accCreatedAt: \"\",\r\n//     accType: \"savings\",\r\n//   });\r\n//   const portalRoot = document.getElementById(\"portalRoot\");\r\n//   const { account, setAccount } = useContext(AccountContext);\r\n\r\n//   console.log(JSON.stringify(account));\r\n\r\n//   useEffect(() => {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n\r\n//     if (userId) {\r\n//       axios\r\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n//         .then((response) => {\r\n//           setAccount(response.data);\r\n//           console.log(response.data);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching account data:\", error);\r\n//         });\r\n//     }\r\n//     // const account = {\r\n//     //   userId: userId,\r\n//     //   accNumber: account.accNumber,\r\n//     //   accBalance: account.accBalance,\r\n//     //   accCreatedAt: account.accCreatedAt,\r\n//     //   accType: account.accType,\r\n//     // };\r\n//     axios\r\n//       .put(`http://localhost:8080/api/account/userid/${userId}`, account, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//       })\r\n//       .then((response) => {\r\n//         console.log(response.data);\r\n//         console.log(account.accBalance);\r\n//       })\r\n//       .catch((error) => console.log(error));\r\n//   }, [account.accBalance]);\r\n\r\n//   console.log(JSON.stringify(account));\r\n//   if (!portalRoot) {\r\n//     console.error(\"Portal root not found\");\r\n//     return null;\r\n//   }\r\n\r\n//   function handleChange(e) {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n//     const updatedAccount = { ...account, accBalance: e.target.value };\r\n//     setAccount(updatedAccount);\r\n//     axios\r\n//       .put(`http://localhost:8080/api/account/userid/${userId}`)\r\n//       .then((response) => {\r\n//         // setAccount(response.data);\r\n//         console.log(response.data);\r\n//         console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n\r\n//     setAccount((preForm) => {\r\n//       return {\r\n//         ...preForm,\r\n//         accBalance: e.target.value,\r\n//       };\r\n//     });\r\n//   }\r\n\r\n//   const amountUpdate = async (e) => {\r\n//     e.preventDefault();\r\n//     // setAccount(e.target.value);\r\n//     setAccount((preForm) => {\r\n//       return {\r\n//         ...preForm,\r\n//         accBalance: e.target.value,\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   // on click handler\r\n//   function onClickHandler(e) {\r\n//     setDeposit(false);\r\n//   }\r\n//   // Make a POST request to deposit the amount\r\n//   console.log(account.accBalance);\r\n//   return ReactDOM.createPortal(\r\n//     <div className=\"deposit-overlay\" onClick={onClickHandler}>\r\n//       <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\r\n//         <div className=\"deposit-inner\">\r\n//           <h1>Deposit</h1>\r\n//           <label className=\"amount-details\">Amount:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"amount\"\r\n//             name=\"accBalance\"\r\n//             value={account.accBalance}\r\n//             placeholder=\"Enter Amount Here\"\r\n//             required\r\n//             onChange={amountUpdate}\r\n//           />\r\n//           <button type=\"submit\" onClick={handleChange}>\r\n//             Deposit\r\n//           </button>\r\n//           <button className=\"close-button\" onClick={() => setDeposit(false)}>\r\n//             Close\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>,\r\n//     portalRoot\r\n//   );\r\n// }\r\n// export default Deposit;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useContext } from \"react\";\r\nimport { AccountContext } from \"../Context/AccountProvider\";\r\n\r\nfunction Deposit({ setDeposit }) {\r\n  const { account, setAccount } = useContext(AccountContext);\r\n  const [form, setFrom] = useState({\r\n    userId: \"\",\r\n    accNumber: \"\",\r\n    accBalance: \"\",\r\n    accCreatedAt: \"\",\r\n    accType: \"savings\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    if (userId) {\r\n      axios\r\n        .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n        .then((response) => {\r\n          setAccount(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching account data:\", error);\r\n        });\r\n    }\r\n  }, [setAccount]);\r\n\r\n  const amountUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setAccount((preForm) => {\r\n      return {\r\n        ...preForm,\r\n        accBalance: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const updatedAccount = { ...account, accBalance: e.target.value };\r\n    setAccount(updatedAccount);\r\n    axios\r\n      .put(\r\n        `http://localhost:8080/api/account/userid/${userId}`,\r\n        updatedAccount,\r\n        {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  if (!account) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"amount-details\">Amount:</label>\r\n      <input\r\n        type=\"number\"\r\n        className=\"amount\"\r\n        name=\"accBalance\"\r\n        value={account.accBalance}\r\n        placeholder=\"Enter Amount Here\"\r\n        required\r\n        onChange={amountUpdate}\r\n      />\r\n      <button type=\"submit\" onClick={handleChange}>\r\n        Deposit\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Deposit;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,cAAc,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,OAAOA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGR,UAAU,CAACC,cAAc,CAAC;EAC1D,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ba,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACd,MAAMc,MAAM,GAAGK,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE7C,IAAIN,MAAM,EAAE;MACVZ,KAAK,CACFmB,GAAG,CAAC,4CAA4CP,MAAM,EAAE,CAAC,CACzDQ,IAAI,CAAEC,QAAQ,IAAK;QAClBZ,UAAU,CAACY,QAAQ,CAACC,IAAI,CAAC;MAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACf,UAAU,CAAC,CAAC;EAEhB,MAAMiB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBnB,UAAU,CAAEoB,OAAO,IAAK;MACtB,OAAO;QACL,GAAGA,OAAO;QACVf,UAAU,EAAEa,CAAC,CAACG,MAAM,CAACC;MACvB,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIL,CAAC,IAAK;IAC1B,MAAMf,MAAM,GAAGK,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMe,cAAc,GAAG;MAAE,GAAGzB,OAAO;MAAEM,UAAU,EAAEa,CAAC,CAACG,MAAM,CAACC;IAAM,CAAC;IACjEtB,UAAU,CAACwB,cAAc,CAAC;IAC1BjC,KAAK,CACFkC,GAAG,CACF,4CAA4CtB,MAAM,EAAE,EACpDqB,cAAc,EACd;MACEE,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CACF,CAAC,CACAf,IAAI,CAAEC,QAAQ,IAAK;MAClBI,OAAO,CAACW,GAAG,CAACf,QAAQ,CAACC,IAAI,CAAC;MAC1BG,OAAO,CAACW,GAAG,CAAC,+BAA+B,GAAGxB,MAAM,CAAC;IACvD,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACW,GAAG,CAACZ,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,IAAI,CAAChB,OAAO,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,oBACEJ,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAOkC,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjDtC,OAAA;MACEuC,IAAI,EAAC,QAAQ;MACbL,SAAS,EAAC,QAAQ;MAClBM,IAAI,EAAC,YAAY;MACjBb,KAAK,EAAEvB,OAAO,CAACM,UAAW;MAC1B+B,WAAW,EAAC,mBAAmB;MAC/BC,QAAQ;MACRC,QAAQ,EAAErB;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFtC,OAAA;MAAQuC,IAAI,EAAC,QAAQ;MAACK,OAAO,EAAEhB,YAAa;MAAAK,QAAA,EAAC;IAE7C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnC,EAAA,CA7EQF,OAAO;AAAA4C,EAAA,GAAP5C,OAAO;AA+EhB,eAAeA,OAAO;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
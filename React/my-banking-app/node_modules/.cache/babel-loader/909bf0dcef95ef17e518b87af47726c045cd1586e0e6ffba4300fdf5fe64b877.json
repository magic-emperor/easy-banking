{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\components\\\\forgotPassword\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../login-page/login.css\"; // Keeping the same styles\n\n// function ForgotPassword() {\n//   const navigate = useNavigate();\n\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [error, setError] = useState(false);\n//   const [success, setSuccess] = useState(false);\n\n//   async function onResetPassword(event) {\n//     event.preventDefault();\n\n//     if (!email || !password || !confirmPassword) {\n//       setError(true);\n//       return;\n//     }\n\n//     if (password !== confirmPassword) {\n//       setError(true);\n//       return; // Optionally, handle password mismatch\n//     }\n\n//     setError(false);\n//     const userId = localStorage.getItem(\"userId\");\n//     const token = localStorage.getItem(\"authToken\"); // Get the JWT token\n//     // const token = localStorage.getItem(\"authToken\");\n//     console.log(\"JWT Token:\", token);\n\n//     try {\n//       const response = await axios.put(\n//         `http://localhost:8080/api/user/${userId}`,\n//         { email, password }, // Send email and new password\n//         {\n//           headers: { Authorization: `Bearer ${token}` }, // Include JWT token\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         setSuccess(true);\n//         console.log(\"Password updated successfully!\");\n//         const token = response.data.jwt; // Ensure this is set correctly\n//         localStorage.setItem(\"authToken\", token);\n//         if (!token) {\n//           setError(\"No valid JWT token found\");\n//           return;\n//         }\n//       } else {\n//         setError(true);\n//       }\n//     } catch (err) {\n//       console.error(\"Error updating password\", err);\n//       setError(true);\n//     }\n//   }\n\n//   return (\n//     <div className=\"Login-page\">\n//       <form className=\"Login-form\" onSubmit={onResetPassword}>\n//         <h1 className=\"Login-text\">Reset Password</h1>\n//         <div className=\"input-group\">\n//           <label>Email ID</label>\n//           <input\n//             type=\"email\"\n//             autoComplete=\"off\"\n//             placeholder=\"Email ID\"\n//             className={`login-userName ${error ? \"login-input-error\" : \"\"}`}\n//             onChange={(e) => setEmail(e.target.value)}\n//             value={email}\n//           />\n//           {error && (\n//             <span className=\"error-text\">Please Enter Valid Email ID</span>\n//           )}\n//         </div>\n//         <div className=\"input-group\">\n//           <label>New Password</label>\n//           <input\n//             type=\"password\"\n//             autoComplete=\"off\"\n//             placeholder=\"New Password\"\n//             className={`login-userName ${error ? \"login-input-error\" : \"\"}`}\n//             onChange={(e) => setPassword(e.target.value)}\n//             value={password}\n//           />\n//           {error && <span className=\"error-text\">Please Enter Password</span>}\n//         </div>\n//         <div className=\"input-group\">\n//           <label>Confirm Password</label>\n//           <input\n//             type=\"password\"\n//             autoComplete=\"off\"\n//             placeholder=\"Confirm Password\"\n//             className={`login-userName ${error ? \"login-input-error\" : \"\"}`}\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//             value={confirmPassword}\n//           />\n//         </div>\n//         {success && (\n//           <span className=\"success-text\">Password updated successfully!</span>\n//         )}\n//         <button className=\"Login-btn\" type=\"submit\">\n//           Reset Password\n//         </button>\n//         <a href=\"/login\" className=\"Forgot-password-link\">\n//           Back to Login\n//         </a>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default ForgotPassword;\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../login-page/login.css\"; // Keeping the same styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  async function onResetPassword(event) {\n    event.preventDefault();\n    if (!email || !password || !confirmPassword) {\n      setError(\"All fields are required.\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return; // Handle password mismatch\n    }\n    setError(\"\"); // Clear error\n    const userId = localStorage.getItem(\"userId\");\n    const token = localStorage.getItem(\"authToken\"); // Get the JWT token\n\n    if (!token || token.split(\".\").length !== 3) {\n      setError(\"Invalid JWT token.\");\n      return;\n    }\n    try {\n      const response = await axios.put(`http://localhost:8080/api/users/${userId}`,\n      // Ensure plural 'users'\n      {\n        email,\n        password\n      },\n      // Send only the new password\n      {\n        headers: {\n          Authorization: `Bearer ${token}`\n        } // Include JWT token\n      });\n      if (response.status === 200) {\n        setSuccess(true);\n        console.log(\"Password updated successfully!\");\n      } else {\n        setError(\"Failed to update password. Please try again.\");\n      }\n    } catch (err) {\n      console.error(\"Error updating password\", err.response ? err.response.data : err);\n      setError(\"Error updating password: \" + (err.response ? err.response.data.message : \"Unknown error.\"));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Login-form\",\n      onSubmit: onResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Login-text\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          autoComplete: \"off\",\n          placeholder: \"Email ID\",\n          className: `login-userName ${error ? \"login-input-error\" : \"\"}`,\n          onChange: e => setEmail(e.target.value),\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          autoComplete: \"off\",\n          placeholder: \"New Password\",\n          className: `login-userName ${error ? \"login-input-error\" : \"\"}`,\n          onChange: e => setPassword(e.target.value),\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          autoComplete: \"off\",\n          placeholder: \"Confirm Password\",\n          className: `login-userName ${error ? \"login-input-error\" : \"\"}`,\n          onChange: e => setConfirmPassword(e.target.value),\n          value: confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"success-text\",\n        children: \"Password updated successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Login-btn\",\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        className: \"Forgot-password-link\",\n        children: \"Back to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"tI9QR7B+krWN5n1bHrWarwytwoM=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","ForgotPassword","_s","navigate","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","onResetPassword","event","preventDefault","userId","localStorage","getItem","token","split","length","response","put","headers","Authorization","status","console","log","err","data","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","autoComplete","placeholder","onChange","e","target","value","href","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/components/forgotPassword/ForgotPassword.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"../login-page/login.css\"; // Keeping the same styles\r\n\r\n// function ForgotPassword() {\r\n//   const navigate = useNavigate();\r\n\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [error, setError] = useState(false);\r\n//   const [success, setSuccess] = useState(false);\r\n\r\n//   async function onResetPassword(event) {\r\n//     event.preventDefault();\r\n\r\n//     if (!email || !password || !confirmPassword) {\r\n//       setError(true);\r\n//       return;\r\n//     }\r\n\r\n//     if (password !== confirmPassword) {\r\n//       setError(true);\r\n//       return; // Optionally, handle password mismatch\r\n//     }\r\n\r\n//     setError(false);\r\n//     const userId = localStorage.getItem(\"userId\");\r\n//     const token = localStorage.getItem(\"authToken\"); // Get the JWT token\r\n//     // const token = localStorage.getItem(\"authToken\");\r\n//     console.log(\"JWT Token:\", token);\r\n\r\n//     try {\r\n//       const response = await axios.put(\r\n//         `http://localhost:8080/api/user/${userId}`,\r\n//         { email, password }, // Send email and new password\r\n//         {\r\n//           headers: { Authorization: `Bearer ${token}` }, // Include JWT token\r\n//         }\r\n//       );\r\n\r\n//       if (response.status === 200) {\r\n//         setSuccess(true);\r\n//         console.log(\"Password updated successfully!\");\r\n//         const token = response.data.jwt; // Ensure this is set correctly\r\n//         localStorage.setItem(\"authToken\", token);\r\n//         if (!token) {\r\n//           setError(\"No valid JWT token found\");\r\n//           return;\r\n//         }\r\n//       } else {\r\n//         setError(true);\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Error updating password\", err);\r\n//       setError(true);\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"Login-page\">\r\n//       <form className=\"Login-form\" onSubmit={onResetPassword}>\r\n//         <h1 className=\"Login-text\">Reset Password</h1>\r\n//         <div className=\"input-group\">\r\n//           <label>Email ID</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             autoComplete=\"off\"\r\n//             placeholder=\"Email ID\"\r\n//             className={`login-userName ${error ? \"login-input-error\" : \"\"}`}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//             value={email}\r\n//           />\r\n//           {error && (\r\n//             <span className=\"error-text\">Please Enter Valid Email ID</span>\r\n//           )}\r\n//         </div>\r\n//         <div className=\"input-group\">\r\n//           <label>New Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             autoComplete=\"off\"\r\n//             placeholder=\"New Password\"\r\n//             className={`login-userName ${error ? \"login-input-error\" : \"\"}`}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             value={password}\r\n//           />\r\n//           {error && <span className=\"error-text\">Please Enter Password</span>}\r\n//         </div>\r\n//         <div className=\"input-group\">\r\n//           <label>Confirm Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             autoComplete=\"off\"\r\n//             placeholder=\"Confirm Password\"\r\n//             className={`login-userName ${error ? \"login-input-error\" : \"\"}`}\r\n//             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//             value={confirmPassword}\r\n//           />\r\n//         </div>\r\n//         {success && (\r\n//           <span className=\"success-text\">Password updated successfully!</span>\r\n//         )}\r\n//         <button className=\"Login-btn\" type=\"submit\">\r\n//           Reset Password\r\n//         </button>\r\n//         <a href=\"/login\" className=\"Forgot-password-link\">\r\n//           Back to Login\r\n//         </a>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ForgotPassword;\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../login-page/login.css\"; // Keeping the same styles\r\n\r\nfunction ForgotPassword() {\r\n  const navigate = useNavigate();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  async function onResetPassword(event) {\r\n    event.preventDefault();\r\n\r\n    if (!email || !password || !confirmPassword) {\r\n      setError(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match.\");\r\n      return; // Handle password mismatch\r\n    }\r\n\r\n    setError(\"\"); // Clear error\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const token = localStorage.getItem(\"authToken\"); // Get the JWT token\r\n\r\n    if (!token || token.split(\".\").length !== 3) {\r\n      setError(\"Invalid JWT token.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:8080/api/users/${userId}`, // Ensure plural 'users'\r\n        { email, password }, // Send only the new password\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` }, // Include JWT token\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSuccess(true);\r\n        console.log(\"Password updated successfully!\");\r\n      } else {\r\n        setError(\"Failed to update password. Please try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\r\n        \"Error updating password\",\r\n        err.response ? err.response.data : err\r\n      );\r\n      setError(\r\n        \"Error updating password: \" +\r\n          (err.response ? err.response.data.message : \"Unknown error.\")\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login-page\">\r\n      <form className=\"Login-form\" onSubmit={onResetPassword}>\r\n        <h1 className=\"Login-text\">Reset Password</h1>\r\n        <div className=\"input-group\">\r\n          <label>Email ID</label>\r\n          <input\r\n            type=\"email\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Email ID\"\r\n            className={`login-userName ${error ? \"login-input-error\" : \"\"}`}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n          />\r\n          {error && <span className=\"error-text\">{error}</span>}\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"New Password\"\r\n            className={`login-userName ${error ? \"login-input-error\" : \"\"}`}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Confirm Password\"\r\n            className={`login-userName ${error ? \"login-input-error\" : \"\"}`}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            value={confirmPassword}\r\n          />\r\n        </div>\r\n        {success && (\r\n          <span className=\"success-text\">Password updated successfully!</span>\r\n        )}\r\n        <button className=\"Login-btn\" type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n        <a href=\"/login\" className=\"Forgot-password-link\">\r\n          Back to Login\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
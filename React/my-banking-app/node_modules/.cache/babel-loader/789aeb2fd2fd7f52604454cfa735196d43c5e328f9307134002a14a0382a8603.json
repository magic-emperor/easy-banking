{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\testing\\\\TestingAPI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useParams, useEffect } from \"react\";\nimport APIStored from \"../components/API/APIStored\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestingAPI() {\n  _s();\n  const [data, setData] = useState([]);\n  const {\n    userId\n  } = useParams();\n  const [accData, setAccountData] = useState([]);\n  useEffect(() => {\n    APIStored().then(response => {\n      console.log(JSON.stringify(response.data)); // Check the entire response object\n      setData(response.data);\n    }).catch(error => console.error(\"Error\", error));\n  }, []);\n\n  // console.log(JSON.stringify([...data]));\n  // // const userAPIRes = data;\n  // // let MapFunUser = userAPIRes.map((items) => parseInt(items.id));\n\n  // data.map((item) => console.log(item.id));\n\n  //for account\n  const accApi = axios.get(\"http://localhost:8080/api/account\");\n  useEffect(() => {\n    accApi.then(response => {\n      console.log(JSON.stringify(response.data)); // Check the entire response object\n      setAccountData(response.data);\n    }).catch(error => console.error(\"Error\", error));\n  }, []);\n\n  // console.log(JSON.stringify(accData));\n  // // // let MapFunAcc = accData.map((items) => items.id);\n  // // console.log(MapFunAcc);\n  // // accData.map((item) => console.log(item.id));\n\n  // data.map((item) => console.log(item.id));\n\n  // // console.log(parseInt(MapFunAcc), parseInt(MapFunUser));\n\n  // // if (parseInt(MapFunAcc) === parseInt(MapFunUser)) {\n  // // } else {\n  // //   console.log(\"BUMMER\");\n  // // }\n  // console.log(JSON.stringify(data));\n\n  // accData.map((item) =>\n  //   console.log(\n  //     item.userId,\n  //     item.accNumber,\n  //     item.accBalance,\n  //     item.accCreatedAt,\n  //     item\n  //   )\n  // );\n  // console.log(parseInt(MapFunAcc));\n\n  // const intAPI = axios.get(`http://localhost:8080/api/account/${24}`);\n\n  // useEffect(() => {\n  //   intAPI\n  //     .then((response) => {\n  //       console.log(JSON.stringify(response.data)); // Check the entire response object\n  //       setAccountData(response.data);\n  //     })\n  //     .catch((error) => console.error(\"Error\", error));\n  // }, []);\n\n  data.map(item => {\n    console.log(item.id);\n  });\n  const mapingAcc = data.map(item => {\n    console.log(item.id);\n  });\n  console.log(mapingAcc);\n  useEffect(() => {\n    axios.get(`http://localhost:8080/api/account/userid/${userId}`) // Now using userId in the URL\n    .then(response => {\n      // setAccount(response.data);\n      console.log(response.data.userId);\n    }).catch(error => console.log(\"Error fetching account data:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(TestingAPI, \"ffBe/OPAnXGsJQ2BXGgvDax/Wz8=\", false, function () {\n  return [useParams];\n});\n_c = TestingAPI;\nexport default TestingAPI;\n\n// const APIwithoutID = axios\n//   .get(`http://localhost:8080/api/account`)\n//   .then((response) => {\n//     console.log(\n//       \"this is response.data without ID \" + JSON.stringify(response.data)\n//     );\n//     console.log(JSON.stringify(\"this is wthout id\" + JSON.stringify(data)));\n//   })\n//   .catch((error) => console.log(\"Error fetching account data:\", error));\n\n// console.log(JSON.stringify(data));\n\n// data.map((item) => {\n//   console.log(\"Items with data using MAP\" + JSON.stringify(item.id));\n// });\n\n// useEffect(() => {\n//   axios\n//     .get(`http://localhost:8080/api/account`)\n//     .then((response) => {\n//       // console.log(\n//       //   \"this is response.data with ID\" + JSON.stringify(response.data)\n//       // );\n//       console.log(\n//         JSON.stringify(\n//           \"this is data wth id\" + JSON.stringify(response.data.accId)\n//         )\n//       ); //as na URL\n//     })\n//     .catch((error) => console.log(\"Error fetching account data:\", error));\n// });\nvar _c;\n$RefreshReg$(_c, \"TestingAPI\");","map":{"version":3,"names":["React","useState","useParams","useEffect","APIStored","axios","jsxDEV","_jsxDEV","TestingAPI","_s","data","setData","userId","accData","setAccountData","then","response","console","log","JSON","stringify","catch","error","accApi","get","map","item","id","mapingAcc","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/testing/TestingAPI.js"],"sourcesContent":["import React, { useState, useParams, useEffect } from \"react\";\r\nimport APIStored from \"../components/API/APIStored\";\r\nimport axios from \"axios\";\r\n\r\nfunction TestingAPI() {\r\n  const [data, setData] = useState([]);\r\n  const { userId } = useParams();\r\n  const [accData, setAccountData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    APIStored()\r\n      .then((response) => {\r\n        console.log(JSON.stringify(response.data)); // Check the entire response object\r\n        setData(response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error\", error));\r\n  }, []);\r\n\r\n  // console.log(JSON.stringify([...data]));\r\n  // // const userAPIRes = data;\r\n  // // let MapFunUser = userAPIRes.map((items) => parseInt(items.id));\r\n\r\n  // data.map((item) => console.log(item.id));\r\n\r\n  //for account\r\n  const accApi = axios.get(\"http://localhost:8080/api/account\");\r\n  useEffect(() => {\r\n    accApi\r\n      .then((response) => {\r\n        console.log(JSON.stringify(response.data)); // Check the entire response object\r\n        setAccountData(response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error\", error));\r\n  }, []);\r\n\r\n  // console.log(JSON.stringify(accData));\r\n  // // // let MapFunAcc = accData.map((items) => items.id);\r\n  // // console.log(MapFunAcc);\r\n  // // accData.map((item) => console.log(item.id));\r\n\r\n  // data.map((item) => console.log(item.id));\r\n\r\n  // // console.log(parseInt(MapFunAcc), parseInt(MapFunUser));\r\n\r\n  // // if (parseInt(MapFunAcc) === parseInt(MapFunUser)) {\r\n  // // } else {\r\n  // //   console.log(\"BUMMER\");\r\n  // // }\r\n  // console.log(JSON.stringify(data));\r\n\r\n  // accData.map((item) =>\r\n  //   console.log(\r\n  //     item.userId,\r\n  //     item.accNumber,\r\n  //     item.accBalance,\r\n  //     item.accCreatedAt,\r\n  //     item\r\n  //   )\r\n  // );\r\n  // console.log(parseInt(MapFunAcc));\r\n\r\n  // const intAPI = axios.get(`http://localhost:8080/api/account/${24}`);\r\n\r\n  // useEffect(() => {\r\n  //   intAPI\r\n  //     .then((response) => {\r\n  //       console.log(JSON.stringify(response.data)); // Check the entire response object\r\n  //       setAccountData(response.data);\r\n  //     })\r\n  //     .catch((error) => console.error(\"Error\", error));\r\n  // }, []);\r\n\r\n  data.map((item) => {\r\n    console.log(item.id);\r\n  });\r\n  const mapingAcc = data.map((item) => {\r\n    console.log(item.id);\r\n  });\r\n\r\n  console.log(mapingAcc);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8080/api/account/userid/${userId}`) // Now using userId in the URL\r\n      .then((response) => {\r\n        // setAccount(response.data);\r\n        console.log(response.data.userId);\r\n      })\r\n      .catch((error) => console.log(\"Error fetching account data:\", error));\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {/* <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Password</th>\r\n            <th>Mobile</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {data.map((item) => (\r\n            <tr key={item.id}>\r\n              <td>{item.id}</td>\r\n              <td>{item.first_Name}</td>\r\n              <td>{item.last_Name}</td>\r\n              <td>{item.email}</td>\r\n              <td>{item.password}</td>\r\n              <td>{item.mobile}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>acc Name</th>\r\n            <th>acc Name</th>\r\n            <th>acccc</th>\r\n            <th>accc</th>\r\n            <th>accccc</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {accData.map((item) => (\r\n            <tr key={item.id}>\r\n              <td>{item.id}</td>\r\n              <td>{item.userId}</td>\r\n              <td>{item.accNumber}</td>\r\n              <td>{item.accBalance}</td>\r\n              <td>{item.accCreatedAt}</td>\r\n              <td>{item.accType}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestingAPI;\r\n\r\n// const APIwithoutID = axios\r\n//   .get(`http://localhost:8080/api/account`)\r\n//   .then((response) => {\r\n//     console.log(\r\n//       \"this is response.data without ID \" + JSON.stringify(response.data)\r\n//     );\r\n//     console.log(JSON.stringify(\"this is wthout id\" + JSON.stringify(data)));\r\n//   })\r\n//   .catch((error) => console.log(\"Error fetching account data:\", error));\r\n\r\n// console.log(JSON.stringify(data));\r\n\r\n// data.map((item) => {\r\n//   console.log(\"Items with data using MAP\" + JSON.stringify(item.id));\r\n// });\r\n\r\n// useEffect(() => {\r\n//   axios\r\n//     .get(`http://localhost:8080/api/account`)\r\n//     .then((response) => {\r\n//       // console.log(\r\n//       //   \"this is response.data with ID\" + JSON.stringify(response.data)\r\n//       // );\r\n//       console.log(\r\n//         JSON.stringify(\r\n//           \"this is data wth id\" + JSON.stringify(response.data.accId)\r\n//         )\r\n//       ); //as na URL\r\n//     })\r\n//     .catch((error) => console.log(\"Error fetching account data:\", error));\r\n// });\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
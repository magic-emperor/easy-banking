{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\components\\\\login-page\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../login-page/login.css\";\nimport APIStored from \"../API/APIStored\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [login, setLogin] = useState({\n    userName: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState({\n    userName: false,\n    password: false\n  });\n  const [data, setData] = useState([]); // Initialize data as an empty array\n\n  useEffect(() => {\n    // Fetch user data from the API on component mount\n    APIStored().then(response => {\n      console.log(response.data); // Log response data for debugging\n      setData(response.data); // Set user data to state\n    }).catch(error => console.error(\"Error fetching data\", error));\n  }, []);\n  function onLogin(event) {\n    event.preventDefault();\n\n    // Check for empty fields\n    const newError = {\n      userName: !login.userName,\n      password: !login.password\n    };\n    setError(newError);\n    if (Object.values(newError).some(fieldError => fieldError)) {\n      console.log(\"Mandatory details are not filled\");\n      return;\n    }\n\n    // Authenticate the user\n    const user = data.find(user => user.email === login.userName && user.password === login.password);\n    if (user) {\n      // Store the userId in localStorage after successful login\n      localStorage.setItem(\"userId\", user.id);\n\n      // Navigate to the dashboard\n      navigate(`/dashboard/${user.id}`);\n    } else {\n      // Invalid credentials\n      setError({\n        userName: true,\n        password: true\n      });\n      console.log(\"Invalid username or password\");\n    }\n  }\n  function onLoginChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setLogin(prevLoginData => ({\n      ...prevLoginData,\n      [name]: value\n    }));\n    setError(prevError => ({\n      ...prevError,\n      [name]: !value // Set error state based on input value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Login-form\",\n      onSubmit: onLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Easy Online Banking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Login-text\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: `userName ${error.userName ? \"input\" : \"\"}`,\n          type: \"text\",\n          name: \"userName\",\n          autoComplete: \"off\",\n          placeholder: \"Email ID\",\n          onChange: onLoginChange,\n          value: login.userName,\n          style: {\n            borderColor: error.userName ? \"red\" : \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), error.userName && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          className: \"error-text\",\n          children: \"Please Enter User Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: `password ${error.password ? \"input\" : \"\"}`,\n          type: \"password\",\n          name: \"password\",\n          autoComplete: \"off\",\n          placeholder: \"Password\",\n          onChange: onLoginChange,\n          value: login.password,\n          style: {\n            borderColor: error.password ? \"red\" : \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), error.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          className: \"error-text\",\n          children: \"Please Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Login-btn\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/forgot-password\",\n        className: \"Forgot-password-link\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"GUFB8KuFgmV2TnnJ6len0Ggn/q8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","APIStored","jsxDEV","_jsxDEV","Login","_s","navigate","login","setLogin","userName","password","error","setError","data","setData","then","response","console","log","catch","onLogin","event","preventDefault","newError","Object","values","some","fieldError","user","find","email","localStorage","setItem","id","onLoginChange","name","value","target","prevLoginData","prevError","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","autoComplete","placeholder","onChange","style","borderColor","color","href","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/components/login-page/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../login-page/login.css\";\r\nimport APIStored from \"../API/APIStored\";\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n\r\n  const [login, setLogin] = useState({\r\n    userName: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState({\r\n    userName: false,\r\n    password: false,\r\n  });\r\n\r\n  const [data, setData] = useState([]); // Initialize data as an empty array\r\n\r\n  useEffect(() => {\r\n    // Fetch user data from the API on component mount\r\n    APIStored()\r\n      .then((response) => {\r\n        console.log(response.data); // Log response data for debugging\r\n        setData(response.data); // Set user data to state\r\n      })\r\n      .catch((error) => console.error(\"Error fetching data\", error));\r\n  }, []);\r\n\r\n  function onLogin(event) {\r\n    event.preventDefault();\r\n\r\n    // Check for empty fields\r\n    const newError = {\r\n      userName: !login.userName,\r\n      password: !login.password,\r\n    };\r\n\r\n    setError(newError);\r\n\r\n    if (Object.values(newError).some((fieldError) => fieldError)) {\r\n      console.log(\"Mandatory details are not filled\");\r\n      return;\r\n    }\r\n\r\n    // Authenticate the user\r\n    const user = data.find(\r\n      (user) =>\r\n        user.email === login.userName && user.password === login.password\r\n    );\r\n\r\n    if (user) {\r\n      // Store the userId in localStorage after successful login\r\n      localStorage.setItem(\"userId\", user.id);\r\n\r\n      // Navigate to the dashboard\r\n      navigate(`/dashboard/${user.id}`);\r\n    } else {\r\n      // Invalid credentials\r\n      setError({\r\n        userName: true,\r\n        password: true,\r\n      });\r\n      console.log(\"Invalid username or password\");\r\n    }\r\n  }\r\n\r\n  function onLoginChange(event) {\r\n    const { name, value } = event.target;\r\n    setLogin((prevLoginData) => ({\r\n      ...prevLoginData,\r\n      [name]: value,\r\n    }));\r\n\r\n    setError((prevError) => ({\r\n      ...prevError,\r\n      [name]: !value, // Set error state based on input value\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login-page\">\r\n      <form className=\"Login-form\" onSubmit={onLogin}>\r\n        <p>Easy Online Banking</p>\r\n        <h1 className=\"Login-text\">Login</h1>\r\n        <div className=\"input-group\">\r\n          <input\r\n            className={`userName ${error.userName ? \"input\" : \"\"}`}\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Email ID\"\r\n            onChange={onLoginChange}\r\n            value={login.userName}\r\n            style={{ borderColor: error.userName ? \"red\" : \"\" }}\r\n          />\r\n          {error.userName && (\r\n            <span style={{ color: \"red\" }} className=\"error-text\">\r\n              Please Enter User Id\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <input\r\n            className={`password ${error.password ? \"input\" : \"\"}`}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Password\"\r\n            onChange={onLoginChange}\r\n            value={login.password}\r\n            style={{ borderColor: error.password ? \"red\" : \"\" }}\r\n          />\r\n          {error.password && (\r\n            <span style={{ color: \"red\" }} className=\"error-text\">\r\n              Please Enter Password\r\n            </span>\r\n          )}\r\n        </div>\r\n        <button className=\"Login-btn\" type=\"submit\">\r\n          Login\r\n        </button>\r\n        <a href=\"/forgot-password\" className=\"Forgot-password-link\">\r\n          Forgot Password?\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
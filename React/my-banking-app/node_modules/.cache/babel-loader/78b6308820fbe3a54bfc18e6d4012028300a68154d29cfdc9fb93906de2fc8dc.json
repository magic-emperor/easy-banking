{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\testing\\\\TestingAPI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport APIStored from \"../components/API/APIStored\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestingAPI() {\n  _s();\n  const [data, setData] = useState([]);\n  const [accData, setAccountData] = useState([]);\n  useEffect(() => {\n    APIStored().then(response => {\n      console.log(JSON.stringify(response.data)); // Check the entire response object\n      setData(response.data);\n    }).catch(error => console.error(\"Error\", error));\n  }, []);\n  console.log(JSON.stringify([...data]));\n  const userAPIRes = data;\n  let MapFunUser = userAPIRes.map(items => parseInt(items.id));\n  data.map(item => console.log(item.id));\n  const accApi = axios.get(\"http://localhost:8080/api/account\");\n  useEffect(() => {\n    accApi.then(response => {\n      console.log(JSON.stringify(response.data)); // Check the entire response object\n      setAccountData(response.data);\n    }).catch(error => console.error(\"Error\", error));\n  }, []);\n  console.log(JSON.stringify([...accData]));\n  const accApiData = data;\n  let MapFunAcc = accApiData.map(items => parseInt(items.id));\n  console.log(MapFunAcc);\n  data.map(item => console.log(item.id));\n  console.log(parseInt(MapFunAcc), parseInt(MapFunUser));\n  if (parseInt(MapFunAcc) === parseInt(MapFunUser)) {\n    console.log(\"This is workiung\");\n  } else {\n    console.log(\"BUMMER\");\n  }\n  console.log(JSON.stringify(data));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mobile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.first_Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.last_Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.mobile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(TestingAPI, \"FTW8YQKPnCymA7VPI4gEKrmXp0k=\");\n_c = TestingAPI;\nexport default TestingAPI;\n\n// const APIwithoutID = axios\n//   .get(`http://localhost:8080/api/account`)\n//   .then((response) => {\n//     console.log(\n//       \"this is response.data without ID \" + JSON.stringify(response.data)\n//     );\n//     console.log(JSON.stringify(\"this is wthout id\" + JSON.stringify(data)));\n//   })\n//   .catch((error) => console.log(\"Error fetching account data:\", error));\n\n// console.log(JSON.stringify(data));\n\n// data.map((item) => {\n//   console.log(\"Items with data using MAP\" + JSON.stringify(item.id));\n// });\n\n// useEffect(() => {\n//   axios\n//     .get(`http://localhost:8080/api/account`)\n//     .then((response) => {\n//       // console.log(\n//       //   \"this is response.data with ID\" + JSON.stringify(response.data)\n//       // );\n//       console.log(\n//         JSON.stringify(\n//           \"this is data wth id\" + JSON.stringify(response.data.accId)\n//         )\n//       ); //as na URL\n//     })\n//     .catch((error) => console.log(\"Error fetching account data:\", error));\n// });\nvar _c;\n$RefreshReg$(_c, \"TestingAPI\");","map":{"version":3,"names":["React","useState","useEffect","APIStored","axios","jsxDEV","_jsxDEV","TestingAPI","_s","data","setData","accData","setAccountData","then","response","console","log","JSON","stringify","catch","error","userAPIRes","MapFunUser","map","items","parseInt","id","item","accApi","get","accApiData","MapFunAcc","children","border","fileName","_jsxFileName","lineNumber","columnNumber","first_Name","last_Name","email","password","mobile","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/testing/TestingAPI.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport APIStored from \"../components/API/APIStored\";\r\nimport axios from \"axios\";\r\n\r\nfunction TestingAPI() {\r\n  const [data, setData] = useState([]);\r\n  const [accData, setAccountData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    APIStored()\r\n      .then((response) => {\r\n        console.log(JSON.stringify(response.data)); // Check the entire response object\r\n        setData(response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error\", error));\r\n  }, []);\r\n\r\n  console.log(JSON.stringify([...data]));\r\n  const userAPIRes = data;\r\n  let MapFunUser = userAPIRes.map((items) => parseInt(items.id));\r\n\r\n  data.map((item) => console.log(item.id));\r\n  const accApi = axios.get(\"http://localhost:8080/api/account\");\r\n  useEffect(() => {\r\n    accApi\r\n      .then((response) => {\r\n        console.log(JSON.stringify(response.data)); // Check the entire response object\r\n        setAccountData(response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error\", error));\r\n  }, []);\r\n\r\n  console.log(JSON.stringify([...accData]));\r\n  const accApiData = data;\r\n  let MapFunAcc = accApiData.map((items) => parseInt(items.id));\r\n  console.log(MapFunAcc);\r\n\r\n  data.map((item) => console.log(item.id));\r\n\r\n  console.log(parseInt(MapFunAcc), parseInt(MapFunUser));\r\n\r\n  if (parseInt(MapFunAcc) === parseInt(MapFunUser)) {\r\n    console.log(\"This is workiung\");\r\n  } else {\r\n    console.log(\"BUMMER\");\r\n  }\r\n  console.log(JSON.stringify(data));\r\n  return (\r\n    <div>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Password</th>\r\n            <th>Mobile</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item) => (\r\n            <tr key={item.id}>\r\n              <td>{item.id}</td>\r\n              <td>{item.first_Name}</td>\r\n              <td>{item.last_Name}</td>\r\n              <td>{item.email}</td>\r\n              <td>{item.password}</td>\r\n              <td>{item.mobile}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestingAPI;\r\n\r\n// const APIwithoutID = axios\r\n//   .get(`http://localhost:8080/api/account`)\r\n//   .then((response) => {\r\n//     console.log(\r\n//       \"this is response.data without ID \" + JSON.stringify(response.data)\r\n//     );\r\n//     console.log(JSON.stringify(\"this is wthout id\" + JSON.stringify(data)));\r\n//   })\r\n//   .catch((error) => console.log(\"Error fetching account data:\", error));\r\n\r\n// console.log(JSON.stringify(data));\r\n\r\n// data.map((item) => {\r\n//   console.log(\"Items with data using MAP\" + JSON.stringify(item.id));\r\n// });\r\n\r\n// useEffect(() => {\r\n//   axios\r\n//     .get(`http://localhost:8080/api/account`)\r\n//     .then((response) => {\r\n//       // console.log(\r\n//       //   \"this is response.data with ID\" + JSON.stringify(response.data)\r\n//       // );\r\n//       console.log(\r\n//         JSON.stringify(\r\n//           \"this is data wth id\" + JSON.stringify(response.data.accId)\r\n//         )\r\n//       ); //as na URL\r\n//     })\r\n//     .catch((error) => console.log(\"Error fetching account data:\", error));\r\n// });\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
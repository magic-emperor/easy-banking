{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\components\\\\Dashboard\\\\Deposit.js\",\n  _s = $RefreshSig$();\nimport ReactDOM from \"react-dom\";\nimport \"./deposit.css\";\nimport React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { AccountContext } from \"../Context/AccountProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Deposit({\n  setDeposit\n}) {\n  _s();\n  const portalRoot = document.getElementById(\"portalRoot\");\n  const {\n    account,\n    setAccount\n  } = useContext(AccountContext);\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [transaction, setTransaction] = useState({\n    TransactionID: null,\n    userId: localStorage.getItem(\"userId\"),\n    transferDate: \"\",\n    transferDetails: \"\",\n    amountTransfered: 0,\n    balance: account ? account.accBalance : 0\n  });\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    if (userId) {\n      axios.get(`http://localhost:8080/api/account/userid/${userId}`).then(response => {\n        setAccount(response.data);\n        // Update balance in transaction state with account balance\n        setTransaction(prev => ({\n          ...prev,\n          balance: response.data.accBalance\n        }));\n      }).catch(error => {\n        console.error(\"Error fetching account data:\", error);\n      });\n    }\n  }, [setAccount]);\n  if (!portalRoot) {\n    console.error(\"Portal root not found\");\n    return null;\n  }\n\n  // Handle input change for deposit amount\n  function handleInputChange(e) {\n    setInputAmount(e.target.value);\n  }\n\n  // Handle deposit form submission\n  function handleDeposit(e) {\n    e.preventDefault();\n    const userId = localStorage.getItem(\"userId\");\n\n    // Capture the current date\n    const currentDate = new Date().toISOString().split(\"T\")[0];\n\n    // Prepare updated account object with the new balance\n    const updatedAccount = {\n      ...account,\n      accBalance: account.accBalance + Number(inputAmount)\n    };\n    console.log(\"Updated account data before PUT:\", updatedAccount); // Debug log\n\n    // Send PUT request to update account balance in the DB\n    axios.put(`http://localhost:8080/api/account/user/${userId}`, updatedAccount, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      console.log(\"Response from PUT request:\", response.data); // Debug log\n      setAccount(response.data); // Update account in context with the response\n      setDeposit(false); // Close the deposit modal\n    }).catch(error => {\n      console.log(\"Error updating account balance:\", error);\n    });\n\n    // Prepare transaction data with details of the deposit\n    const updatedTransaction = {\n      TransactionID: null,\n      // Let backend generate the ID\n      userId: userId,\n      transferDate: currentDate,\n      transferDetails: `Credited to account ${account.accNumber}`,\n      amountTransfered: Number(inputAmount),\n      balance: updatedAccount.accBalance\n    };\n\n    // Post request to create a new transaction record\n    axios.post(\"http://localhost:8080/api/transaction\", updatedTransaction, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log(\"Transaction successfully recorded:\", res.data);\n    }).catch(error => console.log(\"Error recording transaction:\", error));\n  }\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deposit-overlay\",\n    onClick: () => setDeposit(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deposit-modal\",\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deposit-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleDeposit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"amount-details\",\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"amount\",\n            name: \"accBalance\",\n            value: inputAmount,\n            placeholder: \"Enter Amount Here\",\n            autoComplete: \"off\",\n            required: true,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"deposit-btn\",\n              children: \"Deposit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setDeposit(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this), portalRoot);\n}\n_s(Deposit, \"K/z0utxNUDX8FJaZp2BcHay6cdg=\");\n_c = Deposit;\nexport default Deposit;\nvar _c;\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"names":["ReactDOM","React","useContext","useState","useEffect","axios","AccountContext","jsxDEV","_jsxDEV","Deposit","setDeposit","_s","portalRoot","document","getElementById","account","setAccount","inputAmount","setInputAmount","transaction","setTransaction","TransactionID","userId","localStorage","getItem","transferDate","transferDetails","amountTransfered","balance","accBalance","get","then","response","data","prev","catch","error","console","handleInputChange","e","target","value","handleDeposit","preventDefault","currentDate","Date","toISOString","split","updatedAccount","Number","log","put","headers","updatedTransaction","accNumber","post","res","createPortal","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","autoComplete","required","onChange","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/components/Dashboard/Deposit.js"],"sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport \"./deposit.css\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AccountContext } from \"../Context/AccountProvider\";\r\n\r\nfunction Deposit({ setDeposit }) {\r\n  const portalRoot = document.getElementById(\"portalRoot\");\r\n  const { account, setAccount } = useContext(AccountContext);\r\n  const [inputAmount, setInputAmount] = useState(\"\");\r\n  const [transaction, setTransaction] = useState({\r\n    TransactionID: null,\r\n    userId: localStorage.getItem(\"userId\"),\r\n    transferDate: \"\",\r\n    transferDetails: \"\",\r\n    amountTransfered: 0,\r\n    balance: account ? account.accBalance : 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n    if (userId) {\r\n      axios\r\n        .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n        .then((response) => {\r\n          setAccount(response.data);\r\n          // Update balance in transaction state with account balance\r\n          setTransaction((prev) => ({\r\n            ...prev,\r\n            balance: response.data.accBalance,\r\n          }));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching account data:\", error);\r\n        });\r\n    }\r\n  }, [setAccount]);\r\n\r\n  if (!portalRoot) {\r\n    console.error(\"Portal root not found\");\r\n    return null;\r\n  }\r\n\r\n  // Handle input change for deposit amount\r\n  function handleInputChange(e) {\r\n    setInputAmount(e.target.value);\r\n  }\r\n\r\n  // Handle deposit form submission\r\n  function handleDeposit(e) {\r\n    e.preventDefault();\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    // Capture the current date\r\n    const currentDate = new Date().toISOString().split(\"T\")[0];\r\n\r\n    // Prepare updated account object with the new balance\r\n    const updatedAccount = {\r\n      ...account,\r\n      accBalance: account.accBalance + Number(inputAmount),\r\n    };\r\n\r\n    console.log(\"Updated account data before PUT:\", updatedAccount); // Debug log\r\n\r\n    // Send PUT request to update account balance in the DB\r\n    axios\r\n      .put(`http://localhost:8080/api/account/user/${userId}`, updatedAccount, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"Response from PUT request:\", response.data); // Debug log\r\n        setAccount(response.data); // Update account in context with the response\r\n        setDeposit(false); // Close the deposit modal\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error updating account balance:\", error);\r\n      });\r\n\r\n    // Prepare transaction data with details of the deposit\r\n    const updatedTransaction = {\r\n      TransactionID: null, // Let backend generate the ID\r\n      userId: userId,\r\n      transferDate: currentDate,\r\n      transferDetails: `Credited to account ${account.accNumber}`,\r\n      amountTransfered: Number(inputAmount),\r\n      balance: updatedAccount.accBalance,\r\n    };\r\n\r\n    // Post request to create a new transaction record\r\n    axios\r\n      .post(\"http://localhost:8080/api/transaction\", updatedTransaction, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n      .then((res) => {\r\n        console.log(\"Transaction successfully recorded:\", res.data);\r\n      })\r\n      .catch((error) => console.log(\"Error recording transaction:\", error));\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"deposit-overlay\" onClick={() => setDeposit(false)}>\r\n      <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"deposit-inner\">\r\n          <h1>Deposit</h1>\r\n          <form onSubmit={handleDeposit}>\r\n            <label className=\"amount-details\">Amount:</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"amount\"\r\n              name=\"accBalance\"\r\n              value={inputAmount}\r\n              placeholder=\"Enter Amount Here\"\r\n              autoComplete=\"off\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n            <nav>\r\n              <button type=\"submit\" className=\"deposit-btn\">\r\n                Deposit\r\n              </button>\r\n            </nav>\r\n          </form>\r\n          <button className=\"close-button\" onClick={() => setDeposit(false)}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    portalRoot\r\n  );\r\n}\r\n\r\nexport default Deposit;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
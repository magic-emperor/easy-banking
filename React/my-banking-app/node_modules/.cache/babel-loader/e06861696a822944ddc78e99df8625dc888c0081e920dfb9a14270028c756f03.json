{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\components\\\\Dashboard\\\\FundTransfer.js\",\n  _s = $RefreshSig$();\nimport ReactDOM from \"react-dom\";\nimport \"./deposit.css\";\nimport React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { AccountContext } from \"../Context/AccountProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FundTransfer({\n  setFundTransfer\n}) {\n  _s();\n  const portalRoot = document.getElementById(\"portalRoot\");\n  const {\n    account,\n    setAccount\n  } = useContext(AccountContext);\n  const [inputAmount, setInputAmount] = useState(\"\"); // Initialize with current balance or empty\n\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    if (userId) {\n      axios.get(`http://localhost:8080/api/account/userid/${userId}`).then(response => {\n        setAccount(response.data);\n      }).catch(error => {\n        console.error(\"Error fetching account data:\", error);\n      });\n    }\n  }, [setAccount]);\n  if (!portalRoot) {\n    console.error(\"Portal root not found\");\n    return null;\n  }\n\n  // Handle input change\n  function handleInputChange(e) {\n    setInputAmount(e.target.value);\n  }\n\n  // Handle form submit (deposit action)\n  function handleDeposit(e) {\n    e.preventDefault();\n    const userId = localStorage.getItem(\"userId\");\n\n    // Conditions on fund transfer\n    if (account.accBalance < inputAmount || account.accBalance === 0) {\n      alert(\"Insufficient balance\");\n      return;\n    } else if (inputAmount < 0) {\n      alert(\"Please insert a valid amount\");\n      return;\n    }\n    // // Prepare updated account object with the new balance\n    const updatedAccount = {\n      ...account,\n      accBalance: account.accBalance - Number(inputAmount)\n    };\n    console.log(\"Updated account data before PUT:\", updatedAccount); // Debug log\n\n    // // Send PUT request to update account balance in the DB\n    axios.put(`http://localhost:8080/api/account/userid/${userId}`, updatedAccount, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      console.log(\"Response from PUT request:\", response.data); // Debug log\n      setAccount(response.data); // Update account in context with the response\n      console.log(\"Account balance updated in context:\", response.data);\n      console.log(\"this is your added balance\" + (account.accBalance + Number(inputAmount)));\n      setFundTransfer(false); // Close the deposit modal\n    }).catch(error => {\n      console.log(\"Error updating account balance:\", error);\n    });\n  }\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deposit-overlay\",\n    onClick: () => setFundTransfer(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deposit-modal\",\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deposit-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Fund Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleDeposit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"amount-details\",\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"amount\",\n            name: \"accBalance\",\n            value: inputAmount,\n            placeholder: \"Enter Amount Here\",\n            required: true,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"deposit-btn\",\n            children: \"FundTransafer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setFundTransfer(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this), portalRoot);\n}\n_s(FundTransfer, \"k/E+kN2fLUGagway8HWDsti4liE=\");\n_c = FundTransfer;\nexport default FundTransfer;\nvar _c;\n$RefreshReg$(_c, \"FundTransfer\");","map":{"version":3,"names":["ReactDOM","React","useContext","useState","useEffect","axios","AccountContext","jsxDEV","_jsxDEV","FundTransfer","setFundTransfer","_s","portalRoot","document","getElementById","account","setAccount","inputAmount","setInputAmount","userId","localStorage","getItem","get","then","response","data","catch","error","console","handleInputChange","e","target","value","handleDeposit","preventDefault","accBalance","alert","updatedAccount","Number","log","put","headers","createPortal","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","required","onChange","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/components/Dashboard/FundTransfer.js"],"sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport \"./deposit.css\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AccountContext } from \"../Context/AccountProvider\";\r\n\r\nfunction FundTransfer({ setFundTransfer }) {\r\n  const portalRoot = document.getElementById(\"portalRoot\");\r\n  const { account, setAccount } = useContext(AccountContext);\r\n  const [inputAmount, setInputAmount] = useState(\"\"); // Initialize with current balance or empty\r\n\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n    if (userId) {\r\n      axios\r\n        .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n        .then((response) => {\r\n          setAccount(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching account data:\", error);\r\n        });\r\n    }\r\n  }, [setAccount]);\r\n\r\n  if (!portalRoot) {\r\n    console.error(\"Portal root not found\");\r\n    return null;\r\n  }\r\n\r\n  // Handle input change\r\n  function handleInputChange(e) {\r\n    setInputAmount(e.target.value);\r\n  }\r\n\r\n  // Handle form submit (deposit action)\r\n  function handleDeposit(e) {\r\n    e.preventDefault();\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    // Conditions on fund transfer\r\n    if (account.accBalance < inputAmount || account.accBalance === 0) {\r\n      alert(\"Insufficient balance\");\r\n      return;\r\n    } else if (inputAmount < 0) {\r\n      alert(\"Please insert a valid amount\");\r\n      return;\r\n    }\r\n    // // Prepare updated account object with the new balance\r\n    const updatedAccount = {\r\n      ...account,\r\n      accBalance: account.accBalance - Number(inputAmount),\r\n    };\r\n\r\n    console.log(\"Updated account data before PUT:\", updatedAccount); // Debug log\r\n\r\n    // // Send PUT request to update account balance in the DB\r\n    axios\r\n      .put(\r\n        `http://localhost:8080/api/account/userid/${userId}`,\r\n        updatedAccount,\r\n        {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(\"Response from PUT request:\", response.data); // Debug log\r\n        setAccount(response.data); // Update account in context with the response\r\n        console.log(\"Account balance updated in context:\", response.data);\r\n        console.log(\r\n          \"this is your added balance\" +\r\n            (account.accBalance + Number(inputAmount))\r\n        );\r\n        setFundTransfer(false); // Close the deposit modal\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error updating account balance:\", error);\r\n      });\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"deposit-overlay\" onClick={() => setFundTransfer(false)}>\r\n      <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"deposit-inner\">\r\n          <h1>Fund Transfer</h1>\r\n          <form onSubmit={handleDeposit}>\r\n            <label className=\"amount-details\">Amount:</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"amount\"\r\n              name=\"accBalance\"\r\n              value={inputAmount}\r\n              placeholder=\"Enter Amount Here\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n            <button type=\"submit\" className=\"deposit-btn\">\r\n              FundTransafer\r\n            </button>\r\n          </form>\r\n          <button\r\n            className=\"close-button\"\r\n            onClick={() => setFundTransfer(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    portalRoot\r\n  );\r\n}\r\n\r\nexport default FundTransfer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\components\\\\Dashboard\\\\Deposit.js\",\n  _s = $RefreshSig$();\n// import ReactDOM from \"react-dom\";\n// import \"./deposit.css\";\n// import React, { useContext, useState } from \"react\";\n// import { useEffect } from \"react\";\n// import axios from \"axios\";\n// import { AccountContext } from \"../Context/AccountProvider\";\n\n// function Deposit({ setDeposit }) {\n//   const [form, setFrom] = useState({\n//     userId: \"\",\n//     accNumber: \"\",\n//     accBalance: \"\",\n//     accCreatedAt: \"\",\n//     accType: \"savings\",\n//   });\n//   const portalRoot = document.getElementById(\"portalRoot\");\n//   const { account, setAccount } = useContext(AccountContext);\n\n//   console.log(JSON.stringify(account));\n\n//   useEffect(() => {\n//     const userId = localStorage.getItem(\"userId\");\n\n//     if (userId) {\n//       axios\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\n//         .then((response) => {\n//           setAccount(response.data);\n//           console.log(response.data);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching account data:\", error);\n//         });\n//     }\n//     // const account = {\n//     //   userId: userId,\n//     //   accNumber: account.accNumber,\n//     //   accBalance: account.accBalance,\n//     //   accCreatedAt: account.accCreatedAt,\n//     //   accType: account.accType,\n//     // };\n//     axios\n//       .put(`http://localhost:8080/api/account/userid/${userId}`, account, {\n//         headers: { \"Content-Type\": \"application/json\" },\n//       })\n//       .then((response) => {\n//         console.log(response.data);\n//         console.log(account.accBalance);\n//       })\n//       .catch((error) => console.log(error));\n//   }, [setAccount]);\n\n//   console.log(JSON.stringify(account));\n//   if (!portalRoot) {\n//     console.error(\"Portal root not found\");\n//     return null;\n//   }\n\n//   function handleChange(e) {\n//     const userId = localStorage.getItem(\"userId\");\n//     const updatedAccount = { ...account, accBalance: e.target.value };\n//     setAccount(updatedAccount);\n//     axios\n//       .put(`http://localhost:8080/api/account/userid/${userId}`)\n//       .then((response) => {\n//         // setAccount(response.data);\n//         console.log(response.data);\n//         console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n\n//     setAccount((preForm) => {\n//       return {\n//         ...preForm,\n//         accBalance: e.target.value,\n//       };\n//     });\n//   }\n\n//   const amountUpdate = async (e) => {\n//     e.preventDefault();\n//     // setAccount(e.target.value);\n//     setAccount((preForm) => {\n//       return {\n//         ...preForm,\n//         accBalance: e.target.value,\n//       };\n//     });\n//   };\n\n//   // on click handler\n//   function onClickHandler(e) {\n//     setDeposit(false);\n//   }\n//   // Make a POST request to deposit the amount\n//   console.log(account.accBalance);\n//   return ReactDOM.createPortal(\n//     <div className=\"deposit-overlay\" onClick={onClickHandler}>\n//       <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\n//         <div className=\"deposit-inner\">\n//           <h1>Deposit</h1>\n//           <label className=\"amount-details\">Amount:</label>\n//           <input\n//             type=\"number\"\n//             className=\"amount\"\n//             name=\"accBalance\"\n//             value={account.accBalance}\n//             placeholder=\"Enter Amount Here\"\n//             required\n//             onChange={amountUpdate}\n//           />\n//           <button type=\"submit\" onClick={handleChange}>\n//             Deposit\n//           </button>\n//           <button className=\"close-button\" onClick={() => setDeposit(false)}>\n//             Close\n//           </button>\n//         </div>\n//       </div>\n//     </div>,\n//     portalRoot\n//   );\n// }\n// export default Deposit;\n\nimport ReactDOM from \"react-dom\";\nimport \"./deposit.css\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { AccountContext } from \"../Context/AccountProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Deposit({\n  setDeposit\n}) {\n  _s();\n  const [form, setFrom] = useState({\n    userId: \"\",\n    accNumber: \"\",\n    accBalance: \"\",\n    accCreatedAt: \"\",\n    accType: \"savings\"\n  });\n  const portalRoot = document.getElementById(\"portalRoot\");\n  const {\n    account,\n    setAccount\n  } = useContext(AccountContext);\n  console.log(JSON.stringify(account));\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    if (userId) {\n      axios.get(`http://localhost:8080/api/account/userid/${userId}`).then(response => {\n        setAccount(response.data);\n        console.log(response.data);\n      }).catch(error => {\n        console.error(\"Error fetching account data:\", error);\n      });\n    }\n  }, [setAccount]);\n  console.log(JSON.stringify(account));\n  if (!portalRoot) {\n    console.error(\"Portal root not found\");\n    return null;\n  }\n  function handleChange(e) {\n    const userId = localStorage.getItem(\"userId\");\n    const updatedAccount = {\n      ...account,\n      accBalance: e.target.value\n    };\n    setAccount(updatedAccount);\n    axios.put(`http://localhost:8080/api/account/userid/${userId}`, updatedAccount, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      console.log(response.data);\n      console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\n    }).catch(error => {\n      console.log(error);\n    })[(account, setAccount)];\n  }\n  function amountUpdate(e) {\n    e.preventDefault();\n    setAccount(preForm => {\n      return {\n        ...preForm,\n        accBalance: e.target.value\n      };\n    });\n    [setAccount];\n  }\n\n  // on click handler\n  function onClickHandler(e) {\n    setDeposit(false);\n  }\n  // Make a POST request to deposit the amount\n  console.log(account.accBalance);\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deposit-overlay\",\n    onClick: onClickHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deposit-modal\",\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deposit-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"amount-details\",\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"amount\",\n          name: \"accBalance\",\n          value: account.accBalance,\n          placeholder: \"Enter Amount Here\",\n          required: true,\n          onChange: amountUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleChange,\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setDeposit(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this), portalRoot);\n}\n_s(Deposit, \"e02Pl/2hwEzFibz71CLpZy7lUA8=\");\n_c = Deposit;\nexport default Deposit;\n// import axios from \"axios\";\n// import { useContext } from \"react\";\n// import { AccountContext } from \"../Context/AccountProvider\";\n\n// function Deposit({ setDeposit }) {\n//   const { account, setAccount } = useContext(AccountContext);\n//   const [form, setFrom] = useState({\n//     userId: \"\",\n//     accNumber: \"\",\n//     accBalance: \"\",\n//     accCreatedAt: \"\",\n//     accType: \"savings\",\n//   });\n\n//   useEffect(() => {\n//     const userId = localStorage.getItem(\"userId\");\n\n//     if (userId) {\n//       axios\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\n//         .then((response) => {\n//           setAccount(response.data);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching account data:\", error);\n//         });\n//     }\n//   }, [setAccount]);\n\n//   const amountUpdate = async (e) => {\n//     e.preventDefault();\n//     setAccount((preForm) => {\n//       return {\n//         ...preForm,\n//         accBalance: e.target.value,\n//       };\n//     });\n//   };\n\n//   // const handleChange = (e) => {\n//   //   const userId = localStorage.getItem(\"userId\");\n//   //   const updatedAccount = { ...account, accBalance: e.target.value };\n//   //   setAccount(updatedAccount);\n//   //   axios\n//   //     .put(\n//   //       `http://localhost:8080/api/account/userid/${userId}`,\n//   //       updatedAccount,\n//   //       {\n//   //         headers: { \"Content-Type\": \"application/json\" },\n//   //       }\n//   //     )\n//   //     .then((response) => {\n//   //       console.log(response.data);\n//   //       console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\n//   //     })\n//   //     .catch((error) => {\n//   //       console.log(error);\n//   //     });\n//   // };\n\n//   const handleChange = (e) => {\n//     const userId = localStorage.getItem(\"userId\");\n//     const updatedAccount = { ...account, accBalance: e.target.value };\n//     if (updatedAccount.accBalance !== account.accBalance) {\n//       setAccount(updatedAccount);\n//       axios\n//         .put(\n//           `http://localhost:8080/api/account/userid/${userId}`,\n//           updatedAccount,\n//           {\n//             headers: { \"Content-Type\": \"application/json\" },\n//           }\n//         )\n//         .then((response) => {\n//           console.log(response.data);\n//           console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\n//         })\n//         .catch((error) => {\n//           console.log(error);\n//         });\n//     }\n//   };\n//   if (!account) {\n//     return null;\n//   }\n//     function onClickHandler(e) {\n//       setDeposit(false);\n//     }\n//   return (\n//     <div>\n//       <label className=\"amount-details\">Amount:</label>\n//       <input\n//         type=\"number\"\n//         className=\"amount\"\n//         name=\"accBalance\"\n//         value={account.accBalance}\n//         placeholder=\"Enter Amount Here\"\n//         required\n//         onChange={amountUpdate}\n//       />\n//       <button type=\"submit\" onClick={handleChange}>\n//         Deposit\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default Deposit;\nvar _c;\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"names":["ReactDOM","React","useContext","useState","useEffect","axios","AccountContext","jsxDEV","_jsxDEV","Deposit","setDeposit","_s","form","setFrom","userId","accNumber","accBalance","accCreatedAt","accType","portalRoot","document","getElementById","account","setAccount","console","log","JSON","stringify","localStorage","getItem","get","then","response","data","catch","error","handleChange","e","updatedAccount","target","value","put","headers","amountUpdate","preventDefault","preForm","onClickHandler","createPortal","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","required","onChange","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/components/Dashboard/Deposit.js"],"sourcesContent":["// import ReactDOM from \"react-dom\";\r\n// import \"./deposit.css\";\r\n// import React, { useContext, useState } from \"react\";\r\n// import { useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { AccountContext } from \"../Context/AccountProvider\";\r\n\r\n// function Deposit({ setDeposit }) {\r\n//   const [form, setFrom] = useState({\r\n//     userId: \"\",\r\n//     accNumber: \"\",\r\n//     accBalance: \"\",\r\n//     accCreatedAt: \"\",\r\n//     accType: \"savings\",\r\n//   });\r\n//   const portalRoot = document.getElementById(\"portalRoot\");\r\n//   const { account, setAccount } = useContext(AccountContext);\r\n\r\n//   console.log(JSON.stringify(account));\r\n\r\n//   useEffect(() => {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n\r\n//     if (userId) {\r\n//       axios\r\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n//         .then((response) => {\r\n//           setAccount(response.data);\r\n//           console.log(response.data);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching account data:\", error);\r\n//         });\r\n//     }\r\n//     // const account = {\r\n//     //   userId: userId,\r\n//     //   accNumber: account.accNumber,\r\n//     //   accBalance: account.accBalance,\r\n//     //   accCreatedAt: account.accCreatedAt,\r\n//     //   accType: account.accType,\r\n//     // };\r\n//     axios\r\n//       .put(`http://localhost:8080/api/account/userid/${userId}`, account, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//       })\r\n//       .then((response) => {\r\n//         console.log(response.data);\r\n//         console.log(account.accBalance);\r\n//       })\r\n//       .catch((error) => console.log(error));\r\n//   }, [setAccount]);\r\n\r\n//   console.log(JSON.stringify(account));\r\n//   if (!portalRoot) {\r\n//     console.error(\"Portal root not found\");\r\n//     return null;\r\n//   }\r\n\r\n//   function handleChange(e) {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n//     const updatedAccount = { ...account, accBalance: e.target.value };\r\n//     setAccount(updatedAccount);\r\n//     axios\r\n//       .put(`http://localhost:8080/api/account/userid/${userId}`)\r\n//       .then((response) => {\r\n//         // setAccount(response.data);\r\n//         console.log(response.data);\r\n//         console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n\r\n//     setAccount((preForm) => {\r\n//       return {\r\n//         ...preForm,\r\n//         accBalance: e.target.value,\r\n//       };\r\n//     });\r\n//   }\r\n\r\n//   const amountUpdate = async (e) => {\r\n//     e.preventDefault();\r\n//     // setAccount(e.target.value);\r\n//     setAccount((preForm) => {\r\n//       return {\r\n//         ...preForm,\r\n//         accBalance: e.target.value,\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   // on click handler\r\n//   function onClickHandler(e) {\r\n//     setDeposit(false);\r\n//   }\r\n//   // Make a POST request to deposit the amount\r\n//   console.log(account.accBalance);\r\n//   return ReactDOM.createPortal(\r\n//     <div className=\"deposit-overlay\" onClick={onClickHandler}>\r\n//       <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\r\n//         <div className=\"deposit-inner\">\r\n//           <h1>Deposit</h1>\r\n//           <label className=\"amount-details\">Amount:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"amount\"\r\n//             name=\"accBalance\"\r\n//             value={account.accBalance}\r\n//             placeholder=\"Enter Amount Here\"\r\n//             required\r\n//             onChange={amountUpdate}\r\n//           />\r\n//           <button type=\"submit\" onClick={handleChange}>\r\n//             Deposit\r\n//           </button>\r\n//           <button className=\"close-button\" onClick={() => setDeposit(false)}>\r\n//             Close\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>,\r\n//     portalRoot\r\n//   );\r\n// }\r\n// export default Deposit;\r\n\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./deposit.css\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AccountContext } from \"../Context/AccountProvider\";\r\n\r\nfunction Deposit({ setDeposit }) {\r\n  const [form, setFrom] = useState({\r\n    userId: \"\",\r\n    accNumber: \"\",\r\n    accBalance: \"\",\r\n    accCreatedAt: \"\",\r\n    accType: \"savings\",\r\n  });\r\n  const portalRoot = document.getElementById(\"portalRoot\");\r\n  const { account, setAccount } = useContext(AccountContext);\r\n\r\n  console.log(JSON.stringify(account));\r\n\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    if (userId) {\r\n      axios\r\n        .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n        .then((response) => {\r\n          setAccount(response.data);\r\n          console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching account data:\", error);\r\n        });\r\n    }\r\n  }, [setAccount]);\r\n\r\n  console.log(JSON.stringify(account));\r\n  if (!portalRoot) {\r\n    console.error(\"Portal root not found\");\r\n    return null;\r\n  }\r\n\r\n  function handleChange(e) {\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const updatedAccount = { ...account, accBalance: e.target.value };\r\n    setAccount(updatedAccount);\r\n    axios\r\n      .put(\r\n        `http://localhost:8080/api/account/userid/${userId}`,\r\n        updatedAccount,\r\n        {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })[(account, setAccount)];\r\n  }\r\n\r\n  function amountUpdate(e) {\r\n    e.preventDefault();\r\n    setAccount((preForm) => {\r\n      return {\r\n        ...preForm,\r\n        accBalance: e.target.value,\r\n      };\r\n    });\r\n    [setAccount];\r\n  }\r\n\r\n  // on click handler\r\n  function onClickHandler(e) {\r\n    setDeposit(false);\r\n  }\r\n  // Make a POST request to deposit the amount\r\n  console.log(account.accBalance);\r\n  return ReactDOM.createPortal(\r\n    <div className=\"deposit-overlay\" onClick={onClickHandler}>\r\n      <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"deposit-inner\">\r\n          <h1>Deposit</h1>\r\n          <label className=\"amount-details\">Amount:</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"amount\"\r\n            name=\"accBalance\"\r\n            value={account.accBalance}\r\n            placeholder=\"Enter Amount Here\"\r\n            required\r\n            onChange={amountUpdate}\r\n          />\r\n          <button type=\"submit\" onClick={handleChange}>\r\n            Deposit\r\n          </button>\r\n          <button className=\"close-button\" onClick={() => setDeposit(false)}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    portalRoot\r\n  );\r\n}\r\nexport default Deposit;\r\n// import axios from \"axios\";\r\n// import { useContext } from \"react\";\r\n// import { AccountContext } from \"../Context/AccountProvider\";\r\n\r\n// function Deposit({ setDeposit }) {\r\n//   const { account, setAccount } = useContext(AccountContext);\r\n//   const [form, setFrom] = useState({\r\n//     userId: \"\",\r\n//     accNumber: \"\",\r\n//     accBalance: \"\",\r\n//     accCreatedAt: \"\",\r\n//     accType: \"savings\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n\r\n//     if (userId) {\r\n//       axios\r\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n//         .then((response) => {\r\n//           setAccount(response.data);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching account data:\", error);\r\n//         });\r\n//     }\r\n//   }, [setAccount]);\r\n\r\n//   const amountUpdate = async (e) => {\r\n//     e.preventDefault();\r\n//     setAccount((preForm) => {\r\n//       return {\r\n//         ...preForm,\r\n//         accBalance: e.target.value,\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   // const handleChange = (e) => {\r\n//   //   const userId = localStorage.getItem(\"userId\");\r\n//   //   const updatedAccount = { ...account, accBalance: e.target.value };\r\n//   //   setAccount(updatedAccount);\r\n//   //   axios\r\n//   //     .put(\r\n//   //       `http://localhost:8080/api/account/userid/${userId}`,\r\n//   //       updatedAccount,\r\n//   //       {\r\n//   //         headers: { \"Content-Type\": \"application/json\" },\r\n//   //       }\r\n//   //     )\r\n//   //     .then((response) => {\r\n//   //       console.log(response.data);\r\n//   //       console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\r\n//   //     })\r\n//   //     .catch((error) => {\r\n//   //       console.log(error);\r\n//   //     });\r\n//   // };\r\n\r\n//   const handleChange = (e) => {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n//     const updatedAccount = { ...account, accBalance: e.target.value };\r\n//     if (updatedAccount.accBalance !== account.accBalance) {\r\n//       setAccount(updatedAccount);\r\n//       axios\r\n//         .put(\r\n//           `http://localhost:8080/api/account/userid/${userId}`,\r\n//           updatedAccount,\r\n//           {\r\n//             headers: { \"Content-Type\": \"application/json\" },\r\n//           }\r\n//         )\r\n//         .then((response) => {\r\n//           console.log(response.data);\r\n//           console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.log(error);\r\n//         });\r\n//     }\r\n//   };\r\n//   if (!account) {\r\n//     return null;\r\n//   }\r\n//     function onClickHandler(e) {\r\n//       setDeposit(false);\r\n//     }\r\n//   return (\r\n//     <div>\r\n//       <label className=\"amount-details\">Amount:</label>\r\n//       <input\r\n//         type=\"number\"\r\n//         className=\"amount\"\r\n//         name=\"accBalance\"\r\n//         value={account.accBalance}\r\n//         placeholder=\"Enter Amount Here\"\r\n//         required\r\n//         onChange={amountUpdate}\r\n//       />\r\n//       <button type=\"submit\" onClick={handleChange}>\r\n//         Deposit\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Deposit;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,QAAQ,MAAM,WAAW;AAChC,OAAO,eAAe;AACtB,OAAOC,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,OAAOA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;EACxD,MAAM;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGrB,UAAU,CAACI,cAAc,CAAC;EAE1DkB,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACL,OAAO,CAAC,CAAC;EAEpCl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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
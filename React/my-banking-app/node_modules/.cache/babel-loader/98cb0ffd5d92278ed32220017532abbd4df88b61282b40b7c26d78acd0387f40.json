{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import \"../Dashboard/dashboard.css\";\n// import axios from \"axios\";\n// import Deposit from \"./Deposit\";\n// import FundTransfer from \"./FundTransfer\";\n// import { useNavigate } from \"react-router-dom\";\n// import { AccountContext } from \"../Context/AccountProvider\";\n// import { useContext } from \"react\";\n// import \"../Dashboard/Transaction/transaction.css\";\n// import Loan from \"./Loan\";\n// import { useLocation } from \"react-router-dom\";\n\n// function Dashboard() {\n//   const { account, setAccount } = useContext(AccountContext);\n//   const [loading, setLoading] = useState(true);\n//   const [userDetail, setUserDetails] = useState({});\n//   const [depositPopUp, setDepositPopUp] = useState(false);\n//   const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\n//   const [transactions, setTransactions] = useState([]);\n//   const [loanPopUp, setLoanPopUp] = useState(false);\n//   const location = useLocation();\n//   const { JWTaccount, SetJWTuser } = location.state;\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const userId = localStorage.getItem(\"userId\");\n\n//     if (userId) {\n//       axios\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\n//         .then((response) => {\n//           setAccount(response.data);\n//           setLoading(false);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching account data:\", error);\n//           setLoading(false);\n//         });\n\n//       axios\n//         .get(\"http://localhost:8080/api/users/\" + userId)\n//         .then((response) => {\n//           setUserDetails(response.data);\n//         })\n//         .catch((error) => console.log(error));\n\n//       axios\n//         .get(`http://localhost:8080/api/transaction/${userId}`)\n//         .then((response) => {\n//           setTransactions(response.data);\n//           console.log(response.data);\n\n//           console.log(\"Transaction\");\n//         })\n//         .catch((error) => {\n//           console.log(error);\n//         });\n//     }\n//   }, [setAccount]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (!account || Object.keys(account).length === 0) {\n//     return <div>No account data available.</div>;\n//   }\n\n//   const userId = localStorage.getItem(\"userId\");\n\n//   return (\n//     <div\n//       className={\n//         depositPopUp || fundTransferPopUp\n//           ? \"Dashboard dashboard-blur\"\n//           : \"Dashboard\"\n//       }\n//     >\n//       <div className=\"dashboard-page-border\">\n//         <div className=\"page-size\">\n//           <div className=\"dashboard-hr\"></div>\n//           <div className=\"nav-bar\">\n//             <div className=\"dashbord-un-bn\">\n//               <span className=\"dashboard-logo\">logo</span>\n//               <span className=\"dashbord-bank-name\">Easy Online Banking</span>\n//               <span className=\"dashbord-userName\">{userDetail.first_Name}</span>\n//               <button className=\"dashbord-user-img\">ðŸ‘¤</button>\n//             </div>\n//             <div className=\"dashboard-hr\"></div>\n//             <div className=\"navbar-page\">\n//               <div className=\"nav-bar-data\">\n//                 <button\n//                   className=\"dashboard sidebtn\"\n//                   onClick={() => navigate(`/dashboard/${userId}`)}\n//                 >\n//                   Dashboard\n//                 </button>\n//                 <button\n//                   className=\"loan sidebtn\"\n//                   onClick={() => setLoanPopUp(true)}\n//                   onMouseOut={() => console.log(\"mouse working\")}\n//                 >\n//                   Loan\n//                 </button>\n//                 <button\n//                   className=\"cards sidebtn\"\n//                   onClick={() => navigate(\"/card\")}\n//                 >\n//                   Cards\n//                 </button>\n//                 <button\n//                   onClick={() => setDepositPopUp(true)}\n//                   className=\"deposit sidebtn\"\n//                 >\n//                   Deposit\n//                 </button>\n//                 <button\n//                   className=\"fund sidebtn\"\n//                   onClick={() => setFundTransferPopUp(true)}\n//                 >\n//                   {\" \"}\n//                   Fund Transfer\n//                 </button>\n//                 <button className=\"bell sidebtn\">Log out</button>\n//               </div>\n//             </div>\n//             {/* Rest of your dashboard content */}\n//             {/* <div className=\"acc-bal\"></div> */}\n//             <div className=\"account-test\">\n//               <div className=\"dashbord-account-Balance\">\n//                 <p className=\"amount\">\n//                   Account Balance: {JWTaccount.accBalance}\n//                 </p>\n//               </div>\n//               <div className=\"account\">\n//                 <div className=\"dashboard-account-Details\">\n//                   <div className=\"user-detail\">\n//                     {/* <p>\n//                     User Name:{\" \"}\n//                     {userDetail.first_Name + \" \" + userDetail.last_Name}\n//                   </p> */}\n//                     <p>Account Number: {JWTaccount.accNumber}</p>\n//                     {/* <p>Account Type: {account.accType}</p> */}\n//                     <p>Account Created Date: {JWTaccount.accCreatedAt}</p>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"dashboard-trans-border\">\n//               <p className=\"transaction-header\" key={JWTaccount.accNumber}>\n//                 Transaction History\n//               </p>\n//               {/* <div className=\"dashboard-hr\"></div>   */}\n//               <div className=\"transaction\">\n//                 <table className=\"transaction-table table\">\n//                   <thead className=\"tr-position\">\n//                     <tr className=\"tr-position\">\n//                       <th className=\"transaction-table sl-no \">Sl No.</th>\n//                       <th className=\"transaction-table details\">\n//                         Transaction Details\n//                       </th>\n//                       <th className=\"transaction-table trans-amount\">Amount</th>\n//                       <th className=\"transaction-table balance\">Balance</th>\n//                       <th className=\"transaction-table date\">Date</th>\n//                     </tr>\n//                   </thead>\n//                   {transactions.length > 0 ? (\n//                     transactions.map((transaction, index) => (\n//                       <tbody className=\"table-body\">\n//                         <tr key={transaction.id} className=\"transaction-head\">\n//                           <td className=\"index\">{index + 1}</td>\n//                           <td className=\"transaction-details\">\n//                             {transaction.transferDetails}\n//                           </td>\n//                           <td className=\"amount-transfered\">\n//                             {transaction.amountTransfered}{\" \"}\n//                             <span className=\"credited\">cr</span>\n//                           </td>\n//                           <td className=\"acc-balance\">{transaction.balance}</td>\n//                           <td className=\"date\">{transaction.transferDate}</td>\n//                         </tr>\n//                       </tbody>\n//                     ))\n//                   ) : (\n//                     <div className=\"no-transaction\">\n//                       {\" \"}\n//                       No Transaction Avaialbel\n//                     </div>\n//                   )}\n//                 </table>\n//               </div>\n//             </div>\n//           </div>\n//           {depositPopUp && <Deposit setDeposit={setDepositPopUp} />}\n//           {fundTransferPopUp && (\n//             <FundTransfer setFundTransfer={setFundTransferPopUp} />\n//           )}\n//           {loanPopUp && <Loan setLoan={setLoanPopUp} />}\n\n//           <div className=\"dashboard-hr\"></div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n// import React, { useEffect, useState } from \"react\";\n// import \"../Dashboard/dashboard.css\";\n// import axios from \"axios\";\n// import Deposit from \"./Deposit\";\n// import FundTransfer from \"./FundTransfer\";\n// import { useNavigate } from \"react-router-dom\";\n// import { AccountContext } from \"../Context/AccountProvider\";\n// import { useContext } from \"react\";\n// import \"../Dashboard/Transaction/transaction.css\";\n// import Loan from \"./Loan\";\n// import { useLocation } from \"react-router-dom\";\n\n// function Dashboard() {\n//   const { account, setAccount } = useContext(AccountContext);\n//   const [loading, setLoading] = useState(true);\n//   const [userDetail, setUserDetails] = useState({});\n//   const [depositPopUp, setDepositPopUp] = useState(false);\n//   const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\n//   const [transactions, setTransactions] = useState([]);\n//   const [loanPopUp, setLoanPopUp] = useState(false);\n//   const location = useLocation();\n//   const { JWTaccount, SetJWTuser } = location.state;\n\n//   const navigate = useNavigate();\n\n//   // useEffect(() => {\n//   //   if (JWTaccount) {\n//   //     setAccount(JWTaccount);\n//   //     setUserDetails(SetJWTuser);\n//   //     setLoading(false);\n//   //   } else {\n//   //     // const userId = localStorage.getItem(\"userId\");\n//   //     const userId = SetJWTuser.userId;\n\n//   //     if (userId) {\n//   //       axios\n//   //         .get(`http://localhost:8080/api/account/userid/${userId}`)\n//   //         .then((response) => {\n//   //           setAccount(response.data);\n//   //           setLoading(false);\n//   //         })\n//   //         .catch((error) => {\n//   //           console.error(\"Error fetching account data:\", error);\n//   //           setLoading(false);\n//   //         });\n\n//   //       axios\n//   //         .get(\"http://localhost:8080/api/users/\" + userId)\n//   //         .then((response) => {\n//   //           setUserDetails(response.data);\n//   //         })\n//   //         .catch((error) => console.log(error));\n\n//   //       axios\n//   //         .get(`http://localhost:8080/api/transaction/${userId}`)\n//   //         .then((response) => {\n//   //           setTransactions(response.data);\n//   //           console.log(response.data);\n\n//   //           console.log(\"Transaction\");\n//   //         })\n//   //         .catch((error) => {\n//   //           console.log(error);\n//   //         });\n//   //     }\n//   //   }\n//   // }, [setAccount]);\n\n//   useEffect(() => {\n//     if (JWTaccount) {\n//       setAccount(JWTaccount);\n//       setUserDetails(SetJWTuser);\n//       setLoading(false);\n//     } else {\n//       const userId = SetJWTuser.userId;\n//       const token = localStorage.getItem(\"authToken\");\n\n//       if (userId && token) {\n//         axios\n//           .get(`http://localhost:8080/api/account/userid/${userId}`, {\n//             headers: { Authorization: `Bearer ${token}` },\n//           })\n//           .then((response) => {\n//             setAccount(response.data);\n//             setLoading(false);\n//           })\n//           .catch((error) => {\n//             console.error(\"Error fetching account data:\", error);\n//             setLoading(false);\n//           });\n\n//         axios\n//           .get(\"http://localhost:8080/api/users/\" + userId, {\n//             headers: { Authorization: `Bearer ${token}` },\n//           })\n//           .then((response) => {\n//             setUserDetails(response.data);\n//           })\n//           .catch((error) => console.log(error));\n\n//         axios\n//           .get(`http://localhost:8080/api/transaction/${userId}`, {\n//             headers: { Authorization: `Bearer ${token}` },\n//           })\n//           .then((response) => {\n//             setTransactions(response.data);\n//             console.log(response.data);\n\n//             console.log(\"Transaction\");\n//           })\n//           .catch((error) => {\n//             console.log(error);\n//           });\n//       }\n//     }\n//   }, [setAccount]);\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (!account || Object.keys(account).length === 0) {\n//     return <div>No account data available.</div>;\n//   }\n\n//   const userId = localStorage.getItem(\"userId\");\n\n//   return (\n//     <div\n//       className={\n//         depositPopUp || fundTransferPopUp\n//           ? \"Dashboard dashboard-blur\"\n//           : \"Dashboard\"\n//       }\n//     >\n//       <div className=\"dashboard-page-border\">\n//         <div className=\"page-size\">\n//           <div className=\"dashboard-hr\"></div>\n//           <div className=\"nav-bar\">\n//             <div className=\"dashbord-un-bn\">\n//               <span className=\"dashboard-logo\">logo</span>\n//               <span className=\"dashbord-bank-name\">Easy Online Banking</span>\n//               <span className=\"dashbord-userName\">{userDetail.first_Name}</span>\n//               <button className=\"dashbord-user-img\">ðŸ‘¤</button>\n//             </div>\n//             <div className=\"dashboard-hr\"></div>\n//             <div className=\"navbar-page\">\n//               <div className=\"nav-bar-data\">\n//                 <button\n//                   className=\"dashboard sidebtn\"\n//                   onClick={() => navigate(`/dashboard/${userId}`)}\n//                 >\n//                   Dashboard\n//                 </button>\n//                 <button\n//                   className=\"loan sidebtn\"\n//                   onClick={() => setLoanPopUp(true)}\n//                   onMouseOut={() => console.log(\"mouse working\")}\n//                 >\n//                   Loan\n//                 </button>\n//                 <button\n//                   className=\"cards sidebtn\"\n//                   onClick={() => navigate(\"/card\")}\n//                 >\n//                   Cards\n//                 </button>\n//                 <button\n//                   onClick={() => setDepositPopUp(true)}\n//                   className=\"deposit sidebtn\"\n//                 >\n//                   Deposit\n//                 </button>\n//                 <button\n//                   className=\"fund sidebtn\"\n//                   onClick={() => setFundTransferPopUp(true)}\n//                 >\n//                   {\" \"}\n//                   Fund Transfer\n//                 </button>\n//                 <button className=\"bell sidebtn\">Log out</button>\n//               </div>\n//             </div>\n//             {/* Rest of your dashboard content */}\n//             {/* <div className=\"acc-bal\"></div> */}\n//             <div className=\"account-test\">\n//               <div className=\"dashbord-account-Balance\">\n//                 <p className=\"amount\">Account Balance: {account.accBalance}</p>\n//               </div>\n//               <div className=\"account\">\n//                 <div className=\"dashboard-account-Details\">\n//                   <div className=\"user-detail\">\n//                     {/* <p>\n//                     User Name:{\" \"}\n//                     {userDetail.first_Name + \" \" + userDetail.last_Name}\n//                   </p> */}\n//                     <p>Account Number: {account.accNumber}</p>\n//                     {/* <p>Account Type: {account.accType}</p> */}\n//                     <p>Account Created Date: {account.accCreatedAt}</p>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"dashboard-trans-border\">\n//               <p className=\"transaction-header\" key={account.accNumber}>\n//                 Transaction History\n//               </p>\n//               {/* <div className=\"dashboard-hr\"></div>   */}\n//               <div className=\"transaction\">\n//                 <table className=\"transaction-table table\">\n//                   <thead className=\"tr-position\">\n//                     <tr className=\"tr-position\">\n//                       <th className=\"transaction-table sl-no \">Sl No.</th>\n//                       <th className=\"transaction-table details\">\n//                         Transaction Details\n//                       </th>\n//                       <th className=\"transaction-table trans-amount\">Amount</th>\n//                       <th className=\"transaction-table balance\">Balance</th>\n//                       <th className=\"transaction-table date\">Date</th>\n//                     </tr>\n//                   </thead>\n//                   {transactions.length > 0 ? (\n//                     transactions.map((transaction, index) => (\n//                       <tbody className=\"table-body\">\n//                         <tr key={transaction.id} className=\"transaction-head\">\n//                           <td className=\"index\">{index + 1}</td>\n//                           <td className=\"transaction-details\">\n//                             {transaction.transferDetails}\n//                           </td>\n//                           <td className=\"amount-transfered\">\n//                             {transaction.amountTransfered}{\" \"}\n//                             <span className=\"credited\">cr</span>\n//                           </td>\n//                           <td className=\"acc-balance\">{transaction.balance}</td>\n//                           <td className=\"date\">{transaction.transferDate}</td>\n//                         </tr>\n//                       </tbody>\n//                     ))\n//                   ) : (\n//                     <div className=\"no-transaction\">\n//                       {\" \"}\n//                       No Transaction Avaialbel\n//                     </div>\n//                   )}\n//                 </table>\n//               </div>\n//             </div>\n//           </div>\n//           {depositPopUp && <Deposit setDeposit={setDepositPopUp} />}\n//           {fundTransferPopUp && (\n//             <FundTransfer setFundTransfer={setFundTransferPopUp} />\n//           )}\n//           {loanPopUp && <Loan setLoan={setLoanPopUp} />}\n\n//           <div className=\"dashboard-hr\"></div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\nimport React, { useEffect, useState } from \"react\";\nimport \"../Dashboard/dashboard.css\";\nimport axios from \"axios\";\nimport Deposit from \"./Deposit\";\nimport FundTransfer from \"./FundTransfer\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AccountContext } from \"../Context/AccountProvider\";\nimport { useContext } from \"react\";\nimport \"../Dashboard/Transaction/transaction.css\";\nimport Loan from \"./Loan\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const {\n    account,\n    setAccount\n  } = useContext(AccountContext);\n  const [loading, setLoading] = useState(true);\n  const [userDetail, setUserDetails] = useState({});\n  const [depositPopUp, setDepositPopUp] = useState(false);\n  const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  const [loanPopUp, setLoanPopUp] = useState(false);\n  const location = useLocation();\n  const {\n    JWTaccount,\n    SetJWTuser\n  } = location.state;\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userId = SetJWTuser.userId;\n    sessionStorage.setItem(\"userId\", userId);\n  }, [SetJWTuser]);\n  useEffect(() => {\n    if (JWTaccount) {\n      setAccount(JWTaccount);\n      setUserDetails(SetJWTuser);\n      setLoading(false);\n    } else {\n      const userId = sessionStorage.getItem(\"userId\");\n      const token = localStorage.getItem(\"authToken\");\n      if (userId && token) {\n        axios.get(`http://localhost:8080/api/account/userid/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          setAccount(response.data);\n          setLoading(false);\n        }).catch(error => {\n          console.error(\"Error fetching account data:\", error);\n          setLoading(false);\n        });\n        axios.get(\"http://localhost:8080/api/users/\" + userId, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          setUserDetails(response.data);\n        }).catch(error => console.log(error));\n        axios.get(`http://localhost:8080/api/transaction/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          setTransactions(response.data);\n          console.log(response.data);\n          console.log(\"Transaction\");\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  }, [setAccount]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 12\n    }, this);\n  }\n  if (!account || Object.keys(account).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No account data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 12\n    }, this);\n  }\n  const userId = sessionStorage.getItem(\"userId\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: depositPopUp || fundTransferPopUp ? \"Dashboard dashboard-blur\" : \"Dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-page-border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-size\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-hr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashbord-un-bn\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dashboard-logo\",\n              children: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dashbord-bank-name\",\n              children: \"Easy Online Banking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dashbord-userName\",\n              children: userDetail.first_Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dashbord-user-img\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-hr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbar-page\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-bar-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dashboard sidebtn\",\n                onClick: () => navigate(`/dashboard/${userId}`),\n                children: \"Dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"loan sidebtn\",\n                onClick: () => setLoanPopUp(true),\n                onMouseOut: () => console.log(\"mouse working\"),\n                children: \"Loan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cards sidebtn\",\n                onClick: () => navigate(\"/card\"),\n                children: \"Cards\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setDepositPopUp(true),\n                className: \"deposit sidebtn\",\n                children: \"Deposit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"fund sidebtn\",\n                onClick: () => setFundTransferPopUp(true),\n                children: [\" \", \"Fund Transfer\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bell sidebtn\",\n                children: \"Log out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-test\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashbord-account-Balance\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \" amount\",\n                children: [\"Account Balance: \", account.accBalance]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"account\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dashboard-account-Details\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Account Number: \", account.accNumber]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Account Created Date: \", account.accCreatedAt]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-trans-border\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"transaction-header\",\n              children: \"Transaction History\"\n            }, account.accNumber, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"transaction-table table\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"tr-position\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: \"tr-position\",\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"transaction-table sl-no \",\n                      children: \"Sl No.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 644,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"transaction-table details\",\n                      children: \"Transaction Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 645,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"transaction-table trans-amount\",\n                      children: \"Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 648,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"transaction-table balance\",\n                      children: \"Balance\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 649,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"transaction-table date\",\n                      children: \"Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 650,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 19\n                }, this), transactions.length > 0 ? transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  className: \"table-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: \"transaction-head\",\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"index\",\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 657,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"transaction-details\",\n                      children: transaction.transferDetails\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 658,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"amount-transfered\",\n                      children: [transaction.amountTransfered, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"credited\",\n                        children: \"cr\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 663,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 661,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"acc-balance\",\n                      children: transaction.balance\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 665,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"date\",\n                      children: transaction.transferDate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 666,\n                      columnNumber: 27\n                    }, this)]\n                  }, transaction.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 656,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"no-transaction\",\n                  children: [\" \", \"No Transaction Avaialbel\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), depositPopUp && /*#__PURE__*/_jsxDEV(Deposit, {\n          setDeposit: setDepositPopUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 28\n        }, this), fundTransferPopUp && /*#__PURE__*/_jsxDEV(FundTransfer, {\n          setFundTransfer: setFundTransferPopUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 13\n        }, this), loanPopUp && /*#__PURE__*/_jsxDEV(Loan, {\n          setLoan: setLoanPopUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-hr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 560,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"3x0Oew8HoRldsmf7NLXflZx4FBo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Deposit","FundTransfer","useNavigate","AccountContext","useContext","Loan","useLocation","jsxDEV","_jsxDEV","Dashboard","_s","account","setAccount","loading","setLoading","userDetail","setUserDetails","depositPopUp","setDepositPopUp","fundTransferPopUp","setFundTransferPopUp","transactions","setTransactions","loanPopUp","setLoanPopUp","location","JWTaccount","SetJWTuser","state","navigate","userId","sessionStorage","setItem","getItem","token","localStorage","get","headers","Authorization","then","response","data","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","className","first_Name","onClick","onMouseOut","accBalance","accNumber","accCreatedAt","map","transaction","index","transferDetails","amountTransfered","balance","transferDate","id","setDeposit","setFundTransfer","setLoan","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/components/Dashboard/Dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import \"../Dashboard/dashboard.css\";\r\n// import axios from \"axios\";\r\n// import Deposit from \"./Deposit\";\r\n// import FundTransfer from \"./FundTransfer\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { AccountContext } from \"../Context/AccountProvider\";\r\n// import { useContext } from \"react\";\r\n// import \"../Dashboard/Transaction/transaction.css\";\r\n// import Loan from \"./Loan\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// function Dashboard() {\r\n//   const { account, setAccount } = useContext(AccountContext);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [userDetail, setUserDetails] = useState({});\r\n//   const [depositPopUp, setDepositPopUp] = useState(false);\r\n//   const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [loanPopUp, setLoanPopUp] = useState(false);\r\n//   const location = useLocation();\r\n//   const { JWTaccount, SetJWTuser } = location.state;\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n\r\n//     if (userId) {\r\n//       axios\r\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n//         .then((response) => {\r\n//           setAccount(response.data);\r\n//           setLoading(false);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching account data:\", error);\r\n//           setLoading(false);\r\n//         });\r\n\r\n//       axios\r\n//         .get(\"http://localhost:8080/api/users/\" + userId)\r\n//         .then((response) => {\r\n//           setUserDetails(response.data);\r\n//         })\r\n//         .catch((error) => console.log(error));\r\n\r\n//       axios\r\n//         .get(`http://localhost:8080/api/transaction/${userId}`)\r\n//         .then((response) => {\r\n//           setTransactions(response.data);\r\n//           console.log(response.data);\r\n\r\n//           console.log(\"Transaction\");\r\n//         })\r\n//         .catch((error) => {\r\n//           console.log(error);\r\n//         });\r\n//     }\r\n//   }, [setAccount]);\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (!account || Object.keys(account).length === 0) {\r\n//     return <div>No account data available.</div>;\r\n//   }\r\n\r\n//   const userId = localStorage.getItem(\"userId\");\r\n\r\n//   return (\r\n//     <div\r\n//       className={\r\n//         depositPopUp || fundTransferPopUp\r\n//           ? \"Dashboard dashboard-blur\"\r\n//           : \"Dashboard\"\r\n//       }\r\n//     >\r\n//       <div className=\"dashboard-page-border\">\r\n//         <div className=\"page-size\">\r\n//           <div className=\"dashboard-hr\"></div>\r\n//           <div className=\"nav-bar\">\r\n//             <div className=\"dashbord-un-bn\">\r\n//               <span className=\"dashboard-logo\">logo</span>\r\n//               <span className=\"dashbord-bank-name\">Easy Online Banking</span>\r\n//               <span className=\"dashbord-userName\">{userDetail.first_Name}</span>\r\n//               <button className=\"dashbord-user-img\">ðŸ‘¤</button>\r\n//             </div>\r\n//             <div className=\"dashboard-hr\"></div>\r\n//             <div className=\"navbar-page\">\r\n//               <div className=\"nav-bar-data\">\r\n//                 <button\r\n//                   className=\"dashboard sidebtn\"\r\n//                   onClick={() => navigate(`/dashboard/${userId}`)}\r\n//                 >\r\n//                   Dashboard\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"loan sidebtn\"\r\n//                   onClick={() => setLoanPopUp(true)}\r\n//                   onMouseOut={() => console.log(\"mouse working\")}\r\n//                 >\r\n//                   Loan\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"cards sidebtn\"\r\n//                   onClick={() => navigate(\"/card\")}\r\n//                 >\r\n//                   Cards\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setDepositPopUp(true)}\r\n//                   className=\"deposit sidebtn\"\r\n//                 >\r\n//                   Deposit\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"fund sidebtn\"\r\n//                   onClick={() => setFundTransferPopUp(true)}\r\n//                 >\r\n//                   {\" \"}\r\n//                   Fund Transfer\r\n//                 </button>\r\n//                 <button className=\"bell sidebtn\">Log out</button>\r\n//               </div>\r\n//             </div>\r\n//             {/* Rest of your dashboard content */}\r\n//             {/* <div className=\"acc-bal\"></div> */}\r\n//             <div className=\"account-test\">\r\n//               <div className=\"dashbord-account-Balance\">\r\n//                 <p className=\"amount\">\r\n//                   Account Balance: {JWTaccount.accBalance}\r\n//                 </p>\r\n//               </div>\r\n//               <div className=\"account\">\r\n//                 <div className=\"dashboard-account-Details\">\r\n//                   <div className=\"user-detail\">\r\n//                     {/* <p>\r\n//                     User Name:{\" \"}\r\n//                     {userDetail.first_Name + \" \" + userDetail.last_Name}\r\n//                   </p> */}\r\n//                     <p>Account Number: {JWTaccount.accNumber}</p>\r\n//                     {/* <p>Account Type: {account.accType}</p> */}\r\n//                     <p>Account Created Date: {JWTaccount.accCreatedAt}</p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"dashboard-trans-border\">\r\n//               <p className=\"transaction-header\" key={JWTaccount.accNumber}>\r\n//                 Transaction History\r\n//               </p>\r\n//               {/* <div className=\"dashboard-hr\"></div>   */}\r\n//               <div className=\"transaction\">\r\n//                 <table className=\"transaction-table table\">\r\n//                   <thead className=\"tr-position\">\r\n//                     <tr className=\"tr-position\">\r\n//                       <th className=\"transaction-table sl-no \">Sl No.</th>\r\n//                       <th className=\"transaction-table details\">\r\n//                         Transaction Details\r\n//                       </th>\r\n//                       <th className=\"transaction-table trans-amount\">Amount</th>\r\n//                       <th className=\"transaction-table balance\">Balance</th>\r\n//                       <th className=\"transaction-table date\">Date</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   {transactions.length > 0 ? (\r\n//                     transactions.map((transaction, index) => (\r\n//                       <tbody className=\"table-body\">\r\n//                         <tr key={transaction.id} className=\"transaction-head\">\r\n//                           <td className=\"index\">{index + 1}</td>\r\n//                           <td className=\"transaction-details\">\r\n//                             {transaction.transferDetails}\r\n//                           </td>\r\n//                           <td className=\"amount-transfered\">\r\n//                             {transaction.amountTransfered}{\" \"}\r\n//                             <span className=\"credited\">cr</span>\r\n//                           </td>\r\n//                           <td className=\"acc-balance\">{transaction.balance}</td>\r\n//                           <td className=\"date\">{transaction.transferDate}</td>\r\n//                         </tr>\r\n//                       </tbody>\r\n//                     ))\r\n//                   ) : (\r\n//                     <div className=\"no-transaction\">\r\n//                       {\" \"}\r\n//                       No Transaction Avaialbel\r\n//                     </div>\r\n//                   )}\r\n//                 </table>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           {depositPopUp && <Deposit setDeposit={setDepositPopUp} />}\r\n//           {fundTransferPopUp && (\r\n//             <FundTransfer setFundTransfer={setFundTransferPopUp} />\r\n//           )}\r\n//           {loanPopUp && <Loan setLoan={setLoanPopUp} />}\r\n\r\n//           <div className=\"dashboard-hr\"></div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"../Dashboard/dashboard.css\";\r\n// import axios from \"axios\";\r\n// import Deposit from \"./Deposit\";\r\n// import FundTransfer from \"./FundTransfer\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { AccountContext } from \"../Context/AccountProvider\";\r\n// import { useContext } from \"react\";\r\n// import \"../Dashboard/Transaction/transaction.css\";\r\n// import Loan from \"./Loan\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// function Dashboard() {\r\n//   const { account, setAccount } = useContext(AccountContext);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [userDetail, setUserDetails] = useState({});\r\n//   const [depositPopUp, setDepositPopUp] = useState(false);\r\n//   const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [loanPopUp, setLoanPopUp] = useState(false);\r\n//   const location = useLocation();\r\n//   const { JWTaccount, SetJWTuser } = location.state;\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   // useEffect(() => {\r\n//   //   if (JWTaccount) {\r\n//   //     setAccount(JWTaccount);\r\n//   //     setUserDetails(SetJWTuser);\r\n//   //     setLoading(false);\r\n//   //   } else {\r\n//   //     // const userId = localStorage.getItem(\"userId\");\r\n//   //     const userId = SetJWTuser.userId;\r\n\r\n//   //     if (userId) {\r\n//   //       axios\r\n//   //         .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n//   //         .then((response) => {\r\n//   //           setAccount(response.data);\r\n//   //           setLoading(false);\r\n//   //         })\r\n//   //         .catch((error) => {\r\n//   //           console.error(\"Error fetching account data:\", error);\r\n//   //           setLoading(false);\r\n//   //         });\r\n\r\n//   //       axios\r\n//   //         .get(\"http://localhost:8080/api/users/\" + userId)\r\n//   //         .then((response) => {\r\n//   //           setUserDetails(response.data);\r\n//   //         })\r\n//   //         .catch((error) => console.log(error));\r\n\r\n//   //       axios\r\n//   //         .get(`http://localhost:8080/api/transaction/${userId}`)\r\n//   //         .then((response) => {\r\n//   //           setTransactions(response.data);\r\n//   //           console.log(response.data);\r\n\r\n//   //           console.log(\"Transaction\");\r\n//   //         })\r\n//   //         .catch((error) => {\r\n//   //           console.log(error);\r\n//   //         });\r\n//   //     }\r\n//   //   }\r\n//   // }, [setAccount]);\r\n\r\n//   useEffect(() => {\r\n//     if (JWTaccount) {\r\n//       setAccount(JWTaccount);\r\n//       setUserDetails(SetJWTuser);\r\n//       setLoading(false);\r\n//     } else {\r\n//       const userId = SetJWTuser.userId;\r\n//       const token = localStorage.getItem(\"authToken\");\r\n\r\n//       if (userId && token) {\r\n//         axios\r\n//           .get(`http://localhost:8080/api/account/userid/${userId}`, {\r\n//             headers: { Authorization: `Bearer ${token}` },\r\n//           })\r\n//           .then((response) => {\r\n//             setAccount(response.data);\r\n//             setLoading(false);\r\n//           })\r\n//           .catch((error) => {\r\n//             console.error(\"Error fetching account data:\", error);\r\n//             setLoading(false);\r\n//           });\r\n\r\n//         axios\r\n//           .get(\"http://localhost:8080/api/users/\" + userId, {\r\n//             headers: { Authorization: `Bearer ${token}` },\r\n//           })\r\n//           .then((response) => {\r\n//             setUserDetails(response.data);\r\n//           })\r\n//           .catch((error) => console.log(error));\r\n\r\n//         axios\r\n//           .get(`http://localhost:8080/api/transaction/${userId}`, {\r\n//             headers: { Authorization: `Bearer ${token}` },\r\n//           })\r\n//           .then((response) => {\r\n//             setTransactions(response.data);\r\n//             console.log(response.data);\r\n\r\n//             console.log(\"Transaction\");\r\n//           })\r\n//           .catch((error) => {\r\n//             console.log(error);\r\n//           });\r\n//       }\r\n//     }\r\n//   }, [setAccount]);\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (!account || Object.keys(account).length === 0) {\r\n//     return <div>No account data available.</div>;\r\n//   }\r\n\r\n//   const userId = localStorage.getItem(\"userId\");\r\n\r\n//   return (\r\n//     <div\r\n//       className={\r\n//         depositPopUp || fundTransferPopUp\r\n//           ? \"Dashboard dashboard-blur\"\r\n//           : \"Dashboard\"\r\n//       }\r\n//     >\r\n//       <div className=\"dashboard-page-border\">\r\n//         <div className=\"page-size\">\r\n//           <div className=\"dashboard-hr\"></div>\r\n//           <div className=\"nav-bar\">\r\n//             <div className=\"dashbord-un-bn\">\r\n//               <span className=\"dashboard-logo\">logo</span>\r\n//               <span className=\"dashbord-bank-name\">Easy Online Banking</span>\r\n//               <span className=\"dashbord-userName\">{userDetail.first_Name}</span>\r\n//               <button className=\"dashbord-user-img\">ðŸ‘¤</button>\r\n//             </div>\r\n//             <div className=\"dashboard-hr\"></div>\r\n//             <div className=\"navbar-page\">\r\n//               <div className=\"nav-bar-data\">\r\n//                 <button\r\n//                   className=\"dashboard sidebtn\"\r\n//                   onClick={() => navigate(`/dashboard/${userId}`)}\r\n//                 >\r\n//                   Dashboard\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"loan sidebtn\"\r\n//                   onClick={() => setLoanPopUp(true)}\r\n//                   onMouseOut={() => console.log(\"mouse working\")}\r\n//                 >\r\n//                   Loan\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"cards sidebtn\"\r\n//                   onClick={() => navigate(\"/card\")}\r\n//                 >\r\n//                   Cards\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => setDepositPopUp(true)}\r\n//                   className=\"deposit sidebtn\"\r\n//                 >\r\n//                   Deposit\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"fund sidebtn\"\r\n//                   onClick={() => setFundTransferPopUp(true)}\r\n//                 >\r\n//                   {\" \"}\r\n//                   Fund Transfer\r\n//                 </button>\r\n//                 <button className=\"bell sidebtn\">Log out</button>\r\n//               </div>\r\n//             </div>\r\n//             {/* Rest of your dashboard content */}\r\n//             {/* <div className=\"acc-bal\"></div> */}\r\n//             <div className=\"account-test\">\r\n//               <div className=\"dashbord-account-Balance\">\r\n//                 <p className=\"amount\">Account Balance: {account.accBalance}</p>\r\n//               </div>\r\n//               <div className=\"account\">\r\n//                 <div className=\"dashboard-account-Details\">\r\n//                   <div className=\"user-detail\">\r\n//                     {/* <p>\r\n//                     User Name:{\" \"}\r\n//                     {userDetail.first_Name + \" \" + userDetail.last_Name}\r\n//                   </p> */}\r\n//                     <p>Account Number: {account.accNumber}</p>\r\n//                     {/* <p>Account Type: {account.accType}</p> */}\r\n//                     <p>Account Created Date: {account.accCreatedAt}</p>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"dashboard-trans-border\">\r\n//               <p className=\"transaction-header\" key={account.accNumber}>\r\n//                 Transaction History\r\n//               </p>\r\n//               {/* <div className=\"dashboard-hr\"></div>   */}\r\n//               <div className=\"transaction\">\r\n//                 <table className=\"transaction-table table\">\r\n//                   <thead className=\"tr-position\">\r\n//                     <tr className=\"tr-position\">\r\n//                       <th className=\"transaction-table sl-no \">Sl No.</th>\r\n//                       <th className=\"transaction-table details\">\r\n//                         Transaction Details\r\n//                       </th>\r\n//                       <th className=\"transaction-table trans-amount\">Amount</th>\r\n//                       <th className=\"transaction-table balance\">Balance</th>\r\n//                       <th className=\"transaction-table date\">Date</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   {transactions.length > 0 ? (\r\n//                     transactions.map((transaction, index) => (\r\n//                       <tbody className=\"table-body\">\r\n//                         <tr key={transaction.id} className=\"transaction-head\">\r\n//                           <td className=\"index\">{index + 1}</td>\r\n//                           <td className=\"transaction-details\">\r\n//                             {transaction.transferDetails}\r\n//                           </td>\r\n//                           <td className=\"amount-transfered\">\r\n//                             {transaction.amountTransfered}{\" \"}\r\n//                             <span className=\"credited\">cr</span>\r\n//                           </td>\r\n//                           <td className=\"acc-balance\">{transaction.balance}</td>\r\n//                           <td className=\"date\">{transaction.transferDate}</td>\r\n//                         </tr>\r\n//                       </tbody>\r\n//                     ))\r\n//                   ) : (\r\n//                     <div className=\"no-transaction\">\r\n//                       {\" \"}\r\n//                       No Transaction Avaialbel\r\n//                     </div>\r\n//                   )}\r\n//                 </table>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           {depositPopUp && <Deposit setDeposit={setDepositPopUp} />}\r\n//           {fundTransferPopUp && (\r\n//             <FundTransfer setFundTransfer={setFundTransferPopUp} />\r\n//           )}\r\n//           {loanPopUp && <Loan setLoan={setLoanPopUp} />}\r\n\r\n//           <div className=\"dashboard-hr\"></div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"../Dashboard/dashboard.css\";\r\nimport axios from \"axios\";\r\nimport Deposit from \"./Deposit\";\r\nimport FundTransfer from \"./FundTransfer\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AccountContext } from \"../Context/AccountProvider\";\r\nimport { useContext } from \"react\";\r\nimport \"../Dashboard/Transaction/transaction.css\";\r\nimport Loan from \"./Loan\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction Dashboard() {\r\n  const { account, setAccount } = useContext(AccountContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userDetail, setUserDetails] = useState({});\r\n  const [depositPopUp, setDepositPopUp] = useState(false);\r\n  const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loanPopUp, setLoanPopUp] = useState(false);\r\n  const location = useLocation();\r\n  const { JWTaccount, SetJWTuser } = location.state;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const userId = SetJWTuser.userId;\r\n    sessionStorage.setItem(\"userId\", userId);\r\n  }, [SetJWTuser]);\r\n\r\n  useEffect(() => {\r\n    if (JWTaccount) {\r\n      setAccount(JWTaccount);\r\n      setUserDetails(SetJWTuser);\r\n      setLoading(false);\r\n    } else {\r\n      const userId = sessionStorage.getItem(\"userId\");\r\n      const token = localStorage.getItem(\"authToken\");\r\n\r\n      if (userId && token) {\r\n        axios\r\n          .get(`http://localhost:8080/api/account/userid/${userId}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setAccount(response.data);\r\n            setLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching account data:\", error);\r\n            setLoading(false);\r\n          });\r\n\r\n        axios\r\n          .get(\"http://localhost:8080/api/users/\" + userId, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setUserDetails(response.data);\r\n          })\r\n          .catch((error) => console.log(error));\r\n\r\n        axios\r\n          .get(`http://localhost:8080/api/transaction/${userId}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setTransactions(response.data);\r\n            console.log(response.data);\r\n\r\n            console.log(\"Transaction\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n  }, [setAccount]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!account || Object.keys(account).length === 0) {\r\n    return <div>No account data available.</div>;\r\n  }\r\n\r\n  const userId = sessionStorage.getItem(\"userId\");\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        depositPopUp || fundTransferPopUp\r\n          ? \"Dashboard dashboard-blur\"\r\n          : \"Dashboard\"\r\n      }\r\n    >\r\n      <div className=\"dashboard-page-border\">\r\n        <div className=\"page-size\">\r\n          <div className=\"dashboard-hr\"></div>\r\n          <div className=\"nav-bar\">\r\n            <div className=\"dashbord-un-bn\">\r\n              <span className=\"dashboard-logo\">logo</span>\r\n              <span className=\"dashbord-bank-name\">Easy Online Banking</span>\r\n              <span className=\"dashbord-userName\">{userDetail.first_Name}</span>\r\n              <button className=\"dashbord-user-img\">ðŸ‘¤</button>\r\n            </div>\r\n            <div className=\"dashboard-hr\"></div>\r\n            <div className=\"navbar-page\">\r\n              <div className=\"nav-bar-data\">\r\n                <button\r\n                  className=\"dashboard sidebtn\"\r\n                  onClick={() => navigate(`/dashboard/${userId}`)}\r\n                >\r\n                  Dashboard\r\n                </button>\r\n                <button\r\n                  className=\"loan sidebtn\"\r\n                  onClick={() => setLoanPopUp(true)}\r\n                  onMouseOut={() => console.log(\"mouse working\")}\r\n                >\r\n                  Loan\r\n                </button>\r\n                <button\r\n                  className=\"cards sidebtn\"\r\n                  onClick={() => navigate(\"/card\")}\r\n                >\r\n                  Cards\r\n                </button>\r\n                <button\r\n                  onClick={() => setDepositPopUp(true)}\r\n                  className=\"deposit sidebtn\"\r\n                >\r\n                  Deposit\r\n                </button>\r\n                <button\r\n                  className=\"fund sidebtn\"\r\n                  onClick={() => setFundTransferPopUp(true)}\r\n                >\r\n                  {\" \"}\r\n                  Fund Transfer\r\n                </button>\r\n                <button className=\"bell sidebtn\">Log out</button>\r\n              </div>\r\n            </div>\r\n            {/* Rest of your dashboard content */}\r\n            {/* <div className=\"acc-bal\"></div> */}\r\n            <div className=\"account-test\">\r\n              <div className=\"dashbord-account-Balance\">\r\n                <p className=\" amount\">Account Balance: {account.accBalance}</p>\r\n              </div>\r\n              <div className=\"account\">\r\n                <div className=\"dashboard-account-Details\">\r\n                  <div className=\"user-detail\">\r\n                    {/* <p>\r\n                    User Name:{\" \"}\r\n                    {userDetail.first_Name + \" \" + userDetail.last_Name}\r\n                  </p> */}\r\n                    <p>Account Number: {account.accNumber}</p>\r\n                    {/* <p>Account Type: {account.accType}</p> */}\r\n                    <p>Account Created Date: {account.accCreatedAt}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"dashboard-trans-border\">\r\n              <p className=\"transaction-header\" key={account.accNumber}>\r\n                Transaction History\r\n              </p>\r\n              {/* <div className=\"dashboard-hr\"></div>   */}\r\n              <div className=\"transaction\">\r\n                <table className=\"transaction-table table\">\r\n                  <thead className=\"tr-position\">\r\n                    <tr className=\"tr-position\">\r\n                      <th className=\"transaction-table sl-no \">Sl No.</th>\r\n                      <th className=\"transaction-table details\">\r\n                        Transaction Details\r\n                      </th>\r\n                      <th className=\"transaction-table trans-amount\">Amount</th>\r\n                      <th className=\"transaction-table balance\">Balance</th>\r\n                      <th className=\"transaction-table date\">Date</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {transactions.length > 0 ? (\r\n                    transactions.map((transaction, index) => (\r\n                      <tbody className=\"table-body\">\r\n                        <tr key={transaction.id} className=\"transaction-head\">\r\n                          <td className=\"index\">{index + 1}</td>\r\n                          <td className=\"transaction-details\">\r\n                            {transaction.transferDetails}\r\n                          </td>\r\n                          <td className=\"amount-transfered\">\r\n                            {transaction.amountTransfered}{\" \"}\r\n                            <span className=\"credited\">cr</span>\r\n                          </td>\r\n                          <td className=\"acc-balance\">{transaction.balance}</td>\r\n                          <td className=\"date\">{transaction.transferDate}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ))\r\n                  ) : (\r\n                    <div className=\"no-transaction\">\r\n                      {\" \"}\r\n                      No Transaction Avaialbel\r\n                    </div>\r\n                  )}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {depositPopUp && <Deposit setDeposit={setDepositPopUp} />}\r\n          {fundTransferPopUp && (\r\n            <FundTransfer setFundTransfer={setFundTransferPopUp} />\r\n          )}\r\n          {loanPopUp && <Loan setLoan={setLoanPopUp} />}\r\n\r\n          <div className=\"dashboard-hr\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,4BAA4B;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,QAAQ,kB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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from \"react\";\n// // import logo from \"../login-page/test-logo.avif\";\n// // import \"../Dashboard/dashboard.css\";\n// // // import Trasaction from \"./Transaction\";\n// // import axios from \"axios\";\n// // import { useParams } from \"react-router-dom\";\n\n// // function Dashboard() {\n// //   const { userId } = useParams(); // Get the user id from the URL\n// //   const [account, setAccount] = useState({}); // Initialize account state for account data\n\n// //   useEffect(() => {\n// //     if (userId) {\n// //       axios\n// //         .get(`http://localhost:8080/api/account/userid/${userId}`) // Now using userId in the URL\n// //         .then((response) => {\n// //           setAccount(response.data);\n// //         })\n// //         .catch((error) => console.log(\"Error fetching account data:\", error));\n// //     }\n// //   }, [userId]);\n\n// //   if (!account.acc_Id) {\n// //     return <div>Loading...</div>; // Handle loading state\n// //   }\n\n// //   return (\n// //     <div className=\"Dashboard\">\n// //       <div className=\"nav-bar\">\n// //         <img src={logo} alt=\"logo\" className=\"bank-logo\" />\n// //         <div className=\"nav-bar-data\">\n// //           <button>Dashboard</button>\n// //           <button>Loan</button>\n// //           <button>Cards</button>\n// //           <button>Fund Transfer</button>\n// //           <button>Deposit</button>\n// //           <button>ðŸ•­</button>\n// //         </div>\n\n// //         {/* Display account details */}\n// //         <div className=\"account-Balance\">\n// //           <p>Account Balance: {account.acc_Balance}</p>\n// //         </div>\n// //         <div className=\"account-Details\">\n// //           <p>User Name: {account.user_Id}</p>\n// //           <p>Account Number: {account.acc_Number}</p>\n// //           <p>Account Type: {account.acc_Type}</p>\n// //           <p>Account Created Date: {account.acc_Created_Date}</p>\n// //         </div>\n\n// //         {/* Transaction statement */}\n// //         <div className=\"transaction\">\n// //           <p>Transaction History</p>\n// //           {/* Render the transaction details */}\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default Dashboard;\n\n// // import React, { useEffect, useState } from \"react\";\n// // import logo from \"../login-page/test-logo.avif\";\n// // import \"../Dashboard/dashboard.css\";\n// // import axios from \"axios\";\n\n// // function Dashboard() {\n// //   const [account, setAccount] = useState({}); // Initialize account state for account data\n\n// //   useEffect(() => {\n// //     const userId = localStorage.getItem(\"userId\"); // Retrieve stored userId from localStorage\n\n// //     if (userId) {\n// //       axios\n// //         .get(`http://localhost:8080/api/account/userid/${userId}`) // Using userId in the API call\n// //         .then((response) => {\n// //           setAccount(response.data); // Set the retrieved account data\n// //         })\n// //         .catch((error) => console.log(\"Error fetching account data:\", error));\n// //     }\n// //   }, []);\n\n// //   if (!account.acc_Id) {\n// //     return <div>Loading...</div>; // Handle loading state\n// //   }\n\n// //   return (\n// //     <div className=\"Dashboard\">\n// //       <div className=\"nav-bar\">\n// //         <img src={logo} alt=\"logo\" className=\"bank-logo\" />\n// //         <div className=\"nav-bar-data\">\n// //           <button>Dashboard</button>\n// //           <button>Loan</button>\n// //           <button>Cards</button>\n// //           <button>Fund Transfer</button>\n// //           <button>Deposit</button>\n// //           <button>ðŸ•­</button>\n// //         </div>\n\n// //         {/* Display account details */}\n// //         <div className=\"account-Balance\">\n// //           <p>Account Balance: {account.acc_Balance}</p>\n// //         </div>\n// //         <div className=\"account-Details\">\n// //           <p>User Name: {account.user_Id}</p>\n// //           <p>Account Number: {account.acc_Number}</p>\n// //           <p>Account Type: {account.acc_Type}</p>\n// //           <p>Account Created Date: {account.acc_Created_Date}</p>\n// //         </div>\n\n// //         {/* Transaction statement */}\n// //         <div className=\"transaction\">\n// //           <p>Transaction History</p>\n// //           {/* Render the transaction details */}\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default Dashboard;\n\n// import React, { useEffect, useState } from \"react\";\n// import \"../Dashboard/dashboard.css\";\n// import axios from \"axios\";\n// import Deposit from \"./Deposit\";\n\n// function Dashboard() {\n//   const [account, setAccount] = useState(null); // Initialize account state as null\n//   const [loading, setLoading] = useState(true); // Add a loading state\n//   const [userDetail, setUserDetils] = useState([]);\n//   let [depositPopUp, setDepositPopUp] = useState(false);\n\n//   useEffect(() => {\n//     // Retrieve stored userId from localStorage\n//     const userId = localStorage.getItem(\"userId\");\n\n//     if (userId) {\n//       axios\n//         .get(`http://localhost:8080/api/account/userid/${userId}`) // Using userId in the API call\n//         .then((response) => {\n//           console.log(response.data); // Log response data for debugging\n//           setAccount(response.data); // Set the retrieved account data\n//           setLoading(false); // Data has been fetched, stop loading\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching account data:\", error);\n//           setLoading(false); // Stop loading even if there's an error\n//         });\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     const userId = localStorage.getItem(\"userId\");\n//     axios\n//       .get(\"http://localhost:8080/api/users/\" + userId)\n//       .then((response) => {\n//         setUserDetils(response.data);\n//         console.log(response.data);\n//       })\n//       .catch((error) => console.log(error));\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>; // Handle loading state\n//   }\n\n//   if (!account || Object.keys(account).length === 0) {\n//     return <div>No account data available.</div>; // Handle case when no account data is returned\n//   }\n\n//   //get user name\n\n//   return (\n//     <div className=\"Dashboard\">\n//       <div className=\"page-size\">\n//         <div className=\"nav-bar\">\n//           {/* <img src={logo} alt=\"logo\" className=\"bank-logo\" /> */}\n//           <div className=\"nav-bar-data\">\n//             <button className=\"dashboard\"> Dashboard</button>\n//             <button className=\"loan\">Loan</button>\n//             <button className=\"cards\">Cards</button>\n//             <button\n//               onClick={() => {\n//                 setDepositPopUp(true);\n//               }}\n//               className=\"deposit\"\n//             >\n//               Deposit\n//             </button>\n//             <button className=\"fund\">Fund Transfer</button>\n\n//             <button className=\"bell\">ðŸ•­</button>\n//             <span className=\"userName\"> {userDetail.first_Name}</span>\n//             <button className=\"img\">\n//               <img></img>ðŸ‘¤\n//             </button>\n//           </div>\n\n//           {/* Display account details */}\n//           <div className=\"acc-bal\">Account Balance</div>\n//           <div className=\"account-test\">\n//             <div className=\"account-Balance\">\n//               <p className=\"amount\">Account Balance: {account.accBalance}</p>\n//             </div>\n//             <div className=\"acc-det\">Account Details</div>\n//             <div className=\"account\">\n//               <div className=\"account-Details\">\n//                 <div className=\"user-detail\">\n//                   <p>User Name: {account.accId}</p>\n//                   <p>Account Number: {account.accNumber}</p>\n//                   <p>Account Type: {account.accType}</p>\n//                   <p>Account Created Date: {account.accCreatedAt}</p>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"transaction\">\n//             <p className=\"transaction-header\">Transaction History</p>\n//             {/* Render the transaction details */}\n//           </div>\n//           <div className=\"deposit-popUp\">\n//             <Deposit trigger={depositPopUp} setTrigger={setDepositPopUp}>\n//               <label className=\"amount-details\">Amount:</label>\n//               <input type=\"number\" className=\"amount\" name=\"amount\" required />\n//               <button type=\"submit\">Deposit</button>\n//             </Deposit>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n\n// import React, { useEffect, useState } from \"react\";\n// import \"../Dashboard/dashboard.css\";\n// import axios from \"axios\";\n// import Deposit from \"./Deposit\";\n\n// function Dashboard() {\n//   const [account, setAccount] = useState(null); // Initialize account state as null\n//   const [loading, setLoading] = useState(true); // Add a loading state\n//   const [userDetail, setUserDetils] = useState([]);\n//   let [depositPopUp, setDepositPopUp] = useState(true);\n\n//   useEffect(() => {\n//     // Retrieve stored userId from localStorage\n//     const userId = localStorage.getItem(\"userId\");\n\n//     if (userId) {\n//       axios\n//         .get(`http://localhost:8080/api/account/userid/${userId}`) // Using userId in the API call\n//         .then((response) => {\n//           console.log(response.data); // Log response data for debugging\n//           setAccount(response.data); // Set the retrieved account data\n//           setLoading(false); // Data has been fetched, stop loading\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching account data:\", error);\n//           setLoading(false); // Stop loading even if there's an error\n//         });\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     const userId = localStorage.getItem(\"userId\");\n//     axios\n//       .get(\"http://localhost:8080/api/users/\" + userId)\n//       .then((response) => {\n//         setUserDetils(response.data);\n//         console.log(response.data);\n//       })\n//       .catch((error) => console.log(error));\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>; // Handle loading state\n//   }\n\n//   if (!account || Object.keys(account).length === 0) {\n//     return <div>No account data available.</div>; // Handle case when no account data is returned\n//   }\n\n//   return (\n//     <div className={depositPopUp ? \"Dashboard dashboard-blur\" : \"Dashboard\"}>\n//       <div className=\"page-size\">\n//         <div className=\"nav-bar\">\n//           <div className=\"nav-bar-data\">\n//             <button className=\"dashboard\"> Dashboard</button>\n//             <button className=\"loan\">Loan</button>\n//             <button className=\"cards\">Cards</button>\n//             <button\n//               onClick={() => {\n//                 setDepositPopUp(true);\n//               }}\n//               className=\"deposit\"\n//             >\n//               Deposit\n//             </button>\n//             <button className=\"fund\">Fund Transfer</button>\n//             <button className=\"bell\">ðŸ•­</button>\n//             <span className=\"userName\"> {userDetail.first_Name}</span>\n//             <button className=\"img\">ðŸ‘¤</button>\n//           </div>\n//           <Deposit />\n//           {/* Display account details */}\n//           <div className=\"acc-bal\">Account Balance</div>\n//           <div className=\"account-test\">\n//             <div className=\"account-Balance\">\n//               <p className=\"amount\">Account Balance: {account.accBalance}</p>\n//             </div>\n//             <div className=\"acc-det\">Account Details</div>\n//             <div className=\"account\">\n//               <div className=\"account-Details\">\n//                 <div className=\"user-detail\">\n//                   <p>User Name: {account.accId}</p>\n//                   <p>Account Number: {account.accNumber}</p>\n//                   <p>Account Type: {account.accType}</p>\n//                   <p>Account Created Date: {account.accCreatedAt}</p>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"transaction\">\n//             <p className=\"transaction-header\">Transaction History</p>\n//             {/* Render the transaction details */}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n\n// import React, { useEffect, useState } from \"react\";\n// import \"../Dashboard/dashboard.css\";\n// import axios from \"axios\";\n// import Deposit from \"./Deposit\";\n\n// function Dashboard() {\n//   const [account, setAccount] = useState(null); // Initialize account state as null\n//   const [loading, setLoading] = useState(true); // Add a loading state\n//   const [userDetail, setUserDetails] = useState([]);\n//   const [depositPopUp, setDepositPopUp] = useState(false); // Control popup visibility\n\n//   useEffect(() => {\n//     // Retrieve stored userId from localStorage\n//     const userId = localStorage.getItem(\"userId\");\n\n//     if (userId) {\n//       axios\n//         .get(`http://localhost:8080/api/account/userid/${userId}`) // Using userId in the API call\n//         .then((response) => {\n//           console.log(response.data); // Log response data for debugging\n//           setAccount(response.data); // Set the retrieved account data\n//           setLoading(false); // Data has been fetched, stop loading\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching account data:\", error);\n//           setLoading(false); // Stop loading even if there's an error\n//         });\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     const userId = localStorage.getItem(\"userId\");\n//     axios\n//       .get(\"http://localhost:8080/api/users/\" + userId)\n//       .then((response) => {\n//         setUserDetails(response.data);\n//         console.log(response.data);\n//       })\n//       .catch((error) => console.log(error));\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>; // Handle loading state\n//   }\n\n//   if (!account || Object.keys(account).length === 0) {\n//     return <div>No account data available.</div>; // Handle case when no account data is returned\n//   }\n\n//   return (\n//     <div className={depositPopUp ? \"Dashboard dashboard-blur\" : \"Dashboard\"}>\n//       <div className=\"page-size\">\n//         <div className=\"nav-bar\">\n//           <div className=\"nav-bar-data\">\n//             <button className=\"dashboard\"> Dashboard</button>\n//             <button className=\"loan\">Loan</button>\n//             <button className=\"cards\">Cards</button>\n//             <button onClick={() => setDepositPopUp(true)} className=\"deposit\">\n//               Deposit\n//             </button>\n//             <button className=\"fund\">Fund Transfer</button>\n//             <button className=\"bell\">ðŸ•­</button>\n//             <span className=\"userName\"> {userDetail.first_Name}</span>\n//             <button className=\"img\">ðŸ‘¤</button>\n//           </div>\n//           {depositPopUp && <Deposit setDeposit={setDepositPopUp} />}\n//           {/* Display account details */}\n//           <div className=\"acc-bal\">Account Balance</div>\n//           <div className=\"account-test\">\n//             <div className=\"account-Balance\">\n//               <p className=\"amount\">Account Balance: {account.accBalance}</p>\n//             </div>\n//             <div className=\"acc-det\">Account Details</div>\n//             <div className=\"account\">\n//               <div className=\"account-Details\">\n//                 <div className=\"user-detail\">\n//                   <p>User Name: {account.accId}</p>\n//                   <p>Account Number: {account.accNumber}</p>\n//                   <p>Account Type: {account.accType}</p>\n//                   <p>Account Created Date: {account.accCreatedAt}</p>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"transaction\">\n//             <p className=\"transaction-header\">Transaction History</p>\n//             {/* Render the transaction details */}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n\n// import React, { useEffect, useState } from \"react\";\n// import \"../Dashboard/dashboard.css\";\n// import axios from \"axios\";\n// import Deposit from \"./Deposit\";\n// import FundTransfer from \"./FundTransfer\";\n// import { useNavigate } from \"react-router-dom\";\n// import { AccountContext } from \"../Context/AccountProvider\";\n// import { useContext } from \"react\";\n// import Trasaction from \"./Transaction/Transaction\";\n// function Dashboard() {\n//   const { account, setAccount } = useContext(AccountContext);\n//   const [loading, setLoading] = useState(true);\n//   const [userDetail, setUserDetails] = useState({});\n//   const [depositPopUp, setDepositPopUp] = useState(false);\n//   const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\n//   const [transaction, setTransaction] = useState([\n//     axios\n//       .get(\"http://localhost:8080/api/transaction\")\n//       .then((response) => {\n//         console.log(response.data);\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       }),\n//   ]);\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const userId = localStorage.getItem(\"userId\");\n\n//     if (userId) {\n//       axios\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\n//         .then((response) => {\n//           setAccount(response.data);\n//           setLoading(false);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching account data:\", error);\n//           setLoading(false);\n//         });\n\n//       axios\n//         .get(\"http://localhost:8080/api/users/\" + userId)\n//         .then((response) => {\n//           setUserDetails(response.data);\n//         })\n//         .catch((error) => console.log(error));\n//     }\n//   }, [setAccount]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (!account || Object.keys(account).length === 0) {\n//     return <div>No account data available.</div>;\n//   }\n//   const userId = localStorage.getItem(\"userId\");\n\n//   return (\n//     <div\n//       className={\n//         depositPopUp || fundTransferPopUp\n//           ? \"Dashboard dashboard-blur\"\n//           : \"Dashboard\"\n//       }\n//     >\n//       <div className=\"page-size\">\n//         <div className=\"nav-bar\">\n//           <div className=\"nav-bar-data\">\n//             <button\n//               className=\"dashboard\"\n//               onClick={() => {\n//                 navigate(\"/dashboard/\" + { userId });\n//               }}\n//             >\n//               Dashboard\n//             </button>\n//             <button className=\"loan\">Loan</button>\n//             <button className=\"cards\">Cards</button>\n//             <button onClick={() => setDepositPopUp(true)} className=\"deposit\">\n//               Deposit\n//             </button>\n//             <button className=\"fund\" onClick={() => setFundTransferPopUp(true)}>\n//               {\" \"}\n//               Fund Transfer\n//             </button>\n//             <button className=\"bell\">ðŸ•­</button>\n//             <span className=\"userName\">{userDetail.first_Name}</span>\n//             <button className=\"img\">ðŸ‘¤</button>\n//           </div>\n\n//           {/* Rest of your dashboard content */}\n//           <div className=\"acc-bal\">Account Balance</div>\n//           <div className=\"account-test\">\n//             <div className=\"account-Balance\">\n//               <p className=\"amount\">Account Balance: {account.accBalance}</p>\n//             </div>\n//             <div className=\"acc-det\">Account Details</div>\n//             <div className=\"account\">\n//               <div className=\"account-Details\">\n//                 <div className=\"user-detail\">\n//                   <p>\n//                     User Name:{\" \"}\n//                     {userDetail.first_Name + \" \" + userDetail.last_Name}\n//                   </p>\n//                   <p>Account Number: {account.accNumber}</p>\n//                   <p>Account Type: {account.accType}</p>\n//                   <p>Account Created Date: {account.accCreatedAt}</p>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"transaction\">\n//             <p className=\"transaction-header\">Transaction History</p>\n//             {transaction.map((item) => (\n//               <Trasaction key={item.transactionId} item={item} />\n//             ))}\n//           </div>\n//         </div>\n//         {depositPopUp && <Deposit setDeposit={setDepositPopUp} />}\n//         {fundTransferPopUp && (\n//           <FundTransfer setFundTransfer={setFundTransferPopUp} />\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../Dashboard/dashboard.css\";\nimport axios from \"axios\";\nimport Deposit from \"./Deposit\";\nimport FundTransfer from \"./FundTransfer\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AccountContext } from \"../Context/AccountProvider\";\nimport { useContext } from \"react\";\nimport \"../Dashboard/Transaction/transaction.css\";\nimport Loan from \"./Loan\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const {\n    account,\n    setAccount\n  } = useContext(AccountContext);\n  const [loading, setLoading] = useState(true);\n  const [userDetail, setUserDetails] = useState({});\n  const [depositPopUp, setDepositPopUp] = useState(false);\n  const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  const [loanPopUp, setLoanPopUp] = useState(false);\n  const [loan, setLoan] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    if (userId) {\n      axios.get(`http://localhost:8080/api/account/userid/${userId}`).then(response => {\n        setAccount(response.data);\n        setLoading(false);\n      }).catch(error => {\n        console.error(\"Error fetching account data:\", error);\n        setLoading(false);\n      });\n      axios.get(\"http://localhost:8080/api/users/\" + userId).then(response => {\n        setUserDetails(response.data);\n      }).catch(error => console.log(error));\n      axios.get(\"http://localhost:8080/api/transaction\").then(response => {\n        setTransactions(response.data); // Store transaction data in state variable\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [setAccount]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 12\n    }, this);\n  }\n  if (!account || Object.keys(account).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No account data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 12\n    }, this);\n  }\n  const userId = localStorage.getItem(\"userId\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: depositPopUp || fundTransferPopUp ? \"Dashboard dashboard-blur\" : \"Dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-size\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-bar-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dashboard\",\n            onClick: () => {\n              navigate(\"/dashboard/\" + {\n                userId\n              });\n            },\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loan\",\n            onClick: () => setLoan(true),\n            children: \"Loan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cards\",\n            children: \"Cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDepositPopUp(true),\n            className: \"deposit\",\n            children: \"Deposit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fund\",\n            onClick: () => setFundTransferPopUp(true),\n            children: [\" \", \"Fund Transfer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bell\",\n            children: \"\\uD83D\\uDD6D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"userName\",\n            children: userDetail.first_Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"img\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"acc-bal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-test\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-Balance\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"amount\",\n              children: [\"Account Balance: \", account.accBalance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"acc-det\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"account-Details\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-detail\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"User Name:\", \" \", userDetail.first_Name + \" \" + userDetail.last_Name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Account Number: \", account.accNumber]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Account Type: \", account.accType]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Account Created Date: \", account.accCreatedAt]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"transaction-header\",\n            children: \"Transaction History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"transaction-table table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"transaction-table \",\n                  children: \"Sl No.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"transaction-table details\",\n                  children: \"Transaction Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"transaction-table\",\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"transaction-table\",\n                  children: \"Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"transaction-table\",\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"transaction-head\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"center index\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"details center\",\n                  children: transaction.transferDetails\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"amount-transfered center\",\n                  children: [transaction.amountTransfered, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"credited\",\n                    children: \"cr\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"acc-balance center\",\n                  children: transaction.balance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"date center\",\n                  children: transaction.transferDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 21\n                }, this)]\n              }, index + 1, true, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 9\n      }, this), depositPopUp && /*#__PURE__*/_jsxDEV(Deposit, {\n        setDeposit: setDepositPopUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 26\n      }, this), fundTransferPopUp && /*#__PURE__*/_jsxDEV(FundTransfer, {\n        setFundTransfer: setFundTransferPopUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 635,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"1ZWNmQJ7Jr8Ov9ktLDDoezXNfSQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Deposit","FundTransfer","useNavigate","AccountContext","useContext","Loan","jsxDEV","_jsxDEV","Dashboard","_s","account","setAccount","loading","setLoading","userDetail","setUserDetails","depositPopUp","setDepositPopUp","fundTransferPopUp","setFundTransferPopUp","transactions","setTransactions","loanPopUp","setLoanPopUp","loan","setLoan","navigate","userId","localStorage","getItem","get","then","response","data","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","className","onClick","first_Name","accBalance","last_Name","accNumber","accType","accCreatedAt","map","transaction","index","transferDetails","amountTransfered","balance","transferDate","setDeposit","setFundTransfer","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/components/Dashboard/Dashboard.js"],"sourcesContent":["// // import React, { useEffect, useState } from \"react\";\r\n// // import logo from \"../login-page/test-logo.avif\";\r\n// // import \"../Dashboard/dashboard.css\";\r\n// // // import Trasaction from \"./Transaction\";\r\n// // import axios from \"axios\";\r\n// // import { useParams } from \"react-router-dom\";\r\n\r\n// // function Dashboard() {\r\n// //   const { userId } = useParams(); // Get the user id from the URL\r\n// //   const [account, setAccount] = useState({}); // Initialize account state for account data\r\n\r\n// //   useEffect(() => {\r\n// //     if (userId) {\r\n// //       axios\r\n// //         .get(`http://localhost:8080/api/account/userid/${userId}`) // Now using userId in the URL\r\n// //         .then((response) => {\r\n// //           setAccount(response.data);\r\n// //         })\r\n// //         .catch((error) => console.log(\"Error fetching account data:\", error));\r\n// //     }\r\n// //   }, [userId]);\r\n\r\n// //   if (!account.acc_Id) {\r\n// //     return <div>Loading...</div>; // Handle loading state\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div className=\"Dashboard\">\r\n// //       <div className=\"nav-bar\">\r\n// //         <img src={logo} alt=\"logo\" className=\"bank-logo\" />\r\n// //         <div className=\"nav-bar-data\">\r\n// //           <button>Dashboard</button>\r\n// //           <button>Loan</button>\r\n// //           <button>Cards</button>\r\n// //           <button>Fund Transfer</button>\r\n// //           <button>Deposit</button>\r\n// //           <button>ðŸ•­</button>\r\n// //         </div>\r\n\r\n// //         {/* Display account details */}\r\n// //         <div className=\"account-Balance\">\r\n// //           <p>Account Balance: {account.acc_Balance}</p>\r\n// //         </div>\r\n// //         <div className=\"account-Details\">\r\n// //           <p>User Name: {account.user_Id}</p>\r\n// //           <p>Account Number: {account.acc_Number}</p>\r\n// //           <p>Account Type: {account.acc_Type}</p>\r\n// //           <p>Account Created Date: {account.acc_Created_Date}</p>\r\n// //         </div>\r\n\r\n// //         {/* Transaction statement */}\r\n// //         <div className=\"transaction\">\r\n// //           <p>Transaction History</p>\r\n// //           {/* Render the transaction details */}\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default Dashboard;\r\n\r\n// // import React, { useEffect, useState } from \"react\";\r\n// // import logo from \"../login-page/test-logo.avif\";\r\n// // import \"../Dashboard/dashboard.css\";\r\n// // import axios from \"axios\";\r\n\r\n// // function Dashboard() {\r\n// //   const [account, setAccount] = useState({}); // Initialize account state for account data\r\n\r\n// //   useEffect(() => {\r\n// //     const userId = localStorage.getItem(\"userId\"); // Retrieve stored userId from localStorage\r\n\r\n// //     if (userId) {\r\n// //       axios\r\n// //         .get(`http://localhost:8080/api/account/userid/${userId}`) // Using userId in the API call\r\n// //         .then((response) => {\r\n// //           setAccount(response.data); // Set the retrieved account data\r\n// //         })\r\n// //         .catch((error) => console.log(\"Error fetching account data:\", error));\r\n// //     }\r\n// //   }, []);\r\n\r\n// //   if (!account.acc_Id) {\r\n// //     return <div>Loading...</div>; // Handle loading state\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div className=\"Dashboard\">\r\n// //       <div className=\"nav-bar\">\r\n// //         <img src={logo} alt=\"logo\" className=\"bank-logo\" />\r\n// //         <div className=\"nav-bar-data\">\r\n// //           <button>Dashboard</button>\r\n// //           <button>Loan</button>\r\n// //           <button>Cards</button>\r\n// //           <button>Fund Transfer</button>\r\n// //           <button>Deposit</button>\r\n// //           <button>ðŸ•­</button>\r\n// //         </div>\r\n\r\n// //         {/* Display account details */}\r\n// //         <div className=\"account-Balance\">\r\n// //           <p>Account Balance: {account.acc_Balance}</p>\r\n// //         </div>\r\n// //         <div className=\"account-Details\">\r\n// //           <p>User Name: {account.user_Id}</p>\r\n// //           <p>Account Number: {account.acc_Number}</p>\r\n// //           <p>Account Type: {account.acc_Type}</p>\r\n// //           <p>Account Created Date: {account.acc_Created_Date}</p>\r\n// //         </div>\r\n\r\n// //         {/* Transaction statement */}\r\n// //         <div className=\"transaction\">\r\n// //           <p>Transaction History</p>\r\n// //           {/* Render the transaction details */}\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default Dashboard;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"../Dashboard/dashboard.css\";\r\n// import axios from \"axios\";\r\n// import Deposit from \"./Deposit\";\r\n\r\n// function Dashboard() {\r\n//   const [account, setAccount] = useState(null); // Initialize account state as null\r\n//   const [loading, setLoading] = useState(true); // Add a loading state\r\n//   const [userDetail, setUserDetils] = useState([]);\r\n//   let [depositPopUp, setDepositPopUp] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     // Retrieve stored userId from localStorage\r\n//     const userId = localStorage.getItem(\"userId\");\r\n\r\n//     if (userId) {\r\n//       axios\r\n//         .get(`http://localhost:8080/api/account/userid/${userId}`) // Using userId in the API call\r\n//         .then((response) => {\r\n//           console.log(response.data); // Log response data for debugging\r\n//           setAccount(response.data); // Set the retrieved account data\r\n//           setLoading(false); // Data has been fetched, stop loading\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching account data:\", error);\r\n//           setLoading(false); // Stop loading even if there's an error\r\n//         });\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n//     axios\r\n//       .get(\"http://localhost:8080/api/users/\" + userId)\r\n//       .then((response) => {\r\n//         setUserDetils(response.data);\r\n//         console.log(response.data);\r\n//       })\r\n//       .catch((error) => console.log(error));\r\n//   }, []);\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>; // Handle loading state\r\n//   }\r\n\r\n//   if (!account || Object.keys(account).length === 0) {\r\n//     return <div>No account data available.</div>; // Handle case when no account data is returned\r\n//   }\r\n\r\n//   //get user name\r\n\r\n//   return (\r\n//     <div className=\"Dashboard\">\r\n//       <div className=\"page-size\">\r\n//         <div className=\"nav-bar\">\r\n//           {/* <img src={logo} alt=\"logo\" className=\"bank-logo\" /> */}\r\n//           <div className=\"nav-bar-data\">\r\n//             <button className=\"dashboard\"> Dashboard</button>\r\n//             <button className=\"loan\">Loan</button>\r\n//             <button className=\"cards\">Cards</button>\r\n//             <button\r\n//               onClick={() => {\r\n//                 setDepositPopUp(true);\r\n//               }}\r\n//               className=\"deposit\"\r\n//             >\r\n//               Deposit\r\n//             </button>\r\n//             <button className=\"fund\">Fund Transfer</button>\r\n\r\n//             <button className=\"bell\">ðŸ•­</button>\r\n//             <span className=\"userName\"> {userDetail.first_Name}</span>\r\n//             <button className=\"img\">\r\n//               <img></img>ðŸ‘¤\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Display account details */}\r\n//           <div className=\"acc-bal\">Account Balance</div>\r\n//           <div className=\"account-test\">\r\n//             <div className=\"account-Balance\">\r\n//               <p className=\"amount\">Account Balance: {account.accBalance}</p>\r\n//             </div>\r\n//             <div className=\"acc-det\">Account Details</div>\r\n//             <div className=\"account\">\r\n//               <div className=\"account-Details\">\r\n//                 <div className=\"user-detail\">\r\n//                   <p>User Name: {account.accId}</p>\r\n//                   <p>Account Number: {account.accNumber}</p>\r\n//                   <p>Account Type: {account.accType}</p>\r\n//                   <p>Account Created Date: {account.accCreatedAt}</p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"transaction\">\r\n//             <p className=\"transaction-header\">Transaction History</p>\r\n//             {/* Render the transaction details */}\r\n//           </div>\r\n//           <div className=\"deposit-popUp\">\r\n//             <Deposit trigger={depositPopUp} setTrigger={setDepositPopUp}>\r\n//               <label className=\"amount-details\">Amount:</label>\r\n//               <input type=\"number\" className=\"amount\" name=\"amount\" required />\r\n//               <button type=\"submit\">Deposit</button>\r\n//             </Deposit>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"../Dashboard/dashboard.css\";\r\n// import axios from \"axios\";\r\n// import Deposit from \"./Deposit\";\r\n\r\n// function Dashboard() {\r\n//   const [account, setAccount] = useState(null); // Initialize account state as null\r\n//   const [loading, setLoading] = useState(true); // Add a loading state\r\n//   const [userDetail, setUserDetils] = useState([]);\r\n//   let [depositPopUp, setDepositPopUp] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     // Retrieve stored userId from localStorage\r\n//     const userId = localStorage.getItem(\"userId\");\r\n\r\n//     if (userId) {\r\n//       axios\r\n//         .get(`http://localhost:8080/api/account/userid/${userId}`) // Using userId in the API call\r\n//         .then((response) => {\r\n//           console.log(response.data); // Log response data for debugging\r\n//           setAccount(response.data); // Set the retrieved account data\r\n//           setLoading(false); // Data has been fetched, stop loading\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching account data:\", error);\r\n//           setLoading(false); // Stop loading even if there's an error\r\n//         });\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n//     axios\r\n//       .get(\"http://localhost:8080/api/users/\" + userId)\r\n//       .then((response) => {\r\n//         setUserDetils(response.data);\r\n//         console.log(response.data);\r\n//       })\r\n//       .catch((error) => console.log(error));\r\n//   }, []);\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>; // Handle loading state\r\n//   }\r\n\r\n//   if (!account || Object.keys(account).length === 0) {\r\n//     return <div>No account data available.</div>; // Handle case when no account data is returned\r\n//   }\r\n\r\n//   return (\r\n//     <div className={depositPopUp ? \"Dashboard dashboard-blur\" : \"Dashboard\"}>\r\n//       <div className=\"page-size\">\r\n//         <div className=\"nav-bar\">\r\n//           <div className=\"nav-bar-data\">\r\n//             <button className=\"dashboard\"> Dashboard</button>\r\n//             <button className=\"loan\">Loan</button>\r\n//             <button className=\"cards\">Cards</button>\r\n//             <button\r\n//               onClick={() => {\r\n//                 setDepositPopUp(true);\r\n//               }}\r\n//               className=\"deposit\"\r\n//             >\r\n//               Deposit\r\n//             </button>\r\n//             <button className=\"fund\">Fund Transfer</button>\r\n//             <button className=\"bell\">ðŸ•­</button>\r\n//             <span className=\"userName\"> {userDetail.first_Name}</span>\r\n//             <button className=\"img\">ðŸ‘¤</button>\r\n//           </div>\r\n//           <Deposit />\r\n//           {/* Display account details */}\r\n//           <div className=\"acc-bal\">Account Balance</div>\r\n//           <div className=\"account-test\">\r\n//             <div className=\"account-Balance\">\r\n//               <p className=\"amount\">Account Balance: {account.accBalance}</p>\r\n//             </div>\r\n//             <div className=\"acc-det\">Account Details</div>\r\n//             <div className=\"account\">\r\n//               <div className=\"account-Details\">\r\n//                 <div className=\"user-detail\">\r\n//                   <p>User Name: {account.accId}</p>\r\n//                   <p>Account Number: {account.accNumber}</p>\r\n//                   <p>Account Type: {account.accType}</p>\r\n//                   <p>Account Created Date: {account.accCreatedAt}</p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"transaction\">\r\n//             <p className=\"transaction-header\">Transaction History</p>\r\n//             {/* Render the transaction details */}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"../Dashboard/dashboard.css\";\r\n// import axios from \"axios\";\r\n// import Deposit from \"./Deposit\";\r\n\r\n// function Dashboard() {\r\n//   const [account, setAccount] = useState(null); // Initialize account state as null\r\n//   const [loading, setLoading] = useState(true); // Add a loading state\r\n//   const [userDetail, setUserDetails] = useState([]);\r\n//   const [depositPopUp, setDepositPopUp] = useState(false); // Control popup visibility\r\n\r\n//   useEffect(() => {\r\n//     // Retrieve stored userId from localStorage\r\n//     const userId = localStorage.getItem(\"userId\");\r\n\r\n//     if (userId) {\r\n//       axios\r\n//         .get(`http://localhost:8080/api/account/userid/${userId}`) // Using userId in the API call\r\n//         .then((response) => {\r\n//           console.log(response.data); // Log response data for debugging\r\n//           setAccount(response.data); // Set the retrieved account data\r\n//           setLoading(false); // Data has been fetched, stop loading\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching account data:\", error);\r\n//           setLoading(false); // Stop loading even if there's an error\r\n//         });\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n//     axios\r\n//       .get(\"http://localhost:8080/api/users/\" + userId)\r\n//       .then((response) => {\r\n//         setUserDetails(response.data);\r\n//         console.log(response.data);\r\n//       })\r\n//       .catch((error) => console.log(error));\r\n//   }, []);\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>; // Handle loading state\r\n//   }\r\n\r\n//   if (!account || Object.keys(account).length === 0) {\r\n//     return <div>No account data available.</div>; // Handle case when no account data is returned\r\n//   }\r\n\r\n//   return (\r\n//     <div className={depositPopUp ? \"Dashboard dashboard-blur\" : \"Dashboard\"}>\r\n//       <div className=\"page-size\">\r\n//         <div className=\"nav-bar\">\r\n//           <div className=\"nav-bar-data\">\r\n//             <button className=\"dashboard\"> Dashboard</button>\r\n//             <button className=\"loan\">Loan</button>\r\n//             <button className=\"cards\">Cards</button>\r\n//             <button onClick={() => setDepositPopUp(true)} className=\"deposit\">\r\n//               Deposit\r\n//             </button>\r\n//             <button className=\"fund\">Fund Transfer</button>\r\n//             <button className=\"bell\">ðŸ•­</button>\r\n//             <span className=\"userName\"> {userDetail.first_Name}</span>\r\n//             <button className=\"img\">ðŸ‘¤</button>\r\n//           </div>\r\n//           {depositPopUp && <Deposit setDeposit={setDepositPopUp} />}\r\n//           {/* Display account details */}\r\n//           <div className=\"acc-bal\">Account Balance</div>\r\n//           <div className=\"account-test\">\r\n//             <div className=\"account-Balance\">\r\n//               <p className=\"amount\">Account Balance: {account.accBalance}</p>\r\n//             </div>\r\n//             <div className=\"acc-det\">Account Details</div>\r\n//             <div className=\"account\">\r\n//               <div className=\"account-Details\">\r\n//                 <div className=\"user-detail\">\r\n//                   <p>User Name: {account.accId}</p>\r\n//                   <p>Account Number: {account.accNumber}</p>\r\n//                   <p>Account Type: {account.accType}</p>\r\n//                   <p>Account Created Date: {account.accCreatedAt}</p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"transaction\">\r\n//             <p className=\"transaction-header\">Transaction History</p>\r\n//             {/* Render the transaction details */}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"../Dashboard/dashboard.css\";\r\n// import axios from \"axios\";\r\n// import Deposit from \"./Deposit\";\r\n// import FundTransfer from \"./FundTransfer\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { AccountContext } from \"../Context/AccountProvider\";\r\n// import { useContext } from \"react\";\r\n// import Trasaction from \"./Transaction/Transaction\";\r\n// function Dashboard() {\r\n//   const { account, setAccount } = useContext(AccountContext);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [userDetail, setUserDetails] = useState({});\r\n//   const [depositPopUp, setDepositPopUp] = useState(false);\r\n//   const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\r\n//   const [transaction, setTransaction] = useState([\r\n//     axios\r\n//       .get(\"http://localhost:8080/api/transaction\")\r\n//       .then((response) => {\r\n//         console.log(response.data);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       }),\r\n//   ]);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n\r\n//     if (userId) {\r\n//       axios\r\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n//         .then((response) => {\r\n//           setAccount(response.data);\r\n//           setLoading(false);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching account data:\", error);\r\n//           setLoading(false);\r\n//         });\r\n\r\n//       axios\r\n//         .get(\"http://localhost:8080/api/users/\" + userId)\r\n//         .then((response) => {\r\n//           setUserDetails(response.data);\r\n//         })\r\n//         .catch((error) => console.log(error));\r\n//     }\r\n//   }, [setAccount]);\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   if (!account || Object.keys(account).length === 0) {\r\n//     return <div>No account data available.</div>;\r\n//   }\r\n//   const userId = localStorage.getItem(\"userId\");\r\n\r\n//   return (\r\n//     <div\r\n//       className={\r\n//         depositPopUp || fundTransferPopUp\r\n//           ? \"Dashboard dashboard-blur\"\r\n//           : \"Dashboard\"\r\n//       }\r\n//     >\r\n//       <div className=\"page-size\">\r\n//         <div className=\"nav-bar\">\r\n//           <div className=\"nav-bar-data\">\r\n//             <button\r\n//               className=\"dashboard\"\r\n//               onClick={() => {\r\n//                 navigate(\"/dashboard/\" + { userId });\r\n//               }}\r\n//             >\r\n//               Dashboard\r\n//             </button>\r\n//             <button className=\"loan\">Loan</button>\r\n//             <button className=\"cards\">Cards</button>\r\n//             <button onClick={() => setDepositPopUp(true)} className=\"deposit\">\r\n//               Deposit\r\n//             </button>\r\n//             <button className=\"fund\" onClick={() => setFundTransferPopUp(true)}>\r\n//               {\" \"}\r\n//               Fund Transfer\r\n//             </button>\r\n//             <button className=\"bell\">ðŸ•­</button>\r\n//             <span className=\"userName\">{userDetail.first_Name}</span>\r\n//             <button className=\"img\">ðŸ‘¤</button>\r\n//           </div>\r\n\r\n//           {/* Rest of your dashboard content */}\r\n//           <div className=\"acc-bal\">Account Balance</div>\r\n//           <div className=\"account-test\">\r\n//             <div className=\"account-Balance\">\r\n//               <p className=\"amount\">Account Balance: {account.accBalance}</p>\r\n//             </div>\r\n//             <div className=\"acc-det\">Account Details</div>\r\n//             <div className=\"account\">\r\n//               <div className=\"account-Details\">\r\n//                 <div className=\"user-detail\">\r\n//                   <p>\r\n//                     User Name:{\" \"}\r\n//                     {userDetail.first_Name + \" \" + userDetail.last_Name}\r\n//                   </p>\r\n//                   <p>Account Number: {account.accNumber}</p>\r\n//                   <p>Account Type: {account.accType}</p>\r\n//                   <p>Account Created Date: {account.accCreatedAt}</p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"transaction\">\r\n//             <p className=\"transaction-header\">Transaction History</p>\r\n//             {transaction.map((item) => (\r\n//               <Trasaction key={item.transactionId} item={item} />\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//         {depositPopUp && <Deposit setDeposit={setDepositPopUp} />}\r\n//         {fundTransferPopUp && (\r\n//           <FundTransfer setFundTransfer={setFundTransferPopUp} />\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"../Dashboard/dashboard.css\";\r\nimport axios from \"axios\";\r\nimport Deposit from \"./Deposit\";\r\nimport FundTransfer from \"./FundTransfer\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AccountContext } from \"../Context/AccountProvider\";\r\nimport { useContext } from \"react\";\r\nimport \"../Dashboard/Transaction/transaction.css\";\r\nimport Loan from \"./Loan\";\r\n\r\nfunction Dashboard() {\r\n  const { account, setAccount } = useContext(AccountContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userDetail, setUserDetails] = useState({});\r\n  const [depositPopUp, setDepositPopUp] = useState(false);\r\n  const [fundTransferPopUp, setFundTransferPopUp] = useState(false);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loanPopUp, setLoanPopUp] = useState(false);\r\n  const [loan, setLoan] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    if (userId) {\r\n      axios\r\n        .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n        .then((response) => {\r\n          setAccount(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching account data:\", error);\r\n          setLoading(false);\r\n        });\r\n\r\n      axios\r\n        .get(\"http://localhost:8080/api/users/\" + userId)\r\n        .then((response) => {\r\n          setUserDetails(response.data);\r\n        })\r\n        .catch((error) => console.log(error));\r\n\r\n      axios\r\n        .get(\"http://localhost:8080/api/transaction\")\r\n        .then((response) => {\r\n          setTransactions(response.data); // Store transaction data in state variable\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [setAccount]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!account || Object.keys(account).length === 0) {\r\n    return <div>No account data available.</div>;\r\n  }\r\n\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        depositPopUp || fundTransferPopUp\r\n          ? \"Dashboard dashboard-blur\"\r\n          : \"Dashboard\"\r\n      }\r\n    >\r\n      <div className=\"page-size\">\r\n        <div className=\"nav-bar\">\r\n          <div className=\"nav-bar-data\">\r\n            <button\r\n              className=\"dashboard\"\r\n              onClick={() => {\r\n                navigate(\"/dashboard/\" + { userId });\r\n              }}\r\n            >\r\n              Dashboard\r\n            </button>\r\n            <button className=\"loan\" onClick={() => setLoan(true)}>\r\n              Loan\r\n            </button>\r\n            <button className=\"cards\">Cards</button>\r\n            <button onClick={() => setDepositPopUp(true)} className=\"deposit\">\r\n              Deposit\r\n            </button>\r\n            <button className=\"fund\" onClick={() => setFundTransferPopUp(true)}>\r\n              {\" \"}\r\n              Fund Transfer\r\n            </button>\r\n            <button className=\"bell\">ðŸ•­</button>\r\n            <span className=\"userName\">{userDetail.first_Name}</span>\r\n            <button className=\"img\">ðŸ‘¤</button>\r\n          </div>\r\n\r\n          {/* Rest of your dashboard content */}\r\n          <div className=\"acc-bal\"></div>\r\n          <div className=\"account-test\">\r\n            <div className=\"account-Balance\">\r\n              <p className=\"amount\">Account Balance: {account.accBalance}</p>\r\n            </div>\r\n            <div className=\"acc-det\"></div>\r\n            <div className=\"account\">\r\n              <div className=\"account-Details\">\r\n                <div className=\"user-detail\">\r\n                  <p>\r\n                    User Name:{\" \"}\r\n                    {userDetail.first_Name + \" \" + userDetail.last_Name}\r\n                  </p>\r\n                  <p>Account Number: {account.accNumber}</p>\r\n                  <p>Account Type: {account.accType}</p>\r\n                  <p>Account Created Date: {account.accCreatedAt}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"transaction\">\r\n            <p className=\"transaction-header\">Transaction History</p>\r\n            <table className=\"transaction-table table\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"transaction-table \">Sl No.</th>\r\n                  <th className=\"transaction-table details\">\r\n                    Transaction Details\r\n                  </th>\r\n                  <th className=\"transaction-table\">Amount</th>\r\n                  <th className=\"transaction-table\">Balance</th>\r\n                  <th className=\"transaction-table\">Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {transactions.map((transaction, index) => (\r\n                  <tr key={index + 1} className=\"transaction-head\">\r\n                    <td className=\"center index\">{index + 1}</td>\r\n                    <td className=\"details center\">\r\n                      {transaction.transferDetails}\r\n                    </td>\r\n                    <td className=\"amount-transfered center\">\r\n                      {transaction.amountTransfered}{\" \"}\r\n                      <span className=\"credited\">cr</span>\r\n                    </td>\r\n                    <td className=\"acc-balance center\">\r\n                      {transaction.balance}\r\n                    </td>\r\n                    <td className=\"date center\">{transaction.transferDate}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        {depositPopUp && <Deposit setDeposit={setDepositPopUp} />}\r\n        {fundTransferPopUp && (\r\n          <FundTransfer setFundTransfer={setFundTransferPopUp} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,4BAA4B;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAO,0CAA0C;AACjD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGP,UAAU,CAACD,cAAc,CAAC;EAC1D,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,UAAU,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACjD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACoB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0B,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAM4B,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAE9BL,SAAS,CAAC,MAAM;IACd,MAAM8B,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE7C,IAAIF,MAAM,EAAE;MACV5B,KAAK,CACF+B,GAAG,CAAC,4CAA4CH,MAAM,EAAE,CAAC,CACzDI,IAAI,CAAEC,QAAQ,IAAK;QAClBrB,UAAU,CAACqB,QAAQ,CAACC,IAAI,CAAC;QACzBpB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,CACDqB,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDtB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;MAEJd,KAAK,CACF+B,GAAG,CAAC,kCAAkC,GAAGH,MAAM,CAAC,CAChDI,IAAI,CAAEC,QAAQ,IAAK;QAClBjB,cAAc,CAACiB,QAAQ,CAACC,IAAI,CAAC;MAC/B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;MAEvCpC,KAAK,CACF+B,GAAG,CAAC,uCAAuC,CAAC,CAC5CC,IAAI,CAAEC,QAAQ,IAAK;QAClBX,eAAe,CAACW,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACxB,UAAU,CAAC,CAAC;EAEhB,IAAIC,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAA+B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI,CAAChC,OAAO,IAAIiC,MAAM,CAACC,IAAI,CAAClC,OAAO,CAAC,CAACmC,MAAM,KAAK,CAAC,EAAE;IACjD,oBAAOtC,OAAA;MAAA+B,QAAA,EAAK;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9C;EAEA,MAAMf,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAE7C,oBACEtB,OAAA;IACEuC,SAAS,EACP9B,YAAY,IAAIE,iBAAiB,GAC7B,0BAA0B,GAC1B,WACL;IAAAoB,QAAA,eAED/B,OAAA;MAAKuC,SAAS,EAAC,WAAW;MAAAR,QAAA,gBACxB/B,OAAA;QAAKuC,SAAS,EAAC,SAAS;QAAAR,QAAA,gBACtB/B,OAAA;UAAKuC,SAAS,EAAC,cAAc;UAAAR,QAAA,gBAC3B/B,OAAA;YACEuC,SAAS,EAAC,WAAW;YACrBC,OAAO,EAAEA,CAAA,KAAM;cACbrB,QAAQ,CAAC,aAAa,GAAG;gBAAEC;cAAO,CAAC,CAAC;YACtC,CAAE;YAAAW,QAAA,EACH;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTnC,OAAA;YAAQuC,SAAS,EAAC,MAAM;YAACC,OAAO,EAAEA,CAAA,KAAMtB,OAAO,CAAC,IAAI,CAAE;YAAAa,QAAA,EAAC;UAEvD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTnC,OAAA;YAAQuC,SAAS,EAAC,OAAO;YAAAR,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxCnC,OAAA;YAAQwC,OAAO,EAAEA,CAAA,KAAM9B,eAAe,CAAC,IAAI,CAAE;YAAC6B,SAAS,EAAC,SAAS;YAAAR,QAAA,EAAC;UAElE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTnC,OAAA;YAAQuC,SAAS,EAAC,MAAM;YAACC,OAAO,EAAEA,CAAA,KAAM5B,oBAAoB,CAAC,IAAI,CAAE;YAAAmB,QAAA,GAChE,GAAG,EAAC,eAEP;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTnC,OAAA;YAAQuC,SAAS,EAAC,MAAM;YAAAR,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpCnC,OAAA;YAAMuC,SAAS,EAAC,UAAU;YAAAR,QAAA,EAAExB,UAAU,CAACkC;UAAU;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzDnC,OAAA;YAAQuC,SAAS,EAAC,KAAK;YAAAR,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eAGNnC,OAAA;UAAKuC,SAAS,EAAC;QAAS;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/BnC,OAAA;UAAKuC,SAAS,EAAC,cAAc;UAAAR,QAAA,gBAC3B/B,OAAA;YAAKuC,SAAS,EAAC,iBAAiB;YAAAR,QAAA,eAC9B/B,OAAA;cAAGuC,SAAS,EAAC,QAAQ;cAAAR,QAAA,GAAC,mBAAiB,EAAC5B,OAAO,CAACuC,UAAU;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC,eACNnC,OAAA;YAAKuC,SAAS,EAAC;UAAS;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/BnC,OAAA;YAAKuC,SAAS,EAAC,SAAS;YAAAR,QAAA,eACtB/B,OAAA;cAAKuC,SAAS,EAAC,iBAAiB;cAAAR,QAAA,eAC9B/B,OAAA;gBAAKuC,SAAS,EAAC,aAAa;gBAAAR,QAAA,gBAC1B/B,OAAA;kBAAA+B,QAAA,GAAG,YACS,EAAC,GAAG,EACbxB,UAAU,CAACkC,UAAU,GAAG,GAAG,GAAGlC,UAAU,CAACoC,SAAS;gBAAA;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClD,CAAC,eACJnC,OAAA;kBAAA+B,QAAA,GAAG,kBAAgB,EAAC5B,OAAO,CAACyC,SAAS;gBAAA;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC1CnC,OAAA;kBAAA+B,QAAA,GAAG,gBAAc,EAAC5B,OAAO,CAAC0C,OAAO;gBAAA;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACtCnC,OAAA;kBAAA+B,QAAA,GAAG,wBAAsB,EAAC5B,OAAO,CAAC2C,YAAY;gBAAA;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNnC,OAAA;UAAKuC,SAAS,EAAC,aAAa;UAAAR,QAAA,gBAC1B/B,OAAA;YAAGuC,SAAS,EAAC,oBAAoB;YAAAR,QAAA,EAAC;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACzDnC,OAAA;YAAOuC,SAAS,EAAC,yBAAyB;YAAAR,QAAA,gBACxC/B,OAAA;cAAA+B,QAAA,eACE/B,OAAA;gBAAA+B,QAAA,gBACE/B,OAAA;kBAAIuC,SAAS,EAAC,oBAAoB;kBAAAR,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC9CnC,OAAA;kBAAIuC,SAAS,EAAC,2BAA2B;kBAAAR,QAAA,EAAC;gBAE1C;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACLnC,OAAA;kBAAIuC,SAAS,EAAC,mBAAmB;kBAAAR,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC7CnC,OAAA;kBAAIuC,SAAS,EAAC,mBAAmB;kBAAAR,QAAA,EAAC;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC9CnC,OAAA;kBAAIuC,SAAS,EAAC,mBAAmB;kBAAAR,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACRnC,OAAA;cAAA+B,QAAA,EACGlB,YAAY,CAACkC,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBACnCjD,OAAA;gBAAoBuC,SAAS,EAAC,kBAAkB;gBAAAR,QAAA,gBAC9C/B,OAAA;kBAAIuC,SAAS,EAAC,cAAc;kBAAAR,QAAA,EAAEkB,KAAK,GAAG;gBAAC;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC7CnC,OAAA;kBAAIuC,SAAS,EAAC,gBAAgB;kBAAAR,QAAA,EAC3BiB,WAAW,CAACE;gBAAe;kBAAAlB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1B,CAAC,eACLnC,OAAA;kBAAIuC,SAAS,EAAC,0BAA0B;kBAAAR,QAAA,GACrCiB,WAAW,CAACG,gBAAgB,EAAE,GAAG,eAClCnD,OAAA;oBAAMuC,SAAS,EAAC,UAAU;oBAAAR,QAAA,EAAC;kBAAE;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClC,CAAC,eACLnC,OAAA;kBAAIuC,SAAS,EAAC,oBAAoB;kBAAAR,QAAA,EAC/BiB,WAAW,CAACI;gBAAO;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClB,CAAC,eACLnC,OAAA;kBAAIuC,SAAS,EAAC,aAAa;kBAAAR,QAAA,EAAEiB,WAAW,CAACK;gBAAY;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA,GAZpDc,KAAK,GAAG,CAAC;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAad,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACL1B,YAAY,iBAAIT,OAAA,CAACP,OAAO;QAAC6D,UAAU,EAAE5C;MAAgB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACxDxB,iBAAiB,iBAChBX,OAAA,CAACN,YAAY;QAAC6D,eAAe,EAAE3C;MAAqB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACvD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CAzJQD,SAAS;EAAA,QAUCN,WAAW;AAAA;AAAA6D,EAAA,GAVrBvD,SAAS;AA2JlB,eAAeA,SAAS;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
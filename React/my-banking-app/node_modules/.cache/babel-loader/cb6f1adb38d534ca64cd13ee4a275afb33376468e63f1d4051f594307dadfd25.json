{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\components\\\\Register\\\\Register.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import \"../Register/register.css\";\n// import { useState } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import axios from \"axios\";\n// import image from \"../../image/login-backgroundImage.jpg\";\n\n// function Register() {\n//   const accountApi = \"http://localhost:8080/api/account\";\n//   const navigate = useNavigate();\n\n//   const [form, setForm] = useState({\n//     first_Name: \"\",\n//     last_Name: \"\",\n//     mobile: \"\",\n//     email: \"\",\n//     password: \"\",\n//     confirmPass: \"\",\n//     terms: false,\n//   });\n\n//   const [errors, setErrors] = useState({\n//     first_Name: false,\n//     mobile: false,\n//     email: false,\n//     password: false,\n//     confirmPass: false,\n//     passwordMismatch: false,\n//     terms: false,\n//   });\n\n//   function onSubmit(event) {\n//     event.preventDefault();\n\n//     const newErrors = {\n//       first_Name: !form.first_Name,\n//       mobile: !form.mobile,\n//       email: !form.email,\n//       password: !form.password,\n//       confirmPass: !form.confirmPass,\n//       terms: !form.terms,\n//       passwordMismatch: form.password !== form.confirmPass,\n//     };\n\n//     setErrors(newErrors);\n\n//     if (Object.values(newErrors).some((error) => error)) {\n//       console.log(\"Please fill all the details correctly.\");\n//       return;\n//     }\n\n//     // Proceed if all fields are filled and passwords match\n//     console.log(\"Registration successful:\", form);\n//     console.log(JSON.stringify(form));\n//     setForm({\n//       first_Name: \"\",\n//       last_Name: \"\",\n//       mobile: \"\",\n//       email: \"\",\n//       password: \"\",\n//       confirmPass: \"\",\n//       terms: false,\n//     });\n\n//     // First, create the user\n//     axios\n//       .post(\"http://localhost:8080/api/users\", form, {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       })\n//       .then((response) => {\n//         const userId = response.data.id;\n\n//         console.log(\"User created with ID:\", userId);\n\n//         // Now create the account after getting user ID\n//         const randomPart = Math.floor(Math.random() * 10000);\n//         const randomNumber = \"7000\" + randomPart;\n//         console.log(randomNumber);\n//         const currentDate = new Date().toISOString().split(\"T\")[0];\n//         const account = {\n//           accId: 22,\n//           userId: userId, // Use the obtained user ID\n//           accNumber: randomNumber,\n//           accBalance: 0,\n//           accCreatedAt: currentDate,\n//           accType: \"\",\n//         };\n//         console.log(account.accNumber);\n//         return axios.post(accountApi, account, {\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//         });\n//       })\n//       .then((accountResponse) => {\n//         console.log(\"Account created:\", accountResponse.data);\n//       })\n//       .catch((error) => {\n//         console.log(\"Error:\", error);\n//       });\n//   }\n\n//   function handleCreateAccount(event) {\n//     const { name, value, type, checked } = event.target;\n//     setForm((preFormData) => {\n//       return {\n//         ...preFormData,\n//         [name]: type === \"checkbox\" ? checked : value,\n//       };\n//     });\n\n//     setErrors((prevErrors) => ({\n//       ...prevErrors,\n//       [name]: false,\n//       passwordMismatch:\n//         name === \"password\" || name === \"confirmPass\"\n//           ? false\n//           : prevErrors.passwordMismatch,\n//     }));\n//   }\n\n//   return (\n//     <div className=\"register-bg\">\n//       <div className=\"Register-page\">\n//         <form className=\"Register-form\">\n//           <h1 className=\"register-text\">Registration Form</h1>\n//           <div className=\"name-row\">\n//             <div className=\"input-group\">\n//               <label>First Name</label>\n//               <input\n//                 className={`firstName ${\n//                   errors.first_Name ? \"input-error\" : \"\"\n//                 }`}\n//                 placeholder=\"First Name\"\n//                 type=\"text\"\n//                 name=\"first_Name\"\n//                 autoComplete=\"off\"\n//                 value={form.first_Name}\n//                 onChange={handleCreateAccount}\n//                 style={{ borderColor: errors.first_Name ? \"red\" : \"\" }}\n//               />\n//               {errors.first_Name && (\n//                 <span style={{ color: \"red\" }}>Please Enter Your Name</span>\n//               )}\n//             </div>\n//             <div className=\"input-group\">\n//               <label>Last Name</label>\n//               <input\n//                 className=\"last_Name\"\n//                 placeholder=\"Last Name\"\n//                 type=\"text\"\n//                 name=\"last_Name\"\n//                 autoComplete=\"off\"\n//                 value={form.last_Name}\n//                 onChange={handleCreateAccount}\n//                 style={{ borderColor: errors.last_Name ? \"red\" : \"\" }}\n//               />\n//             </div>\n//           </div>\n//           <div className=\"name-row\">\n//             <div className=\"input-group\">\n//               <label>Email</label>\n//               <input\n//                 className={`email ${errors.email ? \"input-error\" : \"\"}`}\n//                 placeholder=\"Email\"\n//                 type=\"email\"\n//                 name=\"email\"\n//                 autoComplete=\"off\"\n//                 value={form.email}\n//                 onChange={handleCreateAccount}\n//                 style={{ borderColor: errors.email ? \"red\" : \"\" }}\n//               />\n//               {errors.email && (\n//                 <span style={{ color: \"red\" }}>Please Enter Email</span>\n//               )}\n//             </div>\n//             <div className=\"input-group\">\n//               <label>Mobile</label>\n//               <input\n//                 className={`mobile ${errors.mobile ? \"input-error\" : \"\"}`}\n//                 placeholder=\"Mobile\"\n//                 type=\"tel\"\n//                 pattern=\"[0-9]{10}\"\n//                 autoComplete=\"off\"\n//                 name=\"mobile\"\n//                 value={form.mobile}\n//                 onChange={handleCreateAccount}\n//                 style={{ borderColor: errors.mobile ? \"red\" : \"\" }}\n//               />\n//               {errors.mobile && (\n//                 <span style={{ color: \"red\" }}>\n//                   Please Enter Mobile Number{\" \"}\n//                 </span>\n//               )}\n//             </div>\n//           </div>\n//           <div className=\"name-row\">\n//             <div className=\"input-group\">\n//               <label>Password</label>\n//               <input\n//                 className={`password ${errors.password ? \"input-error\" : \"\"}`}\n//                 id=\"passwords\"\n//                 placeholder=\"Password\"\n//                 type=\"password\"\n//                 name=\"password\"\n//                 autoComplete=\"off\"\n//                 value={form.password}\n//                 onChange={handleCreateAccount}\n//                 style={{ borderColor: errors.password ? \"red\" : \"\" }}\n//               />\n//               {errors.password && (\n//                 <span style={{ color: \"red\" }}>Please Enter The Password</span>\n//               )}\n//             </div>\n//             <div className=\"input-group\">\n//               <label>Confirm Password</label>\n//               <input\n//                 className={`confirm-pass ${\n//                   errors.confirmPass || errors.passwordMismatch\n//                     ? \"input-error\"\n//                     : \"\"\n//                 }`}\n//                 placeholder=\"Confirm Password\"\n//                 type=\"password\"\n//                 name=\"confirmPass\"\n//                 autoComplete=\"off\"\n//                 value={form.confirmPass}\n//                 onChange={handleCreateAccount}\n//                 style={{\n//                   borderColor:\n//                     errors.confirmPass || errors.passwordMismatch ? \"red\" : \"\",\n//                 }}\n//               />\n//               {errors.passwordMismatch && (\n//                 <span style={{ color: \"red\" }}>Passwords do not match</span>\n//               )}\n//             </div>\n//           </div>\n//           <div className=\"terms-row\">\n//             <input\n//               type=\"checkbox\"\n//               id=\"terms\"\n//               className={`input-checkbox ${\n//                 errors.password ? \"input-error\" : \"\"\n//               }`}\n//               name=\"terms\"\n//               checked={form.terms}\n//               onChange={handleCreateAccount}\n//             />\n//             <span className=\"terms-label\">\n//               <Link>Creating an account T&C</Link>\n//             </span>\n//           </div>\n//           {errors.terms && (\n//             <div style={{ color: \"red\" }}>Please Accept Terms & Conditions</div>\n//           )}\n//           <button className=\"Create-acc-btn\" onClick={onSubmit}>\n//             Sign Up\n//           </button>\n//           <div className=\"reg-btn\">\n//             <button\n//               className=\"register-login-btn\"\n//               onClick={() => navigate(\"/login\")}\n//             >\n//               Already have an Account â†’\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Register;\n\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../Register/register.css\";\nimport image from \"../../image/login-backgroundImage.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n  const API_BASE_URL = \"http://localhost:8080/api\";\n  const [form, setForm] = useState({\n    first_Name: \"\",\n    last_Name: \"\",\n    mobile: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPass: \"\",\n    terms: false\n  });\n  const [errors, setErrors] = useState({\n    first_Name: false,\n    mobile: false,\n    email: false,\n    password: false,\n    confirmPass: false,\n    passwordMismatch: false,\n    terms: false\n  });\n  async function onSubmit(event) {\n    event.preventDefault();\n    const newErrors = {\n      first_Name: !form.first_Name,\n      mobile: !form.mobile,\n      email: !form.email,\n      password: !form.password,\n      confirmPass: !form.confirmPass,\n      terms: !form.terms,\n      passwordMismatch: form.password !== form.confirmPass\n    };\n    setErrors(newErrors);\n    if (Object.values(newErrors).some(error => error)) {\n      console.log(\"Please fill all the details correctly.\");\n      return;\n    }\n    try {\n      // Step 1: Register the user\n      const userResponse = await axios.post(`${API_BASE_URL}/users`, form, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const userId = userResponse.data.id;\n      console.log(\"User created with ID:\", userId);\n\n      // Wait for the userResponse to be resolved before proceeding\n      await new Promise(resolve => setTimeout(resolve, 1000)); // add a small delay\n\n      // Step 2: Authenticate to get JWT token\n      const authResponse = await axios.post(`${API_BASE_URL}/authenticate`, {\n        username: form.email,\n        password: form.password\n      });\n      const token = authResponse.data.jwt;\n      localStorage.setItem(\"authToken\", token);\n\n      // Step 3: Create account with JWT\n      const randomPart = Math.floor(Math.random() * 10000);\n      const randomNumber = \"7000\" + randomPart;\n      const currentDate = new Date().toISOString().split(\"T\")[0];\n      const account = {\n        userId: userId,\n        // Use the obtained user ID\n        accNumber: randomNumber,\n        accBalance: 0,\n        accCreatedAt: currentDate,\n        accType: \"Savings\" // or any default type\n      };\n      const accountResponse = await axios.post(`${API_BASE_URL}/account`, account, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      console.log(\"Account created:\", accountResponse.data);\n\n      // Reset form and navigate to login\n      setForm({\n        first_Name: \"\",\n        last_Name: \"\",\n        mobile: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPass: \"\",\n        terms: false\n      });\n      navigate(\"/login\", {\n        state: {\n          registrationSuccess: true\n        }\n      });\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      // Handle specific errors (e.g., email already exists) and show appropriate messages\n    }\n  }\n  function handleCreateAccount(event) {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setForm(preFormData => ({\n      ...preFormData,\n      [name]: type === \"checkbox\" ? checked : value\n    }));\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: false,\n      passwordMismatch: name === \"password\" || name === \"confirmPass\" ? false : prevErrors.passwordMismatch\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-bg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Register-page\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Register-form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"register-text\",\n          children: \"Registration Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `firstName ${errors.first_Name ? \"input-error\" : \"\"}`,\n              placeholder: \"First Name\",\n              type: \"text\",\n              name: \"first_Name\",\n              autoComplete: \"off\",\n              value: form.first_Name,\n              onChange: handleCreateAccount,\n              style: {\n                borderColor: errors.first_Name ? \"red\" : \"\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this), errors.first_Name && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Please Enter Your Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"last_Name\",\n              placeholder: \"Last Name\",\n              type: \"text\",\n              name: \"last_Name\",\n              autoComplete: \"off\",\n              value: form.last_Name,\n              onChange: handleCreateAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `email ${errors.email ? \"input-error\" : \"\"}`,\n              placeholder: \"Email\",\n              type: \"email\",\n              name: \"email\",\n              autoComplete: \"off\",\n              value: form.email,\n              onChange: handleCreateAccount,\n              style: {\n                borderColor: errors.email ? \"red\" : \"\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Please Enter Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Mobile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `mobile ${errors.mobile ? \"input-error\" : \"\"}`,\n              placeholder: \"Mobile\",\n              type: \"tel\",\n              pattern: \"[0-9]{10}\",\n              autoComplete: \"off\",\n              name: \"mobile\",\n              value: form.mobile,\n              onChange: handleCreateAccount,\n              style: {\n                borderColor: errors.mobile ? \"red\" : \"\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), errors.mobile && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Please Enter Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `password ${errors.password ? \"input-error\" : \"\"}`,\n              id: \"passwords\",\n              placeholder: \"Password\",\n              type: \"password\",\n              name: \"password\",\n              autoComplete: \"off\",\n              value: form.password,\n              onChange: handleCreateAccount,\n              style: {\n                borderColor: errors.password ? \"red\" : \"\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Please Enter The Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `confirm-pass ${errors.confirmPass || errors.passwordMismatch ? \"input-error\" : \"\"}`,\n              placeholder: \"Confirm Password\",\n              type: \"password\",\n              name: \"confirmPass\",\n              autoComplete: \"off\",\n              value: form.confirmPass,\n              onChange: handleCreateAccount,\n              style: {\n                borderColor: errors.confirmPass || errors.passwordMismatch ? \"red\" : \"\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this), errors.passwordMismatch && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Passwords do not match\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terms-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"terms\",\n            className: `input-checkbox ${errors.terms ? \"input-error\" : \"\"}`,\n            name: \"terms\",\n            checked: form.terms,\n            onChange: handleCreateAccount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"terms-label\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/terms\",\n              children: \"Creating an account T&C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), errors.terms && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Please Accept Terms & Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"Create-acc-btn\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg-btn\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"register-login-btn\",\n            children: \"Already have an Account \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"M+OZ5t4Y7efAtrMLhCzympVgz5g=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","Link","axios","image","jsxDEV","_jsxDEV","Register","_s","navigate","API_BASE_URL","form","setForm","first_Name","last_Name","mobile","email","password","confirmPass","terms","errors","setErrors","passwordMismatch","onSubmit","event","preventDefault","newErrors","Object","values","some","error","console","log","userResponse","post","headers","userId","data","id","Promise","resolve","setTimeout","authResponse","username","token","jwt","localStorage","setItem","randomPart","Math","floor","random","randomNumber","currentDate","Date","toISOString","split","account","accNumber","accBalance","accCreatedAt","accType","accountResponse","state","registrationSuccess","handleCreateAccount","name","value","type","checked","target","preFormData","prevErrors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","autoComplete","onChange","style","borderColor","color","pattern","to","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/components/Register/Register.js"],"sourcesContent":["// import React from \"react\";\r\n// import \"../Register/register.css\";\r\n// import { useState } from \"react\";\r\n// import { useNavigate, Link } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import image from \"../../image/login-backgroundImage.jpg\";\r\n\r\n// function Register() {\r\n//   const accountApi = \"http://localhost:8080/api/account\";\r\n//   const navigate = useNavigate();\r\n\r\n//   const [form, setForm] = useState({\r\n//     first_Name: \"\",\r\n//     last_Name: \"\",\r\n//     mobile: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     confirmPass: \"\",\r\n//     terms: false,\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({\r\n//     first_Name: false,\r\n//     mobile: false,\r\n//     email: false,\r\n//     password: false,\r\n//     confirmPass: false,\r\n//     passwordMismatch: false,\r\n//     terms: false,\r\n//   });\r\n\r\n//   function onSubmit(event) {\r\n//     event.preventDefault();\r\n\r\n//     const newErrors = {\r\n//       first_Name: !form.first_Name,\r\n//       mobile: !form.mobile,\r\n//       email: !form.email,\r\n//       password: !form.password,\r\n//       confirmPass: !form.confirmPass,\r\n//       terms: !form.terms,\r\n//       passwordMismatch: form.password !== form.confirmPass,\r\n//     };\r\n\r\n//     setErrors(newErrors);\r\n\r\n//     if (Object.values(newErrors).some((error) => error)) {\r\n//       console.log(\"Please fill all the details correctly.\");\r\n//       return;\r\n//     }\r\n\r\n//     // Proceed if all fields are filled and passwords match\r\n//     console.log(\"Registration successful:\", form);\r\n//     console.log(JSON.stringify(form));\r\n//     setForm({\r\n//       first_Name: \"\",\r\n//       last_Name: \"\",\r\n//       mobile: \"\",\r\n//       email: \"\",\r\n//       password: \"\",\r\n//       confirmPass: \"\",\r\n//       terms: false,\r\n//     });\r\n\r\n//     // First, create the user\r\n//     axios\r\n//       .post(\"http://localhost:8080/api/users\", form, {\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//       })\r\n//       .then((response) => {\r\n//         const userId = response.data.id;\r\n\r\n//         console.log(\"User created with ID:\", userId);\r\n\r\n//         // Now create the account after getting user ID\r\n//         const randomPart = Math.floor(Math.random() * 10000);\r\n//         const randomNumber = \"7000\" + randomPart;\r\n//         console.log(randomNumber);\r\n//         const currentDate = new Date().toISOString().split(\"T\")[0];\r\n//         const account = {\r\n//           accId: 22,\r\n//           userId: userId, // Use the obtained user ID\r\n//           accNumber: randomNumber,\r\n//           accBalance: 0,\r\n//           accCreatedAt: currentDate,\r\n//           accType: \"\",\r\n//         };\r\n//         console.log(account.accNumber);\r\n//         return axios.post(accountApi, account, {\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//         });\r\n//       })\r\n//       .then((accountResponse) => {\r\n//         console.log(\"Account created:\", accountResponse.data);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(\"Error:\", error);\r\n//       });\r\n//   }\r\n\r\n//   function handleCreateAccount(event) {\r\n//     const { name, value, type, checked } = event.target;\r\n//     setForm((preFormData) => {\r\n//       return {\r\n//         ...preFormData,\r\n//         [name]: type === \"checkbox\" ? checked : value,\r\n//       };\r\n//     });\r\n\r\n//     setErrors((prevErrors) => ({\r\n//       ...prevErrors,\r\n//       [name]: false,\r\n//       passwordMismatch:\r\n//         name === \"password\" || name === \"confirmPass\"\r\n//           ? false\r\n//           : prevErrors.passwordMismatch,\r\n//     }));\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"register-bg\">\r\n//       <div className=\"Register-page\">\r\n//         <form className=\"Register-form\">\r\n//           <h1 className=\"register-text\">Registration Form</h1>\r\n//           <div className=\"name-row\">\r\n//             <div className=\"input-group\">\r\n//               <label>First Name</label>\r\n//               <input\r\n//                 className={`firstName ${\r\n//                   errors.first_Name ? \"input-error\" : \"\"\r\n//                 }`}\r\n//                 placeholder=\"First Name\"\r\n//                 type=\"text\"\r\n//                 name=\"first_Name\"\r\n//                 autoComplete=\"off\"\r\n//                 value={form.first_Name}\r\n//                 onChange={handleCreateAccount}\r\n//                 style={{ borderColor: errors.first_Name ? \"red\" : \"\" }}\r\n//               />\r\n//               {errors.first_Name && (\r\n//                 <span style={{ color: \"red\" }}>Please Enter Your Name</span>\r\n//               )}\r\n//             </div>\r\n//             <div className=\"input-group\">\r\n//               <label>Last Name</label>\r\n//               <input\r\n//                 className=\"last_Name\"\r\n//                 placeholder=\"Last Name\"\r\n//                 type=\"text\"\r\n//                 name=\"last_Name\"\r\n//                 autoComplete=\"off\"\r\n//                 value={form.last_Name}\r\n//                 onChange={handleCreateAccount}\r\n//                 style={{ borderColor: errors.last_Name ? \"red\" : \"\" }}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"name-row\">\r\n//             <div className=\"input-group\">\r\n//               <label>Email</label>\r\n//               <input\r\n//                 className={`email ${errors.email ? \"input-error\" : \"\"}`}\r\n//                 placeholder=\"Email\"\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 autoComplete=\"off\"\r\n//                 value={form.email}\r\n//                 onChange={handleCreateAccount}\r\n//                 style={{ borderColor: errors.email ? \"red\" : \"\" }}\r\n//               />\r\n//               {errors.email && (\r\n//                 <span style={{ color: \"red\" }}>Please Enter Email</span>\r\n//               )}\r\n//             </div>\r\n//             <div className=\"input-group\">\r\n//               <label>Mobile</label>\r\n//               <input\r\n//                 className={`mobile ${errors.mobile ? \"input-error\" : \"\"}`}\r\n//                 placeholder=\"Mobile\"\r\n//                 type=\"tel\"\r\n//                 pattern=\"[0-9]{10}\"\r\n//                 autoComplete=\"off\"\r\n//                 name=\"mobile\"\r\n//                 value={form.mobile}\r\n//                 onChange={handleCreateAccount}\r\n//                 style={{ borderColor: errors.mobile ? \"red\" : \"\" }}\r\n//               />\r\n//               {errors.mobile && (\r\n//                 <span style={{ color: \"red\" }}>\r\n//                   Please Enter Mobile Number{\" \"}\r\n//                 </span>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"name-row\">\r\n//             <div className=\"input-group\">\r\n//               <label>Password</label>\r\n//               <input\r\n//                 className={`password ${errors.password ? \"input-error\" : \"\"}`}\r\n//                 id=\"passwords\"\r\n//                 placeholder=\"Password\"\r\n//                 type=\"password\"\r\n//                 name=\"password\"\r\n//                 autoComplete=\"off\"\r\n//                 value={form.password}\r\n//                 onChange={handleCreateAccount}\r\n//                 style={{ borderColor: errors.password ? \"red\" : \"\" }}\r\n//               />\r\n//               {errors.password && (\r\n//                 <span style={{ color: \"red\" }}>Please Enter The Password</span>\r\n//               )}\r\n//             </div>\r\n//             <div className=\"input-group\">\r\n//               <label>Confirm Password</label>\r\n//               <input\r\n//                 className={`confirm-pass ${\r\n//                   errors.confirmPass || errors.passwordMismatch\r\n//                     ? \"input-error\"\r\n//                     : \"\"\r\n//                 }`}\r\n//                 placeholder=\"Confirm Password\"\r\n//                 type=\"password\"\r\n//                 name=\"confirmPass\"\r\n//                 autoComplete=\"off\"\r\n//                 value={form.confirmPass}\r\n//                 onChange={handleCreateAccount}\r\n//                 style={{\r\n//                   borderColor:\r\n//                     errors.confirmPass || errors.passwordMismatch ? \"red\" : \"\",\r\n//                 }}\r\n//               />\r\n//               {errors.passwordMismatch && (\r\n//                 <span style={{ color: \"red\" }}>Passwords do not match</span>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"terms-row\">\r\n//             <input\r\n//               type=\"checkbox\"\r\n//               id=\"terms\"\r\n//               className={`input-checkbox ${\r\n//                 errors.password ? \"input-error\" : \"\"\r\n//               }`}\r\n//               name=\"terms\"\r\n//               checked={form.terms}\r\n//               onChange={handleCreateAccount}\r\n//             />\r\n//             <span className=\"terms-label\">\r\n//               <Link>Creating an account T&C</Link>\r\n//             </span>\r\n//           </div>\r\n//           {errors.terms && (\r\n//             <div style={{ color: \"red\" }}>Please Accept Terms & Conditions</div>\r\n//           )}\r\n//           <button className=\"Create-acc-btn\" onClick={onSubmit}>\r\n//             Sign Up\r\n//           </button>\r\n//           <div className=\"reg-btn\">\r\n//             <button\r\n//               className=\"register-login-btn\"\r\n//               onClick={() => navigate(\"/login\")}\r\n//             >\r\n//               Already have an Account â†’\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Register;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../Register/register.css\";\r\nimport image from \"../../image/login-backgroundImage.jpg\";\r\n\r\nfunction Register() {\r\n  const navigate = useNavigate();\r\n  const API_BASE_URL = \"http://localhost:8080/api\";\r\n\r\n  const [form, setForm] = useState({\r\n    first_Name: \"\",\r\n    last_Name: \"\",\r\n    mobile: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPass: \"\",\r\n    terms: false,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    first_Name: false,\r\n    mobile: false,\r\n    email: false,\r\n    password: false,\r\n    confirmPass: false,\r\n    passwordMismatch: false,\r\n    terms: false,\r\n  });\r\n\r\n  async function onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const newErrors = {\r\n      first_Name: !form.first_Name,\r\n      mobile: !form.mobile,\r\n      email: !form.email,\r\n      password: !form.password,\r\n      confirmPass: !form.confirmPass,\r\n      terms: !form.terms,\r\n      passwordMismatch: form.password !== form.confirmPass,\r\n    };\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (Object.values(newErrors).some((error) => error)) {\r\n      console.log(\"Please fill all the details correctly.\");\r\n      return;\r\n    }\r\n    try {\r\n      // Step 1: Register the user\r\n      const userResponse = await axios.post(`${API_BASE_URL}/users`, form, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const userId = userResponse.data.id;\r\n      console.log(\"User created with ID:\", userId);\r\n\r\n      // Wait for the userResponse to be resolved before proceeding\r\n      await new Promise((resolve) => setTimeout(resolve, 1000)); // add a small delay\r\n\r\n      // Step 2: Authenticate to get JWT token\r\n      const authResponse = await axios.post(`${API_BASE_URL}/authenticate`, {\r\n        username: form.email,\r\n        password: form.password,\r\n      });\r\n      const token = authResponse.data.jwt;\r\n      localStorage.setItem(\"authToken\", token);\r\n\r\n      // Step 3: Create account with JWT\r\n      const randomPart = Math.floor(Math.random() * 10000);\r\n      const randomNumber = \"7000\" + randomPart;\r\n      const currentDate = new Date().toISOString().split(\"T\")[0];\r\n      const account = {\r\n        userId: userId, // Use the obtained user ID\r\n        accNumber: randomNumber,\r\n        accBalance: 0,\r\n        accCreatedAt: currentDate,\r\n        accType: \"Savings\", // or any default type\r\n      };\r\n\r\n      const accountResponse = await axios.post(\r\n        `${API_BASE_URL}/account`,\r\n        account,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"Account created:\", accountResponse.data);\r\n\r\n      // Reset form and navigate to login\r\n      setForm({\r\n        first_Name: \"\",\r\n        last_Name: \"\",\r\n        mobile: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPass: \"\",\r\n        terms: false,\r\n      });\r\n\r\n      navigate(\"/login\", { state: { registrationSuccess: true } });\r\n    } catch (error) {\r\n      console.error(\"Registration error:\", error);\r\n      // Handle specific errors (e.g., email already exists) and show appropriate messages\r\n    }\r\n  }\r\n\r\n  function handleCreateAccount(event) {\r\n    const { name, value, type, checked } = event.target;\r\n    setForm((preFormData) => ({\r\n      ...preFormData,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n\r\n    setErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      [name]: false,\r\n      passwordMismatch:\r\n        name === \"password\" || name === \"confirmPass\"\r\n          ? false\r\n          : prevErrors.passwordMismatch,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-bg\">\r\n      <div className=\"Register-page\">\r\n        <form className=\"Register-form\" onSubmit={onSubmit}>\r\n          <h1 className=\"register-text\">Registration Form</h1>\r\n          <div className=\"name-row\">\r\n            <div className=\"input-group\">\r\n              <label>First Name</label>\r\n              <input\r\n                className={`firstName ${\r\n                  errors.first_Name ? \"input-error\" : \"\"\r\n                }`}\r\n                placeholder=\"First Name\"\r\n                type=\"text\"\r\n                name=\"first_Name\"\r\n                autoComplete=\"off\"\r\n                value={form.first_Name}\r\n                onChange={handleCreateAccount}\r\n                style={{ borderColor: errors.first_Name ? \"red\" : \"\" }}\r\n              />\r\n              {errors.first_Name && (\r\n                <span style={{ color: \"red\" }}>Please Enter Your Name</span>\r\n              )}\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Last Name</label>\r\n              <input\r\n                className=\"last_Name\"\r\n                placeholder=\"Last Name\"\r\n                type=\"text\"\r\n                name=\"last_Name\"\r\n                autoComplete=\"off\"\r\n                value={form.last_Name}\r\n                onChange={handleCreateAccount}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"name-row\">\r\n            <div className=\"input-group\">\r\n              <label>Email</label>\r\n              <input\r\n                className={`email ${errors.email ? \"input-error\" : \"\"}`}\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"off\"\r\n                value={form.email}\r\n                onChange={handleCreateAccount}\r\n                style={{ borderColor: errors.email ? \"red\" : \"\" }}\r\n              />\r\n              {errors.email && (\r\n                <span style={{ color: \"red\" }}>Please Enter Email</span>\r\n              )}\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Mobile</label>\r\n              <input\r\n                className={`mobile ${errors.mobile ? \"input-error\" : \"\"}`}\r\n                placeholder=\"Mobile\"\r\n                type=\"tel\"\r\n                pattern=\"[0-9]{10}\"\r\n                autoComplete=\"off\"\r\n                name=\"mobile\"\r\n                value={form.mobile}\r\n                onChange={handleCreateAccount}\r\n                style={{ borderColor: errors.mobile ? \"red\" : \"\" }}\r\n              />\r\n              {errors.mobile && (\r\n                <span style={{ color: \"red\" }}>Please Enter Mobile Number</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"name-row\">\r\n            <div className=\"input-group\">\r\n              <label>Password</label>\r\n              <input\r\n                className={`password ${errors.password ? \"input-error\" : \"\"}`}\r\n                id=\"passwords\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                autoComplete=\"off\"\r\n                value={form.password}\r\n                onChange={handleCreateAccount}\r\n                style={{ borderColor: errors.password ? \"red\" : \"\" }}\r\n              />\r\n              {errors.password && (\r\n                <span style={{ color: \"red\" }}>Please Enter The Password</span>\r\n              )}\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Confirm Password</label>\r\n              <input\r\n                className={`confirm-pass ${\r\n                  errors.confirmPass || errors.passwordMismatch\r\n                    ? \"input-error\"\r\n                    : \"\"\r\n                }`}\r\n                placeholder=\"Confirm Password\"\r\n                type=\"password\"\r\n                name=\"confirmPass\"\r\n                autoComplete=\"off\"\r\n                value={form.confirmPass}\r\n                onChange={handleCreateAccount}\r\n                style={{\r\n                  borderColor:\r\n                    errors.confirmPass || errors.passwordMismatch ? \"red\" : \"\",\r\n                }}\r\n              />\r\n              {errors.passwordMismatch && (\r\n                <span style={{ color: \"red\" }}>Passwords do not match</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"terms-row\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"terms\"\r\n              className={`input-checkbox ${errors.terms ? \"input-error\" : \"\"}`}\r\n              name=\"terms\"\r\n              checked={form.terms}\r\n              onChange={handleCreateAccount}\r\n            />\r\n            <span className=\"terms-label\">\r\n              <Link to=\"/terms\">Creating an account T&C</Link>\r\n            </span>\r\n          </div>\r\n          {errors.terms && (\r\n            <div style={{ color: \"red\" }}>Please Accept Terms & Conditions</div>\r\n          )}\r\n          <button type=\"submit\" className=\"Create-acc-btn\">\r\n            Sign Up\r\n          </button>\r\n          <div className=\"reg-btn\">\r\n            <Link to=\"/login\" className=\"register-login-btn\">\r\n              Already have an Account â†’\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,YAAY,GAAG,2BAA2B;EAEhD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ba,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC;IACnCa,UAAU,EAAE,KAAK;IACjBE,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,KAAK;IACfC,WAAW,EAAE,KAAK;IAClBI,gBAAgB,EAAE,KAAK;IACvBH,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,eAAeI,QAAQA,CAACC,KAAK,EAAE;IAC7BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,SAAS,GAAG;MAChBb,UAAU,EAAE,CAACF,IAAI,CAACE,UAAU;MAC5BE,MAAM,EAAE,CAACJ,IAAI,CAACI,MAAM;MACpBC,KAAK,EAAE,CAACL,IAAI,CAACK,KAAK;MAClBC,QAAQ,EAAE,CAACN,IAAI,CAACM,QAAQ;MACxBC,WAAW,EAAE,CAACP,IAAI,CAACO,WAAW;MAC9BC,KAAK,EAAE,CAACR,IAAI,CAACQ,KAAK;MAClBG,gBAAgB,EAAEX,IAAI,CAACM,QAAQ,KAAKN,IAAI,CAACO;IAC3C,CAAC;IAEDG,SAAS,CAACK,SAAS,CAAC;IAEpB,IAAIC,MAAM,CAACC,MAAM,CAACF,SAAS,CAAC,CAACG,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAAC,EAAE;MACnDC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrD;IACF;IACA,IAAI;MACF;MACA,MAAMC,YAAY,GAAG,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,GAAGxB,YAAY,QAAQ,EAAEC,IAAI,EAAE;QACnEwB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,MAAMC,MAAM,GAAGH,YAAY,CAACI,IAAI,CAACC,EAAE;MACnCP,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEI,MAAM,CAAC;;MAE5C;MACA,MAAM,IAAIG,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;;MAE3D;MACA,MAAME,YAAY,GAAG,MAAMvC,KAAK,CAAC+B,IAAI,CAAC,GAAGxB,YAAY,eAAe,EAAE;QACpEiC,QAAQ,EAAEhC,IAAI,CAACK,KAAK;QACpBC,QAAQ,EAAEN,IAAI,CAACM;MACjB,CAAC,CAAC;MACF,MAAM2B,KAAK,GAAGF,YAAY,CAACL,IAAI,CAACQ,GAAG;MACnCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,KAAK,CAAC;;MAExC;MACA,MAAMI,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC;MACpD,MAAMC,YAAY,GAAG,MAAM,GAAGJ,UAAU;MACxC,MAAMK,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1D,MAAMC,OAAO,GAAG;QACdrB,MAAM,EAAEA,MAAM;QAAE;QAChBsB,SAAS,EAAEN,YAAY;QACvBO,UAAU,EAAE,CAAC;QACbC,YAAY,EAAEP,WAAW;QACzBQ,OAAO,EAAE,SAAS,CAAE;MACtB,CAAC;MAED,MAAMC,eAAe,GAAG,MAAM3D,KAAK,CAAC+B,IAAI,CACtC,GAAGxB,YAAY,UAAU,EACzB+C,OAAO,EACP;QACEtB,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUS,KAAK;QAClC;MACF,CACF,CAAC;MAEDb,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE8B,eAAe,CAACzB,IAAI,CAAC;;MAErD;MACAzB,OAAO,CAAC;QACNC,UAAU,EAAE,EAAE;QACdC,SAAS,EAAE,EAAE;QACbC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE;MACT,CAAC,CAAC;MAEFV,QAAQ,CAAC,QAAQ,EAAE;QAAEsD,KAAK,EAAE;UAAEC,mBAAmB,EAAE;QAAK;MAAE,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAOlC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C;IACF;EACF;EAEA,SAASmC,mBAAmBA,CAACzC,KAAK,EAAE;IAClC,MAAM;MAAE0C,IAAI;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAG7C,KAAK,CAAC8C,MAAM;IACnD1D,OAAO,CAAE2D,WAAW,KAAM;MACxB,GAAGA,WAAW;MACd,CAACL,IAAI,GAAGE,IAAI,KAAK,UAAU,GAAGC,OAAO,GAAGF;IAC1C,CAAC,CAAC,CAAC;IAEH9C,SAAS,CAAEmD,UAAU,KAAM;MACzB,GAAGA,UAAU;MACb,CAACN,IAAI,GAAG,KAAK;MACb5C,gBAAgB,EACd4C,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,aAAa,GACzC,KAAK,GACLM,UAAU,CAAClD;IACnB,CAAC,CAAC,CAAC;EACL;EAEA,oBACEhB,OAAA;IAAKmE,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1BpE,OAAA;MAAKmE,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BpE,OAAA;QAAMmE,SAAS,EAAC,eAAe;QAAClD,QAAQ,EAAEA,QAAS;QAAAmD,QAAA,gBACjDpE,OAAA;UAAImE,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpDxE,OAAA;UAAKmE,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBpE,OAAA;YAAKmE,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BpE,OAAA;cAAAoE,QAAA,EAAO;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzBxE,OAAA;cACEmE,SAAS,EAAE,aACTrD,MAAM,CAACP,UAAU,GAAG,aAAa,GAAG,EAAE,EACrC;cACHkE,WAAW,EAAC,YAAY;cACxBX,IAAI,EAAC,MAAM;cACXF,IAAI,EAAC,YAAY;cACjBc,YAAY,EAAC,KAAK;cAClBb,KAAK,EAAExD,IAAI,CAACE,UAAW;cACvBoE,QAAQ,EAAEhB,mBAAoB;cAC9BiB,KAAK,EAAE;gBAAEC,WAAW,EAAE/D,MAAM,CAACP,UAAU,GAAG,KAAK,GAAG;cAAG;YAAE;cAAA8D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD,CAAC,EACD1D,MAAM,CAACP,UAAU,iBAChBP,OAAA;cAAM4E,KAAK,EAAE;gBAAEE,KAAK,EAAE;cAAM,CAAE;cAAAV,QAAA,EAAC;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAC5D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNxE,OAAA;YAAKmE,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BpE,OAAA;cAAAoE,QAAA,EAAO;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxBxE,OAAA;cACEmE,SAAS,EAAC,WAAW;cACrBM,WAAW,EAAC,WAAW;cACvBX,IAAI,EAAC,MAAM;cACXF,IAAI,EAAC,WAAW;cAChBc,YAAY,EAAC,KAAK;cAClBb,KAAK,EAAExD,IAAI,CAACG,SAAU;cACtBmE,QAAQ,EAAEhB;YAAoB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNxE,OAAA;UAAKmE,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBpE,OAAA;YAAKmE,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BpE,OAAA;cAAAoE,QAAA,EAAO;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpBxE,OAAA;cACEmE,SAAS,EAAE,SAASrD,MAAM,CAACJ,KAAK,GAAG,aAAa,GAAG,EAAE,EAAG;cACxD+D,WAAW,EAAC,OAAO;cACnBX,IAAI,EAAC,OAAO;cACZF,IAAI,EAAC,OAAO;cACZc,YAAY,EAAC,KAAK;cAClBb,KAAK,EAAExD,IAAI,CAACK,KAAM;cAClBiE,QAAQ,EAAEhB,mBAAoB;cAC9BiB,KAAK,EAAE;gBAAEC,WAAW,EAAE/D,MAAM,CAACJ,KAAK,GAAG,KAAK,GAAG;cAAG;YAAE;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CAAC,EACD1D,MAAM,CAACJ,KAAK,iBACXV,OAAA;cAAM4E,KAAK,EAAE;gBAAEE,KAAK,EAAE;cAAM,CAAE;cAAAV,QAAA,EAAC;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACxD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNxE,OAAA;YAAKmE,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BpE,OAAA;cAAAoE,QAAA,EAAO;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrBxE,OAAA;cACEmE,SAAS,EAAE,UAAUrD,MAAM,CAACL,MAAM,GAAG,aAAa,GAAG,EAAE,EAAG;cAC1DgE,WAAW,EAAC,QAAQ;cACpBX,IAAI,EAAC,KAAK;cACViB,OAAO,EAAC,WAAW;cACnBL,YAAY,EAAC,KAAK;cAClBd,IAAI,EAAC,QAAQ;cACbC,KAAK,EAAExD,IAAI,CAACI,MAAO;cACnBkE,QAAQ,EAAEhB,mBAAoB;cAC9BiB,KAAK,EAAE;gBAAEC,WAAW,EAAE/D,MAAM,CAACL,MAAM,GAAG,KAAK,GAAG;cAAG;YAAE;cAAA4D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC,EACD1D,MAAM,CAACL,MAAM,iBACZT,OAAA;cAAM4E,KAAK,EAAE;gBAAEE,KAAK,EAAE;cAAM,CAAE;cAAAV,QAAA,EAAC;YAA0B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAChE;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNxE,OAAA;UAAKmE,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBpE,OAAA;YAAKmE,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BpE,OAAA;cAAAoE,QAAA,EAAO;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvBxE,OAAA;cACEmE,SAAS,EAAE,YAAYrD,MAAM,CAACH,QAAQ,GAAG,aAAa,GAAG,EAAE,EAAG;cAC9DqB,EAAE,EAAC,WAAW;cACdyC,WAAW,EAAC,UAAU;cACtBX,IAAI,EAAC,UAAU;cACfF,IAAI,EAAC,UAAU;cACfc,YAAY,EAAC,KAAK;cAClBb,KAAK,EAAExD,IAAI,CAACM,QAAS;cACrBgE,QAAQ,EAAEhB,mBAAoB;cAC9BiB,KAAK,EAAE;gBAAEC,WAAW,EAAE/D,MAAM,CAACH,QAAQ,GAAG,KAAK,GAAG;cAAG;YAAE;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD,CAAC,EACD1D,MAAM,CAACH,QAAQ,iBACdX,OAAA;cAAM4E,KAAK,EAAE;gBAAEE,KAAK,EAAE;cAAM,CAAE;cAAAV,QAAA,EAAC;YAAyB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAC/D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNxE,OAAA;YAAKmE,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BpE,OAAA;cAAAoE,QAAA,EAAO;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC/BxE,OAAA;cACEmE,SAAS,EAAE,gBACTrD,MAAM,CAACF,WAAW,IAAIE,MAAM,CAACE,gBAAgB,GACzC,aAAa,GACb,EAAE,EACL;cACHyD,WAAW,EAAC,kBAAkB;cAC9BX,IAAI,EAAC,UAAU;cACfF,IAAI,EAAC,aAAa;cAClBc,YAAY,EAAC,KAAK;cAClBb,KAAK,EAAExD,IAAI,CAACO,WAAY;cACxB+D,QAAQ,EAAEhB,mBAAoB;cAC9BiB,KAAK,EAAE;gBACLC,WAAW,EACT/D,MAAM,CAACF,WAAW,IAAIE,MAAM,CAACE,gBAAgB,GAAG,KAAK,GAAG;cAC5D;YAAE;cAAAqD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,EACD1D,MAAM,CAACE,gBAAgB,iBACtBhB,OAAA;cAAM4E,KAAK,EAAE;gBAAEE,KAAK,EAAE;cAAM,CAAE;cAAAV,QAAA,EAAC;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAC5D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNxE,OAAA;UAAKmE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBpE,OAAA;YACE8D,IAAI,EAAC,UAAU;YACf9B,EAAE,EAAC,OAAO;YACVmC,SAAS,EAAE,kBAAkBrD,MAAM,CAACD,KAAK,GAAG,aAAa,GAAG,EAAE,EAAG;YACjE+C,IAAI,EAAC,OAAO;YACZG,OAAO,EAAE1D,IAAI,CAACQ,KAAM;YACpB8D,QAAQ,EAAEhB;UAAoB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,eACFxE,OAAA;YAAMmE,SAAS,EAAC,aAAa;YAAAC,QAAA,eAC3BpE,OAAA,CAACJ,IAAI;cAACoF,EAAE,EAAC,QAAQ;cAAAZ,QAAA,EAAC;YAAuB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,EACL1D,MAAM,CAACD,KAAK,iBACXb,OAAA;UAAK4E,KAAK,EAAE;YAAEE,KAAK,EAAE;UAAM,CAAE;UAAAV,QAAA,EAAC;QAAgC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACpE,eACDxE,OAAA;UAAQ8D,IAAI,EAAC,QAAQ;UAACK,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxE,OAAA;UAAKmE,SAAS,EAAC,SAAS;UAAAC,QAAA,eACtBpE,OAAA,CAACJ,IAAI;YAACoF,EAAE,EAAC,QAAQ;YAACb,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAC;UAEjD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtE,EAAA,CA1QQD,QAAQ;EAAA,QACEN,WAAW;AAAA;AAAAsF,EAAA,GADrBhF,QAAQ;AA4QjB,eAAeA,QAAQ;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
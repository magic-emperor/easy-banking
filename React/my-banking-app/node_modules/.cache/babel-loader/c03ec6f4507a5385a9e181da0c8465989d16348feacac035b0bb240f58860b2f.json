{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\testing\\\\TestingAPI.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import APIStored from \"../components/API/APIStored\";\n// import axios from \"axios\";\n// import { useParams } from \"react-router-dom\";\n\n// function TestingAPI() {\n//   const [data, setData] = useState([]);\n//   const { userId } = useParams();\n//   const [accData, setAccountData] = useState([]);\n\n//   useEffect(() => {\n//     APIStored()\n//       .then((response) => {\n//         console.log(JSON.stringify(response.data)); // Check the entire response object\n//         setData(response.data);\n//       })\n//       .catch((error) => console.error(\"Error\", error));\n//   }, []);\n\n//   // console.log(JSON.stringify([...data]));\n//   // // const userAPIRes = data;\n//   // // let MapFunUser = userAPIRes.map((items) => parseInt(items.id));\n\n//   // data.map((item) => console.log(item.id));\n\n//   //for account\n//   const accApi = axios.get(\"http://localhost:8080/api/account\");\n//   useEffect(() => {\n//     accApi\n//       .then((response) => {\n//         console.log(JSON.stringify(response.data)); // Check the entire response object\n//         setAccountData(response.data);\n//       })\n//       .catch((error) => console.error(\"Error\", error));\n//   }, []);\n\n//   // console.log(JSON.stringify(accData));\n//   // // // let MapFunAcc = accData.map((items) => items.id);\n//   // // console.log(MapFunAcc);\n//   // // accData.map((item) => console.log(item.id));\n\n//   // data.map((item) => console.log(item.id));\n\n//   // // console.log(parseInt(MapFunAcc), parseInt(MapFunUser));\n\n//   // // if (parseInt(MapFunAcc) === parseInt(MapFunUser)) {\n//   // // } else {\n//   // //   console.log(\"BUMMER\");\n//   // // }\n//   // console.log(JSON.stringify(data));\n\n//   // accData.map((item) =>\n//   //   console.log(\n//   //     item.userId,\n//   //     item.accNumber,\n//   //     item.accBalance,\n//   //     item.accCreatedAt,\n//   //     item\n//   //   )\n//   // );\n//   // console.log(parseInt(MapFunAcc));\n\n//   // const intAPI = axios.get(`http://localhost:8080/api/account/${24}`);\n\n//   // useEffect(() => {\n//   //   intAPI\n//   //     .then((response) => {\n//   //       console.log(JSON.stringify(response.data)); // Check the entire response object\n//   //       setAccountData(response.data);\n//   //     })\n//   //     .catch((error) => console.error(\"Error\", error));\n//   // }, []);\n\n//   data.map((item) => {\n//     console.log(item.id);\n//   });\n//   const mapingAcc = data.map((item) => {\n//     console.log(item.id);\n//   });\n\n//   console.log(mapingAcc);\n\n//   useEffect(() => {\n//     axios\n//       .get(`http://localhost:8080/api/account/userid/${userId}`) // Now using userId in the URL\n//       .then((response) => {\n//         // setAccount(response.data);\n//         console.log(response.data.userId);\n//       })\n//       .catch((error) => console.log(\"Error fetching account data:\", error));\n//   }, [userId]);\n//   return (\n//     <div>\n//       {/* <table border=\"1\">\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>First Name</th>\n//             <th>Last Name</th>\n//             <th>Email</th>\n//             <th>Password</th>\n//             <th>Mobile</th>\n//           </tr>\n//         </thead>\n\n//         <tbody>\n//           {data.map((item) => (\n//             <tr key={item.id}>\n//               <td>{item.id}</td>\n//               <td>{item.first_Name}</td>\n//               <td>{item.last_Name}</td>\n//               <td>{item.email}</td>\n//               <td>{item.password}</td>\n//               <td>{item.mobile}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>acc Name</th>\n//             <th>acc Name</th>\n//             <th>acccc</th>\n//             <th>accc</th>\n//             <th>accccc</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {accData.map((item) => (\n//             <tr key={item.id}>\n//               <td>{item.id}</td>\n//               <td>{item.userId}</td>\n//               <td>{item.accNumber}</td>\n//               <td>{item.accBalance}</td>\n//               <td>{item.accCreatedAt}</td>\n//               <td>{item.accType}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table> */}\n//     </div>\n//   );\n// }\n\n// export default TestingAPI;\n\n// // const APIwithoutID = axios\n// //   .get(`http://localhost:8080/api/account`)\n// //   .then((response) => {\n// //     console.log(\n// //       \"this is response.data without ID \" + JSON.stringify(response.data)\n// //     );\n// //     console.log(JSON.stringify(\"this is wthout id\" + JSON.stringify(data)));\n// //   })\n// //   .catch((error) => console.log(\"Error fetching account data:\", error));\n\n// // console.log(JSON.stringify(data));\n\n// // data.map((item) => {\n// //   console.log(\"Items with data using MAP\" + JSON.stringify(item.id));\n// // });\n\n// // useEffect(() => {\n// //   axios\n// //     .get(`http://localhost:8080/api/account`)\n// //     .then((response) => {\n// //       // console.log(\n// //       //   \"this is response.data with ID\" + JSON.stringify(response.data)\n// //       // );\n// //       console.log(\n// //         JSON.stringify(\n// //           \"this is data wth id\" + JSON.stringify(response.data.accId)\n// //         )\n// //       ); //as na URL\n// //     })\n// //     .catch((error) => console.log(\"Error fetching account data:\", error));\n// // });\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"; // Importing useParams correctly\nimport APIStored from \"../components/API/APIStored\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestingAPI() {\n  _s();\n  const [data, setData] = useState([]);\n  const {\n    userId\n  } = useParams(); // Getting userId from URL parameters\n  const [accData, setAccountData] = useState([]);\n\n  // Fetch user data using APIStored\n  useEffect(() => {\n    APIStored().then(response => {\n      console.log(\"User Data:\", JSON.stringify(response.data)); // Logging user data for checking\n      setData(response.data);\n    }).catch(error => console.error(\"Error fetching user data\", error));\n  }, []);\n\n  // Fetch account data based on userId from the URL\n  useEffect(() => {\n    if (userId) {\n      axios.get(`http://localhost:8080/api/account/userid/${userId}`) // Fetching account using userId\n      .then(response => {\n        console.log(\"Account Data:\", response.data);\n        setAccountData(response.data); // Setting account data from the response\n      }).catch(error => console.error(\"Error fetching account data using userId:\", error));\n    }\n  }, [userId]); // Adding userId as a dependency to ensure the API call runs when userId changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"User Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mobile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.first_Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.last_Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.mobile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Account Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Account Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Account Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Account Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: accData ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: accData.accId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: accData.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: accData.accNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: accData.accBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: accData.accCreatedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: accData.accType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, accData.accId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            children: \"No account data available for this user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(TestingAPI, \"PyHUaoysds4MFwXXFfx3yVOpFgg=\", false, function () {\n  return [useParams];\n});\n_c = TestingAPI;\nexport default TestingAPI;\nvar _c;\n$RefreshReg$(_c, \"TestingAPI\");","map":{"version":3,"names":["React","useState","useEffect","useParams","APIStored","axios","jsxDEV","_jsxDEV","TestingAPI","_s","data","setData","userId","accData","setAccountData","then","response","console","log","JSON","stringify","catch","error","get","children","fileName","_jsxFileName","lineNumber","columnNumber","border","map","item","id","first_Name","last_Name","email","mobile","accId","accNumber","accBalance","accCreatedAt","accType","colSpan","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/testing/TestingAPI.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import APIStored from \"../components/API/APIStored\";\r\n// import axios from \"axios\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\n// function TestingAPI() {\r\n//   const [data, setData] = useState([]);\r\n//   const { userId } = useParams();\r\n//   const [accData, setAccountData] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     APIStored()\r\n//       .then((response) => {\r\n//         console.log(JSON.stringify(response.data)); // Check the entire response object\r\n//         setData(response.data);\r\n//       })\r\n//       .catch((error) => console.error(\"Error\", error));\r\n//   }, []);\r\n\r\n//   // console.log(JSON.stringify([...data]));\r\n//   // // const userAPIRes = data;\r\n//   // // let MapFunUser = userAPIRes.map((items) => parseInt(items.id));\r\n\r\n//   // data.map((item) => console.log(item.id));\r\n\r\n//   //for account\r\n//   const accApi = axios.get(\"http://localhost:8080/api/account\");\r\n//   useEffect(() => {\r\n//     accApi\r\n//       .then((response) => {\r\n//         console.log(JSON.stringify(response.data)); // Check the entire response object\r\n//         setAccountData(response.data);\r\n//       })\r\n//       .catch((error) => console.error(\"Error\", error));\r\n//   }, []);\r\n\r\n//   // console.log(JSON.stringify(accData));\r\n//   // // // let MapFunAcc = accData.map((items) => items.id);\r\n//   // // console.log(MapFunAcc);\r\n//   // // accData.map((item) => console.log(item.id));\r\n\r\n//   // data.map((item) => console.log(item.id));\r\n\r\n//   // // console.log(parseInt(MapFunAcc), parseInt(MapFunUser));\r\n\r\n//   // // if (parseInt(MapFunAcc) === parseInt(MapFunUser)) {\r\n//   // // } else {\r\n//   // //   console.log(\"BUMMER\");\r\n//   // // }\r\n//   // console.log(JSON.stringify(data));\r\n\r\n//   // accData.map((item) =>\r\n//   //   console.log(\r\n//   //     item.userId,\r\n//   //     item.accNumber,\r\n//   //     item.accBalance,\r\n//   //     item.accCreatedAt,\r\n//   //     item\r\n//   //   )\r\n//   // );\r\n//   // console.log(parseInt(MapFunAcc));\r\n\r\n//   // const intAPI = axios.get(`http://localhost:8080/api/account/${24}`);\r\n\r\n//   // useEffect(() => {\r\n//   //   intAPI\r\n//   //     .then((response) => {\r\n//   //       console.log(JSON.stringify(response.data)); // Check the entire response object\r\n//   //       setAccountData(response.data);\r\n//   //     })\r\n//   //     .catch((error) => console.error(\"Error\", error));\r\n//   // }, []);\r\n\r\n//   data.map((item) => {\r\n//     console.log(item.id);\r\n//   });\r\n//   const mapingAcc = data.map((item) => {\r\n//     console.log(item.id);\r\n//   });\r\n\r\n//   console.log(mapingAcc);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(`http://localhost:8080/api/account/userid/${userId}`) // Now using userId in the URL\r\n//       .then((response) => {\r\n//         // setAccount(response.data);\r\n//         console.log(response.data.userId);\r\n//       })\r\n//       .catch((error) => console.log(\"Error fetching account data:\", error));\r\n//   }, [userId]);\r\n//   return (\r\n//     <div>\r\n//       {/* <table border=\"1\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>First Name</th>\r\n//             <th>Last Name</th>\r\n//             <th>Email</th>\r\n//             <th>Password</th>\r\n//             <th>Mobile</th>\r\n//           </tr>\r\n//         </thead>\r\n\r\n//         <tbody>\r\n//           {data.map((item) => (\r\n//             <tr key={item.id}>\r\n//               <td>{item.id}</td>\r\n//               <td>{item.first_Name}</td>\r\n//               <td>{item.last_Name}</td>\r\n//               <td>{item.email}</td>\r\n//               <td>{item.password}</td>\r\n//               <td>{item.mobile}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>acc Name</th>\r\n//             <th>acc Name</th>\r\n//             <th>acccc</th>\r\n//             <th>accc</th>\r\n//             <th>accccc</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {accData.map((item) => (\r\n//             <tr key={item.id}>\r\n//               <td>{item.id}</td>\r\n//               <td>{item.userId}</td>\r\n//               <td>{item.accNumber}</td>\r\n//               <td>{item.accBalance}</td>\r\n//               <td>{item.accCreatedAt}</td>\r\n//               <td>{item.accType}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TestingAPI;\r\n\r\n// // const APIwithoutID = axios\r\n// //   .get(`http://localhost:8080/api/account`)\r\n// //   .then((response) => {\r\n// //     console.log(\r\n// //       \"this is response.data without ID \" + JSON.stringify(response.data)\r\n// //     );\r\n// //     console.log(JSON.stringify(\"this is wthout id\" + JSON.stringify(data)));\r\n// //   })\r\n// //   .catch((error) => console.log(\"Error fetching account data:\", error));\r\n\r\n// // console.log(JSON.stringify(data));\r\n\r\n// // data.map((item) => {\r\n// //   console.log(\"Items with data using MAP\" + JSON.stringify(item.id));\r\n// // });\r\n\r\n// // useEffect(() => {\r\n// //   axios\r\n// //     .get(`http://localhost:8080/api/account`)\r\n// //     .then((response) => {\r\n// //       // console.log(\r\n// //       //   \"this is response.data with ID\" + JSON.stringify(response.data)\r\n// //       // );\r\n// //       console.log(\r\n// //         JSON.stringify(\r\n// //           \"this is data wth id\" + JSON.stringify(response.data.accId)\r\n// //         )\r\n// //       ); //as na URL\r\n// //     })\r\n// //     .catch((error) => console.log(\"Error fetching account data:\", error));\r\n// // });\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\"; // Importing useParams correctly\r\nimport APIStored from \"../components/API/APIStored\";\r\nimport axios from \"axios\";\r\n\r\nfunction TestingAPI() {\r\n  const [data, setData] = useState([]);\r\n  const { userId } = useParams(); // Getting userId from URL parameters\r\n  const [accData, setAccountData] = useState([]);\r\n\r\n  // Fetch user data using APIStored\r\n  useEffect(() => {\r\n    APIStored()\r\n      .then((response) => {\r\n        console.log(\"User Data:\", JSON.stringify(response.data)); // Logging user data for checking\r\n        setData(response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching user data\", error));\r\n  }, []);\r\n\r\n  // Fetch account data based on userId from the URL\r\n  useEffect(() => {\r\n    if (userId) {\r\n      axios\r\n        .get(`http://localhost:8080/api/account/userid/${userId}`) // Fetching account using userId\r\n        .then((response) => {\r\n          console.log(\"Account Data:\", response.data);\r\n          setAccountData(response.data); // Setting account data from the response\r\n        })\r\n        .catch((error) =>\r\n          console.error(\"Error fetching account data using userId:\", error)\r\n        );\r\n    }\r\n  }, [userId]); // Adding userId as a dependency to ensure the API call runs when userId changes\r\n\r\n  return (\r\n    <div>\r\n      <h3>User Details</h3>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Mobile</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item) => (\r\n            <tr key={item.id}>\r\n              <td>{item.id}</td>\r\n              <td>{item.first_Name}</td>\r\n              <td>{item.last_Name}</td>\r\n              <td>{item.email}</td>\r\n              <td>{item.mobile}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h3>Account Details</h3>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>User ID</th>\r\n            <th>Account Number</th>\r\n            <th>Account Balance</th>\r\n            <th>Created Date</th>\r\n            <th>Account Type</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {accData ? (\r\n            <tr key={accData.accId}>\r\n              <td>{accData.accId}</td>\r\n              <td>{accData.userId}</td>\r\n              <td>{accData.accNumber}</td>\r\n              <td>{accData.accBalance}</td>\r\n              <td>{accData.accCreatedAt}</td>\r\n              <td>{accData.accType}</td>\r\n            </tr>\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"6\">No account data available for this user</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestingAPI;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;AAC9C,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM;IAAEW;EAAO,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACU,OAAO,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shared folder\\\\Banking Web Application\\\\React\\\\my-banking-app\\\\src\\\\components\\\\Dashboard\\\\Deposit.js\",\n  _s = $RefreshSig$();\n// import ReactDOM from \"react-dom\";\n// import \"./deposit.css\";\n// import React, { useContext, useState } from \"react\";\n// import { useEffect } from \"react\";\n// import axios from \"axios\";\n// import { AccountContext } from \"../Context/AccountProvider\";\n\n// function Deposit({ setDeposit }) {\n//   const portalRoot = document.getElementById(\"portalRoot\");\n//   const { account, setAccount } = useContext(AccountContext);\n//   console.log(JSON.stringify(account));\n\n//   useEffect(() => {\n//     const userId = localStorage.getItem(\"userId\");\n\n//     if (userId) {\n//       axios\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\n//         .then((response) => {\n//           setAccount(response.data);\n//           console.log(response.data);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching account data:\", error);\n//         });\n//     }\n//   }, [setAccount]);\n//   // const account = {\n//   //   userId: userId,\n//   //   accNumber: account.accNumber,\n//   //   accBalance: account.accBalance,\n//   //   accCreatedAt: account.accCreatedAt,\n//   //   accType: account.accType,\n//   // };\n//   //   axios\n//   //     .put(`http://localhost:8080/api/account/userid/${userId}`, account, {\n//   //       headers: { \"Content-Type\": \"application/json\" },\n//   //     })\n//   //     .then((response) => {\n//   //       console.log(response.data);\n//   //       console.log(account.accBalance);\n//   //     })\n//   //     .catch((error) => console.log(error));\n//   // }, [setAccount]);\n\n//   console.log(JSON.stringify(account));\n//   if (!portalRoot) {\n//     console.error(\"Portal root not found\");\n//     return null;\n//   }\n\n//   function handleChange(e) {\n//     const userId = localStorage.getItem(\"userId\");\n//     const updatedAccount = { ...account, accBalance: e.target.value };\n//     setAccount(updatedAccount);\n//     axios\n//       .put(`http://localhost:8080/api/account/userid/${userId}`)\n//       .then((response) => {\n//         setAccount(response.data);\n//         console.log(response.data);\n//         console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n\n//     setAccount((preForm) => {\n//       return {\n//         ...preForm,\n//         accBalance: e.target.value,\n//       };\n//     });\n//   }\n\n//   const amountUpdate = async (e) => {\n//     e.preventDefault();\n//     // setAccount(e.target.value);\n//     setAccount((preForm) => {\n//       return {\n//         ...preForm,\n//         accBalance: e.target.value,\n//       };\n//     });\n//   };\n\n//   // on click handler\n//   function onClickHandler(e) {\n//     setDeposit(false);\n//     setAccount((preForm) => {\n//       return {\n//         ...preForm,\n//         accBalance: e.target.value,\n//       };\n//     });\n//   }\n//   // Make a POST request to deposit the amount\n//   console.log(account.accBalance);\n//   return ReactDOM.createPortal(\n//     <div className=\"deposit-overlay\" onClick={onClickHandler}>\n//       <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\n//         <div className=\"deposit-inner\">\n//           <h1>Deposit</h1>\n//           <label className=\"amount-details\">Amount:</label>\n//           <input\n//             type=\"number\"\n//             className=\"amount\"\n//             name=\"accBalance\"\n//             value={account.accBalance}\n//             placeholder=\"Enter Amount Here\"\n//             required\n//             onChange={amountUpdate}\n//           />\n//           <button type=\"submit\" onClick={handleChange}>\n//             Deposit\n//           </button>\n//           <button className=\"close-button\" onClick={() => setDeposit(false)}>\n//             Close\n//           </button>\n//         </div>\n//       </div>\n//     </div>,\n//     portalRoot\n//   );\n// }\n\n// export default Deposit;\n\nimport ReactDOM from \"react-dom\";\nimport \"./deposit.css\";\nimport React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { AccountContext } from \"../Context/AccountProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Deposit({\n  setDeposit\n}) {\n  _s();\n  const portalRoot = document.getElementById(\"portalRoot\");\n  const {\n    account,\n    setAccount\n  } = useContext(AccountContext);\n  const [inputAmount, setInputAmount] = useState(account.accBalance || \"\"); // Initialize with current balance or empty\n\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    if (userId) {\n      axios.get(`http://localhost:8080/api/account/userid/${userId}`).then(response => {\n        setAccount(response.data);\n      }).catch(error => {\n        console.error(\"Error fetching account data:\", error);\n      });\n    }\n  }, [setAccount]);\n  if (!portalRoot) {\n    console.error(\"Portal root not found\");\n    return null;\n  }\n\n  // Handle input change\n  function handleInputChange(e) {\n    setInputAmount(e.target.value);\n  }\n\n  // Handle form submit (deposit action)\n  function handleDeposit(e) {\n    e.preventDefault();\n    const userId = localStorage.getItem(\"userId\");\n\n    // Prepare updated account object with the new balance\n    const updatedAccount = {\n      ...account,\n      accBalance: inputAmount\n    };\n\n    // Send PUT request to update account balance in the DB\n    axios.put(`http://localhost:8080/api/account/userid/${userId}`, updatedAccount, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      setAccount(response.data); // Update account in context with the response\n      console.log(\"Account balance updated:\", response.data);\n      setDeposit(false); // Close the deposit modal\n    }).catch(error => {\n      console.log(\"Error updating account balance:\", error);\n    });\n  }\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deposit-overlay\",\n    onClick: () => setDeposit(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deposit-modal\",\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deposit-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleDeposit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"amount-details\",\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"amount\",\n            name: \"accBalance\",\n            value: inputAmount,\n            placeholder: \"Enter Amount Here\",\n            required: true,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Deposit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setDeposit(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this), portalRoot);\n}\n_s(Deposit, \"fNinGTXqvsGIm2Lm82joN5bFess=\");\n_c = Deposit;\nexport default Deposit;\nvar _c;\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"names":["ReactDOM","React","useContext","useState","useEffect","axios","AccountContext","jsxDEV","_jsxDEV","Deposit","setDeposit","_s","portalRoot","document","getElementById","account","setAccount","inputAmount","setInputAmount","accBalance","userId","localStorage","getItem","get","then","response","data","catch","error","console","handleInputChange","e","target","value","handleDeposit","preventDefault","updatedAccount","put","headers","log","createPortal","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","required","onChange","_c","$RefreshReg$"],"sources":["C:/Shared folder/Banking Web Application/React/my-banking-app/src/components/Dashboard/Deposit.js"],"sourcesContent":["// import ReactDOM from \"react-dom\";\r\n// import \"./deposit.css\";\r\n// import React, { useContext, useState } from \"react\";\r\n// import { useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { AccountContext } from \"../Context/AccountProvider\";\r\n\r\n// function Deposit({ setDeposit }) {\r\n//   const portalRoot = document.getElementById(\"portalRoot\");\r\n//   const { account, setAccount } = useContext(AccountContext);\r\n//   console.log(JSON.stringify(account));\r\n\r\n//   useEffect(() => {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n\r\n//     if (userId) {\r\n//       axios\r\n//         .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n//         .then((response) => {\r\n//           setAccount(response.data);\r\n//           console.log(response.data);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error fetching account data:\", error);\r\n//         });\r\n//     }\r\n//   }, [setAccount]);\r\n//   // const account = {\r\n//   //   userId: userId,\r\n//   //   accNumber: account.accNumber,\r\n//   //   accBalance: account.accBalance,\r\n//   //   accCreatedAt: account.accCreatedAt,\r\n//   //   accType: account.accType,\r\n//   // };\r\n//   //   axios\r\n//   //     .put(`http://localhost:8080/api/account/userid/${userId}`, account, {\r\n//   //       headers: { \"Content-Type\": \"application/json\" },\r\n//   //     })\r\n//   //     .then((response) => {\r\n//   //       console.log(response.data);\r\n//   //       console.log(account.accBalance);\r\n//   //     })\r\n//   //     .catch((error) => console.log(error));\r\n//   // }, [setAccount]);\r\n\r\n//   console.log(JSON.stringify(account));\r\n//   if (!portalRoot) {\r\n//     console.error(\"Portal root not found\");\r\n//     return null;\r\n//   }\r\n\r\n//   function handleChange(e) {\r\n//     const userId = localStorage.getItem(\"userId\");\r\n//     const updatedAccount = { ...account, accBalance: e.target.value };\r\n//     setAccount(updatedAccount);\r\n//     axios\r\n//       .put(`http://localhost:8080/api/account/userid/${userId}`)\r\n//       .then((response) => {\r\n//         setAccount(response.data);\r\n//         console.log(response.data);\r\n//         console.log(\"PUT REQUEST HAS BEEN MADE ON \" + userId);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n\r\n//     setAccount((preForm) => {\r\n//       return {\r\n//         ...preForm,\r\n//         accBalance: e.target.value,\r\n//       };\r\n//     });\r\n//   }\r\n\r\n//   const amountUpdate = async (e) => {\r\n//     e.preventDefault();\r\n//     // setAccount(e.target.value);\r\n//     setAccount((preForm) => {\r\n//       return {\r\n//         ...preForm,\r\n//         accBalance: e.target.value,\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   // on click handler\r\n//   function onClickHandler(e) {\r\n//     setDeposit(false);\r\n//     setAccount((preForm) => {\r\n//       return {\r\n//         ...preForm,\r\n//         accBalance: e.target.value,\r\n//       };\r\n//     });\r\n//   }\r\n//   // Make a POST request to deposit the amount\r\n//   console.log(account.accBalance);\r\n//   return ReactDOM.createPortal(\r\n//     <div className=\"deposit-overlay\" onClick={onClickHandler}>\r\n//       <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\r\n//         <div className=\"deposit-inner\">\r\n//           <h1>Deposit</h1>\r\n//           <label className=\"amount-details\">Amount:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"amount\"\r\n//             name=\"accBalance\"\r\n//             value={account.accBalance}\r\n//             placeholder=\"Enter Amount Here\"\r\n//             required\r\n//             onChange={amountUpdate}\r\n//           />\r\n//           <button type=\"submit\" onClick={handleChange}>\r\n//             Deposit\r\n//           </button>\r\n//           <button className=\"close-button\" onClick={() => setDeposit(false)}>\r\n//             Close\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>,\r\n//     portalRoot\r\n//   );\r\n// }\r\n\r\n// export default Deposit;\r\n\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./deposit.css\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AccountContext } from \"../Context/AccountProvider\";\r\n\r\nfunction Deposit({ setDeposit }) {\r\n  const portalRoot = document.getElementById(\"portalRoot\");\r\n  const { account, setAccount } = useContext(AccountContext);\r\n  const [inputAmount, setInputAmount] = useState(account.accBalance || \"\"); // Initialize with current balance or empty\r\n\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n    if (userId) {\r\n      axios\r\n        .get(`http://localhost:8080/api/account/userid/${userId}`)\r\n        .then((response) => {\r\n          setAccount(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching account data:\", error);\r\n        });\r\n    }\r\n  }, [setAccount]);\r\n\r\n  if (!portalRoot) {\r\n    console.error(\"Portal root not found\");\r\n    return null;\r\n  }\r\n\r\n  // Handle input change\r\n  function handleInputChange(e) {\r\n    setInputAmount(e.target.value);\r\n  }\r\n\r\n  // Handle form submit (deposit action)\r\n  function handleDeposit(e) {\r\n    e.preventDefault();\r\n    const userId = localStorage.getItem(\"userId\");\r\n\r\n    // Prepare updated account object with the new balance\r\n    const updatedAccount = { ...account, accBalance: inputAmount };\r\n\r\n    // Send PUT request to update account balance in the DB\r\n    axios\r\n      .put(\r\n        `http://localhost:8080/api/account/userid/${userId}`,\r\n        updatedAccount,\r\n        {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setAccount(response.data); // Update account in context with the response\r\n        console.log(\"Account balance updated:\", response.data);\r\n        setDeposit(false); // Close the deposit modal\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error updating account balance:\", error);\r\n      });\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"deposit-overlay\" onClick={() => setDeposit(false)}>\r\n      <div className=\"deposit-modal\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"deposit-inner\">\r\n          <h1>Deposit</h1>\r\n          <form onSubmit={handleDeposit}>\r\n            <label className=\"amount-details\">Amount:</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"amount\"\r\n              name=\"accBalance\"\r\n              value={inputAmount}\r\n              placeholder=\"Enter Amount Here\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n            <button type=\"submit\">Deposit</button>\r\n          </form>\r\n          <button className=\"close-button\" onClick={() => setDeposit(false)}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    portalRoot\r\n  );\r\n}\r\n\r\nexport default Deposit;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}